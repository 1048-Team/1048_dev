add_namespace = militem
add_namespace = militem.romanceowo
add_namespace = militem.scorched
add_namespace = militem.warm
add_namespace = militem.pinpoint

country_event = { #After being repelled by some of the forces of BAL, it is determined to turn around and take NH so that there is still a base of operations for the region
	id = militem.1
	title = militem.1.t
	desc = militem.1.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.1"}
	
	is_triggered_only = yes
	
	option = { #We shall march on their stronghold!
		name = militem.1.a
		army_experience = 10
	}
}

country_event = { #Luminous Blade leads a charge through some of NH's streets after clearing out a sniper nest, as the fighting has been slow to clear out the country
	id = militem.2
	title = militem.2.t
	desc = militem.2.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.2"}
	
	is_triggered_only = yes
	
	option = { #Her help was greatly needed!
		name = militem.2.a
		add_state_core = 28
	}
}

country_event = { #Scorched Earth takes charge now that NH has been captured and to show that he will do whatever is needed for stability, executes some of the fighters who resisted when they attacked NH
	id = militem.3
	title = militem.3.t
	desc = militem.3.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.3"}
	
	is_triggered_only = yes
	
	option = { #The executions will continue until morale improves!
		name = militem.3.a
		add_stability = 0.05
		add_manpower = -2500
	}
}

country_event = { #Warm Night meets with Scorched Earth to have only a few examples through executing some of COBSOC's remaining leaders and speaking of what will happen if they resist further
	id = militem.4
	title = militem.4.t
	desc = militem.4.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.4"}
	
	is_triggered_only = yes
	
	option = { #It would be a waste of ponypower anyway
		name = militem.4.a
		add_political_power = 25
		every_state = {
			limit = {
				is_owned_by = ROOT
			}
			add_compliance = 2
		}
	}
}

country_event = { #Scorched Earth and Luminous Blade meet in his tent, as it is still early in erecting the external basecamp, and oversee the state of the country and begin their first plans for wiping out heresy within
	id = militem.5
	title = militem.5.t
	desc = militem.5.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.5"}
	
	is_triggered_only = yes
	
	option = { #This will be more difficult than imagined
		name = militem.5.a
		add_war_support = 0.02
		add_command_power = 25
	}
}

country_event = { #Serene Shore and some of the priestesses with her, including Warm Night, preach to the citizens of NH about how they have been spoiled by luxuries and must shed themselves of them to be truly free, which confuses all the citizens since they are dirt poor
	id = militem.6
	title = militem.6.t
	desc = militem.6.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.6"}
	
	is_triggered_only = yes
	
	option = { #What the buck are they talking about?
		name = militem.6.a
		add_stability = 0.03
	}
}

country_event = { #Pinpoint first meets with Scorched Earth, and already obsesses with how much heresy she sees, and that she must fix it, which he gives her relative carte blanche on, and she pledges loyalty of all her inquisitors (for the moment)
	id = militem.7
	title = militem.7.t
	desc = militem.7.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.7"}
	
	is_triggered_only = yes
	
	option = { #We shall fix it immediately!
		name = militem.7.a
		add_political_power = 25
		random_state = {
			limit = {
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
			}
			add_resistance = -5
		}
	}
}

country_event = { #From the perspective of one of the thestral warbands that helps protect Mango Province, inquisitors and some of the Militem Solar forces descend upon them to wipe them out, and burn some of the city to cleanse it
	id = militem.8
	title = militem.8.t
	desc = militem.8.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.8"}
	
	is_triggered_only = yes
	
	option = { #Burn the bats!
		name = militem.8.a
		84 = {
			add_resistance = -10
			damage_building = {
				type = industrial_complex
				damage = 1
			}
		}
	}
}

country_event = { #Recap of an inquisitor operation with some Militem support of almost being wiped out by thestral and communist guerillas, and overview the losses and damage on both sides, since part of the jungle was burned to the ground
	id = militem.9
	title = militem.9.t
	desc = militem.9.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.9"}
	
	is_triggered_only = yes
	
	option = { #Nothing was lost of value
		name = militem.9.a
		27 = {
			add_resistance = -10
			save_current_manpower = yes
			add_manpower = -5000
			restore_previous_manpower = yes
		}
	}
}

country_event = { #As Scorched Earth prepares to lay down execution orders for the middle ranks of the commissars of NH and forced conscription, Warm Night interrupts and demands that they should be given amnesty and new positions, since she has convinced them to recant, and he can either accept or reject her
	id = militem.10
	title = militem.10.t
	desc = militem.10.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.10"}
	
	is_triggered_only = yes
	
	option = { #No! They have sinned against the Empress!
		ai_chance = { factor = 50 }
		name = militem.10.a
		add_ideas = extensive_conscription
		add_war_support = 0.05
	}
	option = { #They would be useful bodies
		ai_chance = { factor = 20 }
		name = militem.10.b
		add_ideas = limited_conscription
		add_stability = -0.03
		add_manpower = 1250
	}
}

country_event = { #Two proposals are presented to the player, speaking of how they can most utilize their limited loyal forces by either following Scorched Earth's plan of pressing into service more ponies, or Warm Night's influence in civil society to bring about a few more amenities to the common pony through labor on a new factory
	id = militem.11
	title = militem.11.t
	desc = militem.11.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.11"}
	
	is_triggered_only = yes
	
	option = { #Warm Night's will be more beneficial in the long-term
		ai_chance = { factor = 15 }
		name = militem.11.a
		one_random_industrial_complex = yes
	}
	option = { #We need more bodies. Follow Scorched Earth's plan
		ai_chance = { factor = 40 }
		name = militem.11.b
		28 = {
			create_unit = { division = "name = \"Heretic Conscripts\" division_template = \"Conscripts\" start_experience_factor = 0.1 start_equipment_factor = 0.5" owner = ROOT prioritize_location = 963 }
			create_unit = { division = "name = \"Heretic Conscripts\" division_template = \"Conscripts\" start_experience_factor = 0.1 start_equipment_factor = 0.5" owner = ROOT prioritize_location = 963 }
		}
	}
}

country_event = { #A drive for ponies to begin to recant of their materialism is undertaken by some of the most loyal of Scorched Earth's Adoratio followers, and ponies are lined up, against their will to an extent to give up some of their basic trinkets as a starting point
	id = militem.12
	title = militem.12.t
	desc = militem.12.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.12"}
	
	is_triggered_only = yes
	
	option = { #You will thank us all one day!
		name = militem.12.a
		add_ideas = MTS_stepping_stones #This will be replaced by an improved spirit from the next tree of any path (just replace it)
	}
}

country_event = { #Warm Night convinces Serene Shore that they must work to improve the lives of ponies more, and she and some other priestesses perform a healing mission on some of the injured civilians from NH's capture
	id = militem.13
	title = militem.13.t
	desc = militem.13.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.13"}
	
	is_triggered_only = yes
	
	option = { #Your thanks aren't needed!
		name = militem.13.a
		add_ideas = MTS_bridging_gaps #Same as above
	}
}

country_event = { #After their disagreements with how to establish the first parts of the Militem in New Horseleans, Warm Night finally confronts Scorched about how he is going to lead to the destruction of everypony and he has to listen to her about helping them, which can go her way or not
	id = militem.14
	title = militem.14.t
	desc = militem.14.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.14"}
	
	is_triggered_only = yes
	
	option = { #I will not let this foothold be lost!
		name = militem.14.a
		ai_chance = { factor = 75 }
		set_country_flag = MTS_scorched_earth_triumphant
		mark_focus_tree_layout_dirty = yes
	}
	option = { #You make a point. They are not ready, yet
		name = militem.14.b
		ai_chance = { factor = 35 }
		set_country_flag = MTS_warm_night_triumphant
		mark_focus_tree_layout_dirty = yes
		MTS_Warm_Night = {
			add_country_leader_role = {
				promote_leader = yes
				country_leader = {
					ideology = solarism
					expire = "1965.1.1"
					traits = { 
						sympathetic_priestess
					}
				}
			}
		}
	}
}

country_event = { #After arriving in New Horseleans, Evening Tempest gives a report of the shape of the ships she was able to take and how they will not at this time be able to stand up to BAL, and asks what the engagement philosophy should be
	id = militem.30
	title = militem.30.t
	desc = militem.30.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.30"}
	
	is_triggered_only = yes
	
	option = { #We must fight harder than ever
		name = militem.30.a
		ai_chance = {
			factor = 40
		}
		add_ideas = MTS_naval_streamlining
	}
	option = { #We will have to outmaneuver them
		name = militem.30.b
		ai_chance = {
			factor = 80
		}
		add_ideas = MTS_naval_streamlining_positioning
	}
}

country_event = { #Dockhands are surprised when soldiers begin to march onto the main docks of New Horseleans and seizing everything, and there is a small struggle to keep their own things before they are arrested or shot
	id = militem.31
	title = militem.31.t
	desc = militem.31.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.31"}
	
	is_triggered_only = yes
	
	option = { #This is now the Empress's!
		name = militem.31.a
		28 = {
			add_extra_state_shared_building_slots = 2
			add_building_construction = {
				type = dockyard
				level = 2
				instant_build = yes
			}
			add_building_construction = {
				type = naval_base
				level = 1
				instant_build = yes
				province = 963
			}
		}
	}
}

country_event = { #Evening Tempest comes to inspect some of the new ships that have been laid since they have taken over the civilian dockyards and the forepony on duty assures her that everything is to the utmost quality, and she inspects one and is suspicious of its armor, testing it and punching a hole through it, which she okays anyway since they need all the ships they can get, despite her clear irritation
	id = militem.32
	title = militem.32.t
	desc = militem.32.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.32"}
	
	is_triggered_only = yes
	
	option = { #It passes well enough
		name = militem.32.a
		add_ideas = MTS_simplified_navy
	}
}

country_event = { #Evening Tempest goes on a military exercise with some of the last of her students for the first batch of graduates for the new naval academy, and the potential admiral in charge mangles the final massively, but another takes charge to complete is safely
	id = militem.33
	title = militem.33.t
	desc = militem.33.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.33"}
	
	is_triggered_only = yes
	
	option = { #At least somepony was paying attention
		name = militem.33.a
		if = {
			limit = {
				has_idea = MTS_naval_streamlining
			}
			swap_ideas = {
				remove_idea = MTS_naval_streamlining
				add_idea = MTS_southern_naval_academy
			}
		}
		else_if = {
			limit = {
				has_idea = MTS_naval_streamlining_positioning
			}
			swap_ideas = {
				remove_idea = MTS_naval_streamlining_positioning
				add_idea = MTS_southern_naval_academy_positioning
			}
		}
		MTS_Clean_Heading = {
			add_naval_commander_role = {
				traits = { pony_race_trait green_water_expert }
				skill = 2
				attack_skill = 2
				defense_skill = 1
				planning_skill = 1
				logistics_skill = 3
			}
		}
		custom_effect_tooltip = MTS_clean_heading_stats_tt
	}
}

country_event = { #Luminous Blade handles the emergency response of the single airfield in NH after planes crashed there and she nearly kills an ace that led them there because she is suspicious of him
	id = militem.34
	title = militem.34.t
	desc = militem.34.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.34"}
	
	is_triggered_only = yes
	
	option = { #You will wish for death if you are lying
		name = militem.34.a
		add_doctrine_cost_reduction = {
			name = air_doctrine_bonus
			cost_reduction = 0.5
			uses = 1
			category = air_doctrine
		}
	}
}

country_event = { #Cleft Wing does some tests on one of the new fighter models based on low-quality materials and he has too much fun with it to the point of destroying it, since he's used as a crash test dummy
	id = militem.35
	title = militem.35.t
	desc = militem.35.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.35"}
	
	is_triggered_only = yes
	
	option = { #Can I go for another round?
		name = militem.35.a
		add_ideas = MTS_low_quality_materials
	}
}

country_event = { #Some villagers in an isolated location in the Hayseed Swamps begin their day normally before they are completely wiped out by divebombers testing new napalm weaponry on them and other targets
	id = militem.36
	title = militem.36.t
	desc = militem.36.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.36"}
	
	is_triggered_only = yes
	
	option = { #Super-effective!
		name = militem.36.a
		add_ideas = MTS_fiery_bath
	}
}

country_event = { #Cleft Wing observes as the liaison to observe the new strategic bombs using napalm to clear jungles, and also deal with a thestral village nearby, too
	id = militem.37
	title = militem.37.t
	desc = militem.37.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.37"}
	
	is_triggered_only = yes
	
	option = { #So pretty!
		name = militem.37.a
		add_ideas = MTS_swathes_of_purity
	}
}

country_event = { #A new soup kitchen that has opened in New Horseleans begins to serve ponies who are starving the most disgusting gruel that can be imagined that they say is at least able to sustain them and ponies are not happy
	id = militem.38
	title = militem.38.t
	desc = militem.38.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.38"}
	
	is_triggered_only = yes
	
	option = { #Is this really food?
		name = militem.38.a
		decrease_poverty = yes
		add_political_power = -100
	}
}

country_event = { #A priestess of the Adoratio comes into a small town in Mango Province and begins to publicly educate the ponies that listen to her, mostly about the science that Daybreaker has definitely done and the theocratic teaching they need to have knowledge
	id = militem.39
	title = militem.39.t
	desc = militem.39.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.39"}
	
	is_triggered_only = yes
	
	option = { #Facts, huh?
		name = militem.39.a
		add_ideas = MTS_religious_tutors
	}
}

country_event = { #Some of the more physically capable ponies are put to work to pay off some of their sins that they supposedly committed for living their "luxury" and are given next to no wages so they will forever be in debt to the Militem
	id = militem.40
	title = militem.40.t
	desc = militem.40.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.40"}
	
	is_triggered_only = yes
	
	option = { #Can I at least get a break?
		name = militem.40.a
		add_ideas = MTS_endentured_laborers
	}
}

country_event = { #A priestess is abruptly taken in the middle of her one services because it was clear she was living off much of the wealth that had been discovered in some of the mines of the country and trying to live anything other than a simple life
	id = militem.41
	title = militem.41.t
	desc = militem.41.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.41"}
	
	is_triggered_only = yes
	
	option = { #Can you blame a mare for wanting a nice bed?
		name = militem.41.a
		84 = {
			add_resource = {
				type = tungsten
				amount = 10
			}
		}
	}
}

country_event = { #Some citizens are rounded up in New Horseleans for refusing to give up some of their perceived luxuries to be donated to the Adoratio to then be smelted down into useful items, and punishment is doled out appropriately as determined by the inquisitor there
	id = militem.42
	title = militem.42.t
	desc = militem.42.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.42"}
	
	is_triggered_only = yes
	
	option = { #You are still too well off!
		name = militem.42.a
		add_ideas = MTS_mandatory_charity
	}
}

country_event = { #As some ponies come to the soup lines of the Adoratio they beg for something better, and one of the priestesses lists off things they should be thankful for, including their very existence, implying they will be killed if they complain much more
	id = militem.43
	title = militem.43.t
	desc = militem.43.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.43"}
	
	is_triggered_only = yes
	
	option = { #Now, don't you feel better?
		name = militem.43.a
		decrease_poverty = yes
	}
}

country_event = { #Event for choosing a name for New Baltimare, either renaming it to Baltimare, Light's Point, or Molten Bay
	id = militem.98
	title = militem.98.t
	desc = militem.98.d
	picture = GFX_event_solarempire
	immediate = {log="[GetDateText]: [Root.GetName]: event militem.98"}

	trigger = {
		tag = MTS
		owns_state = 1214
	}

	option = { #Baltimare
		name = militem.98.a
		add_political_power = 5
		set_province_name = { id = 13011 name = MTS_baltimare }
	}
	option = { #Light's Point
		name = militem.98.b
		set_province_name = { id = 13011 name = MTS_lights_point }
	}
	option = { #Molten Bay
		name = militem.98.c
		set_province_name = { id = 13011 name = MTS_molten_bay }
	}
}

country_event = { #Event for choosing a name for Red Glory, either reverting to Tenochtitlan, Faithful Beacon, Brilliant Dawn, Red Glory, or either Immolation (Scorched), Empress's Embrace (Warm), or Castellum Inquisitionis (Pinpoint)
	id = militem.99
	title = militem.99.t
	desc = militem.99.d
	picture = GFX_event_solarempire
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.99"}
	
	is_triggered_only = yes
	
	option = { #Red Glory
		name = militem.99.a
		add_stability = -0.02
		add_political_power = 25
	}
	option = { #Tenochtitlan
		name = militem.99.b
		add_political_power = 10
		set_province_name = { id = 8622 name = MTS_tenochtitlan }		
	}
	#option = { #Faithful Beacon
	#	name = militem.99.c
	#}
	option = { #Brilliant Dawn
		name = militem.99.e
		add_war_support = 0.01
		add_stability = 0.01
		set_province_name = { id = 8622 name = MTS_brilliant_dawn }
	}
	option = { #Immolation
		name = militem.99.f
		trigger = {
			has_country_leader = { character = EQS_Scorched_Earth ruling_only = yes }
		}
		add_war_support = 0.02
		set_province_name = { id = 8622 name = MTS_immolation }
	}
	option = { #Empress's Embrace
		name = militem.99.g
		trigger = { has_country_leader = { character = MTS_Warm_Night  ruling_only = yes } }
		add_stability = 0.02
		set_province_name = { id = 8622 name = MTS_empresss_embrace }
	}
	option = { #Castellum Inquisitionis
		name = militem.99.h
		trigger = { has_country_leader = { character = MTS_Pinpoint ruling_only = yes } }
		add_political_power = 50
		set_province_name = { id = 8622 name = MTS_castellum_inquisitionis }
	}
}

country_event = { #Report of taking the city of New Baltimare and how there is currently resistance in the city, and that the player will have the option of moving to New Baltimare, despite the chaos, or staying in New Horseleans. The option to move to New Baltimare will always remain an option, though
	id = militem.100
	title = militem.100.t
	desc = militem.100.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.100"}
	
	trigger = {
		tag = MTS
		controls_state = 1214
	}
	fire_only_once = yes
	
	option = { #We must not be afraid of a few rebels.
		name = militem.100.a
		set_capital = { state = 1214 }
		add_stability = -0.02
		add_political_power = 20
		if = {
			limit = {
				has_war = no
			}
			add_state_core = 1214
		}
		else = {
			1214 = {
				add_resistance = -25
				add_compliance = 15
			}
		}
	}
	option = { #We shall wait until the situation has calmed on the peninsula.
		name = militem.100.b
		set_country_flag = MTS_didnt_move_capital
		add_stability = 0.02
		add_political_power = -20
	}
}

#Scorched Earth#
country_event = { #After dealing with the issues with Warm Night, Scorched Earth meets with Luminous Blade to discuss plans for getting what territory the Militem has to prepare for war with the South-East, and she expresses complete trust in the Empress and desire to purge, which makes him proud of her
	id = militem.scorched.1
	title = militem.scorched.1.t
	desc = militem.scorched.1.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.1"}
	
	is_triggered_only = yes
	
	option = { #Just what I was thinking.
		name = militem.scorched.1
		add_war_support = 0.05
	}
}

country_event = { #Scorched attempts to start penning some different speeches to the ponies of Militem Solar about how they ahve been corrupted and limited by their wealth and opulence, but he does find it a bit difficult, since they are close to some of his ideal asceticism already
	id = militem.scorched.2
	title = militem.scorched.2.t
	desc = militem.scorched.2.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.2"}
	
	is_triggered_only = yes
	
	option = { #Maybe if they lose a bit more money?
		name = militem.scorched.2
		add_stability = 0.03
	}
}

country_event = { #A recruit, forced by Militem Solar, is given his first meal as a follower of Daybreaker, and it is barely enough to sustain him, which he complains about
	id = militem.scorched.3
	title = militem.scorched.3.t
	desc = militem.scorched.3.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.3"}
	
	is_triggered_only = yes
	
	option = { #So hungry!
		name = militem.scorched.3
		add_stability = -0.03
		add_manpower = 10000
		28 = { create_unit = { division = "division_template = \"Legio Division\" start_experience_factor = 0.1" owner = MTS prioritize_location = 963 } }
	}
}

country_event = { #Follow a pony who hopes that they can be accepted as a follower of Daybreaker, but they are slowly starving theirself in their fast to prove their faith, and they break it while being observed and are punished accordingly
	id = militem.scorched.4
	title = militem.scorched.4.t
	desc = militem.scorched.4.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.4"}
	
	is_triggered_only = yes
	
	option = { #I just needed a bite!
		name = militem.scorched.4
		add_stability = 0.05
	}
}

country_event = { #Groups of soldiers start to raid some of the neighborhoods of New Horseleans to consficate some of the different utensils or other metal-based possessions to use for weaponry to feed Militem Solar
	id = militem.scorched.5
	title = militem.scorched.5.t
	desc = militem.scorched.5.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.5"}
	
	is_triggered_only = yes
	
	option = { #These will work for now.
		name = militem.scorched.5
		add_ideas = MTS_trinkets_banned
	}
}

country_event = { #Scorched arrives at one of the training grounds in New Horseleans and sees how the recruits are far from the stock that he wants, and he gives a harsh speech about what awaits them if they don't serve the Empress with all their heart and body
	id = militem.scorched.6
	title = militem.scorched.6.t
	desc = militem.scorched.6.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.6"}
	
	is_triggered_only = yes
	
	option = { #She will purify you otherwise, am I clear?
		name = militem.scorched.6
		add_ideas = MTS_warriors_call
	}
}

country_event = { #Luminous learns about how Scorched is planning to teach self-flagellation of some of the newest followers, as it is a way to further purge of any excesses by excess health even, and she tells him it's a stupid to continue, to weaken themselves before the war, which he agrees to
	id = militem.scorched.7
	title = militem.scorched.7.t
	desc = militem.scorched.7.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.7"}
	
	is_triggered_only = yes
	
	option = { #Perhaps you have a point.
		name = militem.scorched.7
		add_ideas = MTS_contemplative_citizenry
	}
}

country_event = { #Scorched leads a service of some different new followers on how to properly self-flagellate, and he gets more fanatical about how it is to keep one pure, and gives an example on himself, as another fails and almost kills themselves
	id = militem.scorched.8
	title = militem.scorched.8.t
	desc = militem.scorched.8.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.8"}
	
	is_triggered_only = yes
	
	option = { #Was a waste of space, anyway.
		name = militem.scorched.8
		add_ideas = MTS_blood_for_sins
	}
}

country_event = { #Some ponies, completely destitute, come to a rather well-off looking Adoratio church, begging for some support, and the priestess gives them nothing but platitudes about how blessed they are, as they are turned away and given nothing in return
	id = militem.scorched.9
	title = militem.scorched.9.t
	desc = militem.scorched.9.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.9"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.scorched.9
		two_random_industrial_complex = yes
		increase_poverty = yes
	}
}

country_event = { #An artillery officer is overly excited as he watches an artillery barrage to test out new types of shells to burn out heretics, and he is pleased to report it is a complete success as he sees some of the destruction
	id = militem.scorched.10
	title = militem.scorched.10.t
	desc = militem.scorched.10.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.10"}
	
	is_triggered_only = yes
	
	option = { #Let them burn...
		name = militem.scorched.10
		add_ideas = MTS_napalm_shells
	}
}

country_event = { #Scorched Earth assembles in front of some of his soldiers, and he gives them one final speech about how their cause is great, and that they will defeat all of the Empress's enemies and restore the Empire's strength, while showing their righteous, ascetic cause, as it is their destiny to win
	id = militem.scorched.11
	title = militem.scorched.11.t
	desc = militem.scorched.11.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.11"}
	
	is_triggered_only = yes
	
	option = { #Sol Invictus!
		name = militem.scorched.11
		every_country = {
			limit = {
				is_in_array = {
					array = global.southeast_countries
					value = THIS.id
				}
				exists = yes
				NOT = { tag = ROOT }
			}
			ROOT = {
				create_wargoal = {
					type = annex_everything
					target = PREV
				}
			}
		}
	}
}

country_event = { #Some of Scorched Earth's soldiers take the last few holdouts of resistance in New Baltimare around the palace of Cobalt Hoof and after it is disposed of, Scorched sees how it will make the perfect new capital, and agrees to move his station there after pressure from Luminous Blade
	id = militem.scorched.12
	title = militem.scorched.12.t
	desc = militem.scorched.12.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.12"}
	
	trigger = {
		tag = MTS
		has_country_leader = { character = EQS_Scorched_Earth ruling_only = yes }
		all_of_scopes = {
			array = global.southeast_countries
			OR = {
				original_tag = MTS
				exists = no
			}
		}
	}
	fire_only_once = yes
	
	option = { #This should do wonders
		name = militem.scorched.12.a
		set_country_flag = MTS_conquered_southeast
		mark_focus_tree_layout_dirty = yes
		custom_effect_tooltip = MTS_new_ponies_burn_tt
	}
}

country_event = { #Scorched Earth begins a speech from his new headquarters in the COBSOC building, speaking to the loyal soldiers who followed him into hell and back, and that they have a long road ahead, as they have integrated more uniniated into Militem Solar, and they will have work ahead to bring them into the fold, effectively starting over in the societal front, which he isn't happy about
	id = militem.scorched.13
	title = militem.scorched.13.t
	desc = militem.scorched.13.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.13"}
	
	is_triggered_only = yes
	
	option = { #They will all see the light!
		name = militem.scorched.13.a
		add_stability = 0.05
		remove_ideas = MTS_economic_minimalism
		if = {
			limit = {
				has_idea = MTS_lean_supply_lines
			}
			remove_ideas = MTS_lean_supply_lines
		}
	}
}

country_event = { #A sergeant goes over some of the new punishments for the overly strict guidelines for being a soldier of the Militem, and takes great pleasure in knowing that he'll be able to dole it out with impunity
	id = militem.scorched.14
	title = militem.scorched.14.t
	desc = militem.scorched.14.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.14"}
	
	is_triggered_only = yes
	
	option = { #I will enjoy this...
		name = militem.scorched.14.a
		add_ideas = MTS_strict_guidelines
	}
}

country_event = { #After a long training session, some soldiers are trying to take a break and their CO believes that they are slacking off and demands they do more, which they refuse since they're at the point of exhaustion, and the CO decides to take matter into his hooves to punish them for insolence
	id = militem.scorched.15
	title = militem.scorched.15.t
	desc = militem.scorched.15.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.15"}
	
	is_triggered_only = yes
	
	option = { #Perhaps I wasn't clear?
		name = militem.scorched.15.a
		add_ideas = MTS_harsh_guidelines
	}
}

country_event = { #A couple of recruits are thrust through various obstacles, even to the point of running through literal fire in order to prove that they will do anything, sacrifice anything, for Daybreaker, so they are nothing but weapons of her will
	id = militem.scorched.16
	title = militem.scorched.16.t
	desc = militem.scorched.16.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.16"}
	
	is_triggered_only = yes
	
	option = { #Maybe a bit extreme?
		name = militem.scorched.16.a
		add_ideas = MTS_painful_luxury
	}
}

country_event = { #Follow a couple of ponies as they try to flee from New Baltimare as the city is scrounged through for any and all metals that can be taken and melted down for weaponry, as the items outside of basic utensils are considered luxuries, which ponies should be cleansed of, and they are captured and brought to be excuted for harboring heresy
	id = militem.scorched.17
	title = militem.scorched.17.t
	desc = militem.scorched.17.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.17"}
	
	is_triggered_only = yes
	
	option = { #We already had nothing!
		name = militem.scorched.17.a
		add_timed_idea = {
			idea = MTS_melting_luxuries
			days = 730
		}
	}
}

country_event = { #One of the few pre-Militem factory overseers is brought into his office to discuss how he has been falling behind, since he isn't treating all his workers like chattel, which he tries to argue against before he is relieved of his duty, and readied for an execution
	id = militem.scorched.18
	title = militem.scorched.18.t
	desc = militem.scorched.18.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.18"}
	
	is_triggered_only = yes
	
	option = { #Meet your quota, and you might be allowed to leave.
		name = militem.scorched.18.a
		swap_ideas = {
			remove_idea = MTS_simplified_weapons_factories
			add_idea = MTS_unending_labor
		}
	}
}

country_event = { #A few thestrals watch from the shadows as some of their relatives are led away into a concentration camp for other thestrals, and they believe they are safe so they spring their trap, only to be caught unaware by some soldiers and inquisitors who had detected them earlier, and they are also brought to the camp to be utilized
	id = militem.scorched.19
	title = militem.scorched.19.t
	desc = militem.scorched.19.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.19"}
	
	is_triggered_only = yes
	
	option = { #Night Goddess save us...
		name = militem.scorched.19.a
		add_ideas = MTS_thestral_chattel
	}
}

country_event = { #Scorched receives complete silence after he sends a missive to the Solar Empire, stating how he has retaken the South-East and requests to be brought back, and concludes he needs to do more to prove his loyalty and the superiority of his Solarism compared to the mainline, missing that it is because of that he is rejected
	id = militem.scorched.20
	title = militem.scorched.20.t
	desc = militem.scorched.20.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.20"}
	
	is_triggered_only = yes
	
	option = { #They will surely see reason eventually.
		name = militem.scorched.20.a
		add_political_power = -50
		add_stability = -0.03
		add_war_support = 0.05
	}
}

country_event = { #Some priestesses begin another raid for taking different possessions from the populace, now that they have far more to pilfer, and during it all, they are preached at about how they are being liberated from the temptations of ownership, which they don't believe at all
	id = militem.scorched.21
	title = militem.scorched.21.t
	desc = militem.scorched.21.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.21"}
	
	is_triggered_only = yes
	
	option = { #Perhaps you need more encouragement?
		name = militem.scorched.21.a
		add_ideas = MTS_no_loss_in_the_empress
	}
}

country_event = { #A laypony barges into the church that his guiding priestess resides in, and he is growing more desperate because he's growing ravenously hungry from his fast, and she encourages him, after seeing him, to not do so, at the point of a sword, even
	id = militem.scorched.22
	title = militem.scorched.22.t
	desc = militem.scorched.22.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.22"}
	
	is_triggered_only = yes
	
	option = { #Don't make a mistake.
		name = militem.scorched.22.a
		add_ideas = MTS_willful_suffering
	}
}

country_event = { #Follow a priestess, as well as some of her fellow priestesses, as they go to extreme lengths to deny themselves things, including food and other basic needs, which as they grow more exhausted, believe that they are transcending to become closer to Daybreaker, although they really are not
	id = militem.scorched.23
	title = militem.scorched.23.t
	desc = militem.scorched.23.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.23"}
	
	is_triggered_only = yes
	
	option = { #Yes, I shall become one with her!
		name = militem.scorched.23.a
		add_tech_bonus = {
			name = racial_bonus
			uses = 2
			bonus = 1
			category = race_tech
		}
	}
}

country_event = { #A group of inquisitors, who have been effectively driven into a fury because of their hunger and other sufferings with no access to even basic needs prepare to raid and destroy a town that has been declared harboring heretics, and they go about destroying it on their own
	id = militem.scorched.24
	title = militem.scorched.24.t
	desc = militem.scorched.24.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.24"}
	
	is_triggered_only = yes
	
	option = { #Taste the Empress's sustenance!
		name = militem.scorched.24.a
		add_tech_bonus = {
			name = magic_bonus
			uses = 2
			bonus = 1
			category = magical_tech
		}
	}
}

country_event = { #Follow soldiers of Scorched Earth as they charge through some of the wards in New Baltimare to clear out whatever resistance might still be hiding there, since it's a large city, and they effectively massacre multiple buildings because of their belief those were filled with rebels
	id = militem.scorched.25
	title = militem.scorched.25.t
	desc = militem.scorched.25.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.25"}
	
	is_triggered_only = yes
	
	option = { #This will be a nice place to call home.
		name = militem.scorched.21.a
		add_state_core = 1214
	}
}

country_event = { #A couple of prisoners, who have been in the prison camps for a while, are brought forward to finally be examined on how useful they would be for labor, and all the while demeaned for fighting back
	id = militem.scorched.26
	title = militem.scorched.26.t
	desc = militem.scorched.26.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.26"}
	
	is_triggered_only = yes
	
	option = { #Fine specimens, of useless flesh sacks!
		name = militem.scorched.26.a
		add_ideas = MTS_prisons_for_a_purpose
	}
}

country_event = { #One officer of Militem Solar grows more annoyed about her forced laborers, because they are beginning to fade since they are being tasked to death, and she starts to punish them even worse, with the intent to kill them, either then, or with work
	id = militem.scorched.27
	title = militem.scorched.27.t
	desc = militem.scorched.27.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.27"}
	
	is_triggered_only = yes
	
	option = { #The beatings will continue until the task is finished!
		name = militem.scorched.27.a
		1214 = {
			add_extra_state_shared_building_slots = 1
		}
		13 = {
			add_extra_state_shared_building_slots = 1
		}
		15 = {
			add_extra_state_shared_building_slots = 2
		}
		221 = {
			add_extra_state_shared_building_slots = 1
		}
		16 = {
			add_extra_state_shared_building_slots = 1
		}
		28 = {
			add_extra_state_shared_building_slots = 2
		}
	}
}

country_event = { #A pony struggles against being dragged away after being determined to no longer be fit for service, as he is seen as too weak or the like, and he is dazed so that he may be executed cleanly and efficiently and remove one more mouth to feed for the country
	id = militem.scorched.28
	title = militem.scorched.28.t
	desc = militem.scorched.28.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.28"}
	
	is_triggered_only = yes
	
	option = { #Always worse when they struggle.
		name = militem.scorched.28.a
		every_state = {
			limit = {
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
			}
			add_compliance = 5
			add_resistance = -10
		}
	}
}

country_event = { #A brief missive is given from the chosen scribe of Militem Solar to Scorched Earth around the techniques of filtering ponies into different cohorts of fit or unfit, and how it has improved Militem Solar's ability to do work for little effort
	id = militem.scorched.29
	title = militem.scorched.29.t
	desc = militem.scorched.29.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.29"}
	
	is_triggered_only = yes
	
	option = { #Some might call it deplorable; I call it practical.
		name = militem.scorched.29.a
		swap_ideas = {
			remove_idea = MTS_prisons_for_a_purpose
			add_idea = MTS_prisons_for_a_purpose_2
		}
	}
}

country_event = { #An artillery command crew watches as they use some of their guns to begin to level parts of the jungle, which are believed to harbor thestrals, and the head officer thinks he hears something, shortly before thestrals break through some of the jungle to attack, to try and keep their homes safe
	id = militem.scorched.30
	title = militem.scorched.30.t
	desc = militem.scorched.30.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.30"}
	
	is_triggered_only = yes
	
	option = { #Flushed them out!
		name = militem.scorched.30.a
		add_ideas = MTS_clearing_filth
	}
}

country_event = { #Follow some thestrals on the ground as Scorched begins to do a massive bombing and flushing out campaign of Ayacachtli, since it is the largest thestral settlement of the peninsula, and he targets the temple, along with other things in the city, as he lays waste to tens of thousands of lives
	id = militem.scorched.31
	title = militem.scorched.31.t
	desc = militem.scorched.31.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.31"}
	
	is_triggered_only = yes
	
	option = { #May the sun swallow him whole!
		name = militem.scorched.31.a
		every_state = {
			limit = {
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
				NOT = { state = 30 }
			}
			add_compliance = 5
			add_resistance = -10
		}
		save_current_manpower = yes
		30 = {
			add_compliance = 5
			add_resistance = 15
			add_manpower = -78372
		}
		restore_previous_manpower = yes
	}
}

country_event = { #Follow a bomber pilot as he goes over the jungle, watching for his location to drop his napalm bombs and begin to flush out more thestrals or burn them alive, and he has a moment's hesitation, although he ultimately goes through with it, since they're spawn of the devil, Nightmare Moon
	id = militem.scorched.32
	title = militem.scorched.32.t
	desc = militem.scorched.32.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.32"}
	
	is_triggered_only = yes
	
	option = { #They will be purified by the Flame!
		name = militem.scorched.32.a
		every_state = {
			limit = {
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
			}
			add_compliance = 5
			add_resistance = -5
		}
	}
}

country_event = { #A new series of guidelines are published after the proven effectiveness of flame weaponry against heretics and thestrals, stating some of the benefits, as well; plus there are a few jabs at the state of the thestrals, and how they are pathetic without the Empress
	id = militem.scorched.33
	title = militem.scorched.33.t
	desc = militem.scorched.33.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.33"}
	
	is_triggered_only = yes
	
	option = { #It's super effective.
		name = militem.scorched.33.a
		swap_ideas = {
			remove_idea = MTS_clearing_filth
			add_idea = MTS_clearing_filth_2
		}
	}
}

country_event = { #Scorched uncharacteristically grows anxious when he pens a letter to the Solar Empire to state that the South-East has been stabilized, and can be brought back into the fold, as he knows that his actions are a bit different from mainstream, which is partly why he left in the first place
	id = militem.scorched.34
	title = militem.scorched.34.t
	desc = militem.scorched.34.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.34"}
	
	is_triggered_only = yes
	
	option = { #Hopefully the Empress is feeling merciful...
		name = militem.scorched.34.a
		SLE = { country_event = militem.scorched.35 }
	}
}

country_event = { #A missive from Scorched Earth arrives in the Solar Empire, stating that they seek to return to the fold, as the nation has significantly different beliefs than the main Solar Empire
	id = militem.scorched.35
	title = militem.scorched.35.t
	desc = militem.scorched.35.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.35"}
	
	is_triggered_only = yes
	
	option = { #Sweep this under the rug and deny that he ever served.
		name = militem.scorched.35.a
		ai_chance = {
			factor = 30
			modifier = {
				has_country_leader = { character = EQS_Aurora_Shinespark ruling_only = yes }
				factor = 1.5
			}
		}
		MTS = {
			country_event = {
				id = militem.scorched.36
				days = 3
				random_days = 5
			}
			set_country_flag = MTS_EQS_rejected
		}
	}
	option = { #We should welcome this servant back under our wing.
		name = militem.scorched.35.b
		ai_chance = {
			factor = 60
			modifier = {
				has_country_leader = { character = EQS_Aurora_Shinespark ruling_only = yes }
				factor = 0.5
			}
		}
		MTS = {
			country_event = {
				id = militem.scorched.36
				days = 3
				random_days = 5
			}
			set_country_flag = MTS_EQS_accepted
		}
	}
}

country_event = { #A missive is returned by the Solar Empire, directly with either a single condemnation and rejection or a short acceptance
	id = militem.scorched.36
	title = {
		text = militem.scorched.36.t.a
		trigger = {
			has_country_flag = MTS_EQS_accepted
		}
	}
	title = {
		text = militem.scorched.36.t.b
		trigger = {
			has_country_flag = MTS_EQS_rejected
		}
	}
	desc = {
		text = militem.scorched.36.d.a
		trigger = {
			has_country_flag = MTS_EQS_accepted
		}
	}
	desc = {
		text = militem.scorched.36.d.b
		trigger = {
			has_country_flag = MTS_EQS_rejected
		}
	}
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.36"}
	
	is_triggered_only = yes
	
	option = { #Praise the Empress!
		name = militem.scorched.36.a
		trigger = {
			has_country_flag = MTS_EQS_accepted
		}
		mark_focus_tree_layout_dirty = yes
	}
	option = { #What did we do wrong?
		name = militem.scorched.36.b
		trigger = {
			has_country_flag = MTS_EQS_rejected
		}
		hidden_effect = {
			country_event = {
				id = militem.scorched.49
				days = 3
				random_days = 3
			}
		}
	}
}

country_event = { #With his acceptance secured to be part of the Empire, Scorched excitedly begins to task himself anew on making the region a perfect Ordo for the Empire to integrate
	id = militem.scorched.37
	title = militem.scorched.37.t
	desc = militem.scorched.37.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.37"}
	
	is_triggered_only = yes
	
	option = { #They will accept her, surely!
		name = militem.scorched.37.a
		set_cosmetic_tag = MTS_SOL_puppet
	}
}

country_event = { #Scorched learns about how with the war over and there being no immediate risk for further conflict, since the Empire accepted them, the economy is beginning to collapse since nopony is able to sell anything of worth to the Empire
	id = militem.scorched.38
	title = militem.scorched.38.t
	desc = militem.scorched.38.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.38"}
	
	is_triggered_only = yes
	
	option = { #I didn't see this coming...
		name = militem.scorched.38.a
		add_ideas = MTS_reality_strikes
	}
}

country_event = { #Scorched learns about how violence is spreading in some of the towns and cities aside from New Baltimare, because of the fact that with no way to make money or to even provide sustenance farming for themselves, ponies are starving and hate the Empress, which floors him
	id = militem.scorched.39
	title = militem.scorched.39.t
	desc = militem.scorched.39.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.39"}
	
	is_triggered_only = yes
	
	option = { #They should be praising her name!
		name = militem.scorched.39.a
		add_ideas = MTS_untrusted_goddess
	}
}

country_event = { #A priestess leads Scorched Earth and Luminous through a hospital, filled with sick ponies, who are to the point of complete starvation, due to malnutrition from the recommended diet of the Ordo, which is not effective at all
	id = militem.scorched.40
	title = militem.scorched.40.t
	desc = militem.scorched.40.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.40"}
	
	is_triggered_only = yes
	
	option = { #But we are healthy!
		name = militem.scorched.40.a
		add_ideas = MTS_malnourished_populace
	}
}

country_event = { #Although he is not happy with doing so, Scorched Earth agrees to work with Warm Night on drafting some different ways to treat the economic problems of the country, since his plans always ended in failure
	id = militem.scorched.41
	title = militem.scorched.41.t
	desc = militem.scorched.41.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.41"}
	
	is_triggered_only = yes
	
	option = { #But if she suggests heresy, kill her.
		name = militem.scorched.41.a
		add_ideas = MTS_loosened_asceticism
	}
}

country_event = { #A few ponies, who believe that they will never have any fun again, are surprised when one of their corner shops is yet again something purely for entertainment, such as movies or music, and they are overly cautious at first, since they think it an inquisitor trap, but it is not, and they finally have a chance to relax
	id = militem.scorched.42
	title = militem.scorched.42.t
	desc = militem.scorched.42.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.42"}
	
	is_triggered_only = yes
	
	option = { #We almost forgot what it was like!
		name = militem.scorched.42.a
		two_random_industrial_complex = yes
		two_random_arms_factory = yes
	}
}

country_event = { #Follow a worker as he is given a new job to labor in the interior of the peninsula, because of the requirement for a new railroad and highway network to be built, so that the entire peninsula can be connected, since it is still not the case
	id = militem.scorched.43
	title = militem.scorched.43.t
	desc = militem.scorched.43.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.43"}
	
	is_triggered_only = yes
	
	option = { #I'm melting out here...
		name = militem.scorched.36.a
		every_state = {
			limit = {
				is_core_of = ROOT
				is_owned_by = ROOT
				infrastructure < 5
			}
			add_building_construction = {
				type = infrastructure
				level = 1
				instant_build = yes
			}
		}
		build_railway = {
			level = 2
			start_province = 586
			target_province = 13011
		}
	}
}

country_event = { #Scorched Earth oversees some of the final inspections of supposedly the absolute best of his Ordo, as Daybreaker or the Princess-Regent will be visiting the Ordo soon, and he is nervous that it will not be enough, and he grills them far harshly than ever before, due to his worries
	id = militem.scorched.44
	title = militem.scorched.44.t
	desc = militem.scorched.44.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.44"}
	
	is_triggered_only = yes
	
	option = { #You call yourself soldiers?!
		name = militem.scorched.44.a
		custom_effect_tooltip = MTS_elite_poners_tt
		hidden_effect = {
			division_template = {
				name = "Ordo Vanguards"
				is_locked = yes
				division_names_group = EQS_INF_01
				priority = 2
				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
					infantry = { x = 0 y = 2 }
					infantry = { x = 0 y = 3 }
					infantry = { x = 1 y = 0 }
					infantry = { x = 1 y = 1 }
					infantry = { x = 1 y = 2 }
					infantry = { x = 1 y = 3 }
					artillery_brigade = { x = 2 y = 0 }
					artillery_brigade = { x = 2 y = 1 }
					motorized = { x = 3 y = 0 }
					motorized = { x = 3 y = 1 }
					motorized = { x = 3 y = 2 }
					motorized = { x = 3 y = 3 }
				}
				support = {
					anti_air = { x = 0 y = 0 }
					engineer = { x = 0 y = 1 }
					recon = { x = 0 y = 2 }
				}
			}
			16 = {
				create_unit = { division = "name = \"Legio I - Solaris\" division_template = \"Ordo Vanguards\" start_experience_factor = 1 start_equipment_factor = 1" owner = ROOT prioritize_location = 8622 }
				create_unit = { division = "name = \"Legio II - Deus\" division_template = \"Ordo Vanguards\" start_experience_factor = 0.75 start_equipment_factor = 1" owner = ROOT prioritize_location = 8622 }
				create_unit = { division = "name = \"Legio III - Honoria\" division_template = \"Ordo Vanguards\" start_experience_factor = 0.75 start_equipment_factor = 1" owner = ROOT prioritize_location = 8622 }
				create_unit = { division = "name = \"Legio X - Sanctus\" division_template = \"Ordo Vanguards\" start_experience_factor = 0.75 start_equipment_factor = 1" owner = ROOT prioritize_location = 8622 }
			}
		}
	}
}

country_event = { #Evening Tempest steps onto the new flagship of the Ordo, as it was designed after the Daybreak, although with much less firepower, and she is proud of the accomplishments of the Ordo, as she orders some test fires of the guns
	id = militem.scorched.45
	title = militem.scorched.45.t
	desc = militem.scorched.45.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.45"}
	
	is_triggered_only = yes
	
	option = { #Kaboom, baby.
		name = militem.scorched.45.a
		custom_effect_tooltip = MTS_boom_boom_ships_tt
		hidden_effect = {
			if = {
				limit = {
					has_dlc = "Man the Guns"
				}
				create_equipment_variant = {
					name = "Australis Class"
					type = ship_hull_heavy_3
					name_group = SOL_BB_HISTORICAL
					modules = {
						fixed_ship_battery_slot = ship_heavy_battery_3
						fixed_ship_anti_air_slot = ship_anti_air_2
						fixed_ship_fire_control_system_slot = ship_fire_control_system_1
						fixed_ship_radar_slot = ship_radar_2
						fixed_ship_engine_slot = heavy_ship_engine_3
						fixed_ship_secondaries_slot = ship_secondaries_2
						fixed_ship_armor_slot = ship_armor_bb_2
						front_1_custom_slot = ship_heavy_battery_2
						mid_1_custom_slot = ship_airplane_launcher_1
						mid_2_custom_slot = ship_anti_air_2
						mid_3_custom_slot = ship_secondaries_2
						rear_1_custom_slot = ship_heavy_battery_2
					}
				}
				create_equipment_variant = {
					name = "Aurora Class"
					type = ship_hull_light_3
					name_group = SOL_DD_HISTORICAL
					modules = {
						fixed_ship_battery_slot = ship_light_battery_3
						fixed_ship_engine_slot = light_ship_engine_3
						fixed_ship_anti_air_slot = ship_anti_air_2
						fixed_ship_fire_control_system_slot = ship_torpedo_data_computer_1
						fixed_ship_radar_slot = ship_radar_2
						fixed_ship_torpedo_slot = ship_torpedo_3
						rear_1_custom_slot = ship_torpedo_3
						mid_1_custom_slot = ship_torpedo_3
						front_1_custom_slot = ship_anti_air_2
					}
				}
				create_ship = {
					type = ship_hull_heavy_3
					equipment_variant = "Australis Class"
				}
				create_ship = {
					type = ship_hull_light_3
					equipment_variant = "Aurora Class"
				}
				create_ship = {
					type = ship_hull_light_3
					equipment_variant = "Aurora Class"
				}
				create_ship = {
					type = ship_hull_light_3
					equipment_variant = "Aurora Class"
				}
				create_ship = {
					type = ship_hull_light_3
					equipment_variant = "Aurora Class"
				}
				create_ship = {
					type = ship_hull_light_3
					equipment_variant = "Aurora Class"
				}
			}
			else = {
				create_equipment_variant = {
					name = "Australis Class"
					type = battleship_3
					upgrades = {
						ship_gun_upgrade = 2
						ship_armor_upgrade = 1
						ship_anti_air_upgrade = 1
						ship_engine_upgrade = 1
						ship_reliability_upgrade = 2
					}
				}
				create_ship = {
					type = battleship_3
					equipment_variant = "Australis Class"
				}
				create_ship = {
					type = destroyer_3
				}
				create_ship = {
					type = destroyer_3
				}
				create_ship = {
					type = destroyer_3
				}
				create_ship = {
					type = destroyer_3
				}
				create_ship = {
					type = destroyer_3
				}
			}
		}
	}
}

country_event = { #Scorched puts down a pen as he finishes the last of the paperwork that needs to be done to reintegrate the Ordo into the Empire, and he believes that, in the end, he has done good work, if not initially what he planned; he has seen how his ideas aren't quite as they should be, and when Luminous enters, he states they will return changed ponies, and that they will still serve the Empire, as friends 
	id = militem.scorched.46
	title = militem.scorched.46.t
	desc = {
		text = militem.scorched.46.d.a
		trigger = {
			OR = {
				has_completed_focus = MTS_ultimate_secret
				has_completed_focus = MTS_ultimate_truth
			}
		}
	}
	desc = {
		text = militem.scorched.46.d.b
		trigger = {
			NOT = { has_completed_focus = MTS_ultimate_truth }
			NOT = { has_completed_focus = MTS_ultimate_secret }
		}
	}
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.42"}
	
	is_triggered_only = yes
	
	option = { #Shall we go?
		name = militem.scorched.46.a
		custom_effect_tooltip = MTS_maybe_good_ending_tt
		hidden_effect = {
			SLE = {
				country_event = militem.scorched.47
			}
		}
	}
}

country_event = { #The ruler of the Empire is informed how the South-East has finished its restructuring and that the region is now back under their control, with either Scorched and Luminous returning for service, or missing in action
	id = militem.scorched.47
	title = militem.scorched.47.t
	desc = {
		text = militem.scorched.47.d.a
		trigger = {
			MTS = {
				OR = {
					has_completed_focus = MTS_ultimate_secret
					has_completed_focus = MTS_ultimate_truth
				}
			}
		}
	}
	desc = {
		text = militem.scorched.47.d.b
		trigger = {
			MTS = {
				NOT = { has_completed_focus = MTS_ultimate_secret }
				NOT = { has_completed_focus = MTS_ultimate_truth }
			}
		}
	}
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.47"}
	
	is_triggered_only = yes
	
	option = { #We welcome them back into the fold.
		name = militem.scorched.47.a
		trigger = {
			MTS = {
				NOT = { has_completed_focus = MTS_ultimate_secret }
				NOT = { has_completed_focus = MTS_ultimate_truth }
			}
		}
		MTS = {
			EQS_Scorched_Earth = { set_nationality = ROOT }
			EQS_Luminous_Blade = { set_nationality = ROOT }
		}
		ROOT = {
			annex_country = {
				target = MTS
				transfer_troops = yes
			}
		}
		every_state = {
			limit = {
				is_core_of = MTS
			}
			add_core_of = ROOT
		}
	}
	option = { #Where could they have gone?
		name = militem.scorched.47.b
		trigger = {
			MTS = {
				OR = {
					has_completed_focus = MTS_ultimate_secret
					has_completed_focus = MTS_ultimate_truth
				}
			}
		}
		ROOT = {
			annex_country = {
				target = MTS
				transfer_troops = yes
			}
		}
		every_state = {
			limit = {
				is_core_of = MTS
			}
			add_core_of = ROOT
		}
	}
}

country_event = { #Scorched is completely shocked when he gets word back that his petition to return to the Empire is rejected, as he believed that the differences could be looked past, and he begins to worry about the state of the Ordo, and what that will mean for his state in the world beyond
	id = militem.scorched.48
	title = militem.scorched.48.t
	desc = militem.scorched.48.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.48"}
	
	is_triggered_only = yes
	
	option = { #What can we do?!
		name = militem.scorched.48.a
		add_stability = -0.1
		add_political_power = -75
		mark_focus_tree_layout_dirty = yes
		add_timed_idea = {
			idea = MTS_inward_reflection
			days = 120
		}
		hidden_effect = {
			country_event = {
				id = militem.scorched.49
				days = 30
				random_days = 10
			}
		}
	}
}

country_event = { #Luminous Blade is about as devastated as Scorched, as she knows that if she hasn't already, she will more than likely be branded a heretic for supporting Scorched, and she spends much of her time in her own quarters thinking, but eventually determining that she will serve the Empress, even if the rest of the Empire despises her
	id = militem.scorched.49
	title = militem.scorched.49.t
	desc = militem.scorched.49.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.49"}
	
	is_triggered_only = yes
	
	option = { #Nothing can stop me from completing my duty!
		name = militem.scorched.49.a
		hidden_effect = {
			country_event = {
				id = militem.scorched.50
				days = 30
				random_days = 10
			}
		}
	}
}

country_event = { #Scorched seals himself in his quarters, completely in shock that his plans have fallen through, and he knows that if he ever returns to the Empire, while it is still under the control of those who have corrupted it, he will be killed, and he wonders for a while if he was actually in the wrong
	id = militem.scorched.50
	title = militem.scorched.50.t
	desc = militem.scorched.50.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.50"}
	
	is_triggered_only = yes
	
	option = { #Did I err?
		name = militem.scorched.50.a
		hidden_effect = {
			country_event = {
				id = militem.scorched.51
				days = 30
				random_days = 10
			}
		}
	}
}

country_event = { #Warm Night sees how the reject has affected both of her peers, one being her friend in Luminous, and she begins to pray for them, although she knows not what else she can even do for them, and feels that even prayer is rather token
	id = militem.scorched.51
	title = militem.scorched.51.t
	desc = militem.scorched.51.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.51"}
	
	is_triggered_only = yes
	
	option = { #May the Empress's light comfort you both.
		name = militem.scorched.51.a
		country_event = {
			id = militem.scorched.52
			days = 7
			random_days = 5
		}
	}
}

country_event = { #Scorched finally, after spending days in his room at a time, comes to a realization that the Empire is corrupted from the core, and controlled not by the Empress, by the Adoratio and Inquisitionis, given how secretive they always are, and that he must liberate the Empire, so that the Empress can reward him for his true service
	id = militem.scorched.52
	title = militem.scorched.52.t
	desc = militem.scorched.52.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.52"}
	
	is_triggered_only = yes
	
	option = { #This is the way!
		name = militem.scorched.52.a
		unlock_national_focus = MTS_new_revelation
	}
}

country_event = { #A couple of unicorns are given some instruction on the darker magics that the Inquisitionis brought with them, mainly what was left in Pinpoint's research, and they are shown how if they inflict more pain and suffering to themselves, they grow stronger
	id = militem.scorched.53
	title = militem.scorched.53.t
	desc = militem.scorched.53.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.53"}
	
	is_triggered_only = yes
	
	option = { #Is it possible to master this power?
		name = militem.scorched.53.a
		###Split up the bonuses of reduced forced attack?
		swap_ideas = {
			remove_idea = MTS_extract_from_every_soldier
			add_idea = MTS_existence_is_overrated
		}
	}
}

country_event = { #Follow a villager from a town near the border of the Empire, who is pulled out of their home in an excuse to drill for evacuations, and as they go, they see that the village is bombed to cleanse some last parts of hedonism that Militem Solar determined was there
	id = militem.scorched.54
	title = militem.scorched.54.t
	desc = militem.scorched.54.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.54"}
	
	is_triggered_only = yes
	
	option = { #My house!
		name = militem.scorched.54.a
		swap_ideas = {
			remove_idea = MTS_steadfast_defenders
			add_idea = MTS_nothing_to_capture
		}
	}
}

country_event = { #A thestral, who is badly malnourished, is dragged from her cell, along with some of the other thestrals are still at a concentration camp, and they are given some final instructions as they are strapped with explosives, that they will die for the Empress, and if they do not, they will suffer far worse than an explosive death at the Holy Flame's work instead
	id = militem.scorched.55
	title = militem.scorched.55.t
	desc = militem.scorched.55.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.55"}
	
	is_triggered_only = yes
	
	option = { #Such a convincing argument.
		name = militem.scorched.55.a
		add_stability = -0.1
		hidden_effect = {
			division_template = {
				name = "Thestral Fodder"
				is_locked = yes
				division_cap = 6
				division_names_group = SLE_PEG_01
				regiments = {
					pegasi = { x = 0 y = 0 }
					pegasi = { x = 0 y = 1 }
					pegasi = { x = 0 y = 2 }
					pegasi = { x = 0 y = 3 }
					pegasi = { x = 1 y = 0 }
					pegasi = { x = 1 y = 1 }
					pegasi = { x = 1 y = 2 }
					pegasi = { x = 1 y = 3 }
				}
				support = {
					recon = { x = 0 y = 0 }
					logistics_company = { x = 0 y = 1 }
					engineer = { x = 0 y = 2 }
					artillery = { x = 0 y = 3 }
				}
			}
			if = {
				limit = {
					NOT = { has_tech = tech_pegasi }
				}
				set_technology = { tech_pegasi = 1 }
			}
		}
		16 = { create_unit = { division = "name = \"Penal Group Flagellum\" division_template = \"Thestral Fodder\" start_experience_factor = 0" owner = MTS prioritize_location = 8622 } }
		24 = { create_unit = { division = "name = \"Penal Group Aquarius\" division_template = \"Thestral Fodder\" start_experience_factor = 0" owner = MTS prioritize_location = 11264 } }
		352 = { create_unit = { division = "name = \"Penal Group Salinus\" division_template = \"Thestral Fodder\" start_experience_factor = 0" owner = MTS prioritize_location = 405 } }
		31 = { create_unit = { division = "name = \"Penal Group Impes\" division_template = \"Thestral Fodder\" start_experience_factor = 0" owner = MTS prioritize_location = 3652 } }
		30 = { create_unit = { division = "name = \"Penal Group Umbra\" division_template = \"Thestral Fodder\" start_experience_factor = 0" owner = MTS prioritize_location = 569 } }
		27 = { create_unit = { division = "name = \"Penal Group Nemus\" division_template = \"Thestral Fodder\" start_experience_factor = 0" owner = MTS prioritize_location = 12098 } }
	}
}

country_event = { #Scorched Earth is angrily training himself in one of the small battlefields in the back of a barracks, and he is overly aggressive with his tactics, although it breaks into a few simulated squad commands, which Luminous would observe and try to get him to relax somewhat since he is beating himself up too much over what happened in EQS
	id = militem.scorched.56
	title = militem.scorched.56.t
	desc = militem.scorched.56.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.56"}
	
	is_triggered_only = yes
	
	option = { #I will never rest!
		name = militem.scorched.56.a
		EQS_Scorched_Earth = {
			add_attack = 1
		}
	}
}

country_event = { #Scorched bursts into his office to ponder or brood over the final fate of Imperial citizens, since they are both innocent but complacent to what happened in the Empire, which eats him up over his conflicting desires
	id = militem.scorched.57
	title = militem.scorched.57.t
	desc = militem.scorched.57.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.57"}
	
	is_triggered_only = yes
	
	option = { #I have a plan now...
		name = militem.scorched.57.a
		EQS_Scorched_Earth = {
			add_planning = 1
		}
	}
}

country_event = { #Scorched is called out by Luminous to her own training area outside of New Baltimare, where they both practice against each other, to counter all the Solarist tactics that they know, which helps them forge a stronger bond, either as equals or lovers
	id = militem.scorched.58
	title = militem.scorched.58.t
	desc = militem.scorched.58.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.58"}
	
	is_triggered_only = yes
	
	option = { #That was actually... fun.
		name = militem.scorched.58.a
		EQS_Luminous_Blade = {
			add_defense = 1
		}
		if = {
			limit = { has_completed_focus = MTS_not_so_ascetic }
			EQS_Scorched_Earth = {
				add_defense = 1
			}
		}
	}
}

country_event = { #Luminous enters into a planning session that Scorched is having between himself and some of his generals, as she was bidden, and while he is going over some plans, she helps complete some of his thoughts, which pleases him, since it proves how well they have grown to work and know each other; if romanced she will even suggest a new course of action, which he accepts
	id = militem.scorched.59
	title = militem.scorched.59.t
	desc = militem.scorched.59.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.59"}
	
	is_triggered_only = yes
	
	option = { #A wonderful idea!
		name = militem.scorched.59.a
		if = {
			limit = {
				has_completed_focus = MTS_not_so_ascetic
			}
			EQS_Scorched_Earth = {
				add_skill_level = 1
				add_logistics = 1
			}
			EQS_Luminous_Blade = {
				add_skill_level = 1
				add_logistics = 1
			}
		}
		else = {
			EQS_Scorched_Earth = {
				add_logistics = 1
			}
			EQS_Luminous_Blade = {
				add_logistics = 1
				add_planning = 1
			}
		}
	}
}

country_event = { #With pride, Scorched Earth watches as Luminous Blade proceeds down an aisle to receive a promotion that he believes that she is meant to have since she is far more loyal and competent than many of his other generals, and after a short speech, he promotes her to a co-equal status of leading the military with him
	id = militem.scorched.60
	title = militem.scorched.60.t
	desc = militem.scorched.60.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.60"}
	
	is_triggered_only = yes
	
	option = { #More deserved than any here!
		name = militem.scorched.60.a
		EQS_Luminous_Blade = {
			promote_leader = yes
		}
		hidden_effect = {
			EQS_Luminous_Blade = {
				remove_trait = { trait = recently_promoted }
			}
		}
	}
}

country_event = { #Follow a worker as he finally stumbles out of his factory work after already being pushed to the limit, as he toiled for over a day, and he is found by a few soldiers, who decide that he still hasn't worked enough, since he is obviously slacking, and he is dragged back to the factory, as they ignore his protests
	id = militem.scorched.61
	title = militem.scorched.61.t
	desc = militem.scorched.61.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.61"}
	
	is_triggered_only = yes
	
	option = { #I just need half an hour!
		name = militem.scorched.61.a
		add_ideas = MTS_work_for_meals
	}
}

country_event = { #Follow a worker in the factories as they are barely able to keep awake from all the labor they've been having to do, and she watches as one of her closest co-workers and friends passes out and falls into the assembly line itself, which instantly kills her, and as she is too shocked to do anything, they are all punished for slowing down the production of equipment for the impending war
	id = militem.scorched.62
	title = militem.scorched.62.t
	desc = militem.scorched.62.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.62"}
	
	is_triggered_only = yes
	
	option = { #What were we supposed to do?!
		name = militem.scorched.62.a
		add_ideas = MTS_timeless_toiling
	}
}

country_event = { #A group of artisan specialists for specific types of firearms or artillery are carted by an elite escort around the South-East, so they may toil constantly to improve the production quality of all factories, and effectively treated like dirt regardless, since they could have helped sooner to save the Empress
	id = militem.scorched.63
	title = militem.scorched.63.t
	desc = militem.scorched.63.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.63"}
	
	is_triggered_only = yes
	
	option = { #We're helping now, aren't we?!
		name = militem.scorched.63.a
		swap_ideas = {
			remove_idea = MTS_poverty_for_everypony
			add_idea = MTS_sacrifice_for_the_empress
		}
		increase_poverty = yes
	}
}

country_event = { #Scorched nervously paces around his office, since he is preparing for the final orders to march on Sanctum Solar, and he knows that it will be seen as pure treason and heresy, but he must save the Empress; Luminous will enter and try to console him, that she will give him her strength in the Empress, so they can free the Empire together
	id = militem.scorched.64
	title = militem.scorched.64.t
	desc = militem.scorched.64.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.64"}
	
	is_triggered_only = yes
	
	option = { #May the Empress guide us.
		name = militem.scorched.64.a
		3 = {
			OWNER = {
				ROOT = {
					create_wargoal = {
						type = annex_everything
						target = PREV
					}
				}
			}
		}
	}
}

country_event = { #Scorched Earth holds a speech in Sanctum Solar, which has both willing and unwilling participants, to proclaim how the Empire has been saved by him, and that he will ensure that it is brought back upon the right path, now that it is safe to be led by the Empress again
	id = militem.scorched.65
	title = militem.scorched.65.t
	desc = militem.scorched.65.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.65"}
	
	is_triggered_only = yes
	
	option = { #Everything will be back to normal soon enough.
		name = militem.scorched.65.a
		set_capital = { state = 3 }
		add_state_core = 3
	}
}

country_event = { #Warm Night at first steps into the Cathedral of the Sun, which has suffered some damage, in awe, although she's probably even more awed by the ponies that are everywhere waiting for her, and when she gets to the podium to preach, she nervously starts going over Militem Solar's tenets, which very quickly causes stirs and even outright anger and protest in the audience
	id = militem.scorched.66
	title = militem.scorched.66.t
	desc = militem.scorched.66.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.66"}
	
	is_triggered_only = yes
	
	option = { #They'll get used to it soon...
		name = militem.scorched.66.a
		every_state = {
			limit = {
				OR = {
					is_core_of = SLE
					is_claimed_by = SLE
				}
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
			}
			add_compliance = 5
			add_resistance = 5
		}
	}
}

country_event = { #Scorched irately proclaims another inquisitor or priestess a heretic without them even allowed to defend themselves, which worries Luminous, because she sees him become even more vindictive than he has been before, and is not even channeling his ideals at the moment, but she doesn't speak up at that time
	id = militem.scorched.67
	title = militem.scorched.67.t
	desc = militem.scorched.67.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.67"}
	
	is_triggered_only = yes
	
	option = { #Heretic!
		name = militem.scorched.56.a
		add_stability = -0.05
		add_political_power = 10
	}
}

country_event = { #Follow soldiers as they march through the streets of Sanctum Solar, to areas that were proclaimed to have significantly more heresy than others co-related with wealth, and when they arrive, are met with some resistance although they soon torch most of the living area, to purify them from heresy
	id = militem.scorched.68
	title = militem.scorched.68.t
	desc = militem.scorched.68.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.68"}
	
	is_triggered_only = yes
	
	option = { #Immolate the wealth!
		name = militem.scorched.68.a
		every_state = {
			limit = {
				OR = {
					is_core_of = SLE
					is_claimed_by = SLE
				}
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
			}
			add_compliance = 5
			add_resistance = -5
		}
	}
}

country_event = { #Scorched holds another speech in front of the palace or the Cathedral of the Sun to proclaim that he is purifying the Adoratio, since it grew complacent and weak-willed, and unable to speak the truth about Daybreaker, and that Sunset Shimmer failed; he proclaims Radiant Bliss the new high mage, which earns muted approval
	id = militem.scorched.69
	title = militem.scorched.69.t
	desc = militem.scorched.69.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.69"}
	
	is_triggered_only = yes
	
	option = { #She is still pure!
		name = militem.scorched.69.a
		every_state = {
			limit = {
				OR = {
					is_core_of = SLE
					is_claimed_by = SLE
				}
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
			}
			add_compliance = 5
		}
	}
}

country_event = { #After carefully making his way into the heart of the palace, where there are magical suppression fields, Scorched visits Quasar Pulse, who tries to attack him as he arrives, and he gives her one chance, since she is dedicated to destroying heresy above all else, to join him, or be killed
	id = militem.scorched.70
	title = militem.scorched.70.t
	desc = militem.scorched.70.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.70"}
	
	is_triggered_only = yes
	
	option = { #Heresy is heresy.
		name = militem.scorched.70.a
		EQS_Quasar_Pulse = {
			set_nationality = ROOT
		}
		add_stability = -0.1
	}
	option = { #Heresy is heresy!
		name = militem.scorched.70.b
		add_stability = 0.05
		every_state = {
			limit = {
				OR = {
					is_core_of = SLE
					is_claimed_by = SLE
				}
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
			}
			add_resistance = -10
		}
	}
}

country_event = { #Scorched goes to the chamber that either Aurora or Daybreaker is being held in, depending on the fate of the Empire, to ask why they are still resisting, when he has freed the Empire, and both would declare that he was rejected and decreed a heretic because of his extreme views, which he doesn't accept
	id = militem.scorched.71
	title = militem.scorched.71.t
	desc = militem.scorched.71.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.71"}
	
	is_triggered_only = yes
	
	option = { #That's impossible! This is a changeling trick!
		name = militem.scorched.71.a
		add_stability = -0.1
		add_war_support = -0.05
	}
}

country_event = { #Follow groups of soldiers and also some "redeemed" members of the Cultus as they go about the city torching much of it because it has been "corrupted" and needs to be rebuilt, and one or two might be a bit hesitant, because of the extreme loss of life
	id = militem.scorched.72
	title = militem.scorched.72.t
	desc = militem.scorched.72.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.72"}
	
	is_triggered_only = yes
	
	option = { #This will prove our resolve!
		name = militem.scorched.72.a
		every_state = {
			limit = {
				OR = {
					is_core_of = SLE
					is_claimed_by = SLE
				}
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
			}
			add_compliance = 10
			add_resistance = 10
		}
	}
}

country_event = { #A panicking noble is dragged before Scorched Earth, and because of his extreme wealth he is declared guilty of corrupting the Empire and for being a threat to everypony, and the noble tries to buy off Scorched, which only makes Scorched even more furious
	id = militem.scorched.73
	title = militem.scorched.73.t
	desc = militem.scorched.73.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.73"}
	
	is_triggered_only = yes
	
	option = { #You dare to try and lead me astray?!
		name = militem.scorched.73.a
		every_state = {
			limit = {
				OR = {
					is_core_of = SLE
					is_claimed_by = SLE
				}
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
			}
			add_compliance = 5
		}
	}
}

country_event = { #Luminous is called into the throne room of the palace, and she sees that Scorched is waiting for her, while watching out the window, and he is rather frenetic when he does talk with her, as he believes they could start a new dynasty for the Empire together, as it has been too corrupted to ever be given back to anypony, and he must lead, and she is unsure how to proceed
	id = militem.scorched.74
	title = militem.scorched.74.t
	desc = militem.scorched.74.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.74"}
	
	is_triggered_only = yes
	
	option = { #I can't believe I'm hearing this!
		name = militem.scorched.74.a
		country_event = militem.scorched.75
	}
	option = { #That seems too good be to be true, my love.
		name = militem.scorched.74.b
		trigger = { has_completed_focus = MTS_not_so_ascetic }
		country_event = militem.scorched.76
	}
}

country_event = { #Luminous can't possibly stand for his suggestion, and she argues with him he's gone too far, but he is adamant that he is not, and he orders her out, and states that if she crosses any line again, she will be tried for heresy
	id = militem.scorched.75
	title = militem.scorched.75.t
	desc = militem.scorched.75.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.75"}
	
	is_triggered_only = yes
	
	option = { #I have at least kept my honor.
		name = militem.scorched.75.a
		retire_character = EQS_Luminous_Blade
	}
}

country_event = { #Luminous agrees to become his Empress and he the Emperor, which pleases him greatly, as she sees much of what he sees, even if she needs a bit more convincing first
	id = militem.scorched.76
	title = militem.scorched.76.t
	desc = militem.scorched.76.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.76"}
	
	is_triggered_only = yes
	
	option = { #We will serve together.
		name = militem.scorched.76.a
		custom_effect_tooltip = MTS_totally_swapping_traits_tt
		hidden_effect = {
			promote_character = MTS_Scorched_Earth_and_Luminous_Blade
			MTS_Scorched_Earth_and_Luminous_Blade = {
				add_trait = { trait = supreme_general }
			}
		}
	}
}

country_event = { #Scorched excitedly proclaims that the Empire has been reborn under him, and that he will bring salvation and rescue to the lost souls still controlled by oppressors such as Changelingia, and that all those who are enemies of the Empress and Solarism will be destroyed
	id = militem.scorched.77
	title = militem.scorched.77.t
	desc = militem.scorched.77.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.77"}
	
	is_triggered_only = yes
	
	option = { #SOL INVICTUS!
		name = militem.scorched.77.a
		set_cosmetic_tag = EQS_SOL
		add_ideas = MTS_burn_the_occupiers
		every_country = {
			limit = {
				any_owned_state = { is_claimed_by = EQS }
				NOT = { tag = ROOT }
			}
			ROOT = {
				create_wargoal = {
					type = annex_everything
					target = PREV
				}
			}
		}
	}
}

country_event = { #Scorched happily looks after the final bits of peace agreements with the changelings, since they surrendered to him, and he is confident that the Empire is now whole, and he has achieved the greatest feat since retaking it for the Empress, and he decides that, at last, he can indulge himself a bit in the fruit of his labor
	id = militem.scorched.78
	title = militem.scorched.78.t
	desc = militem.scorched.78.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.78"}
	
	is_triggered_only = yes
	
	option = { #I will reap my reward!
		name = militem.scorched.78.a
		custom_effect_tooltip = MTS_whats_consistency_tt
	}
}

country_event = { #Scorched carefully scribes up a letter while Luminous enters his quarters, and he admits that he is going to abdicate, since his job is done, and he's had time to rethink, and she is shocked at first, but also pleased and proud, and agrees to follow him wherever he goes, so they can be together, and they both walk off, leaving the Empire for its new leader
	id = militem.scorched.79
	title = militem.scorched.79.t
	desc = militem.scorched.79.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.79"}
	
	is_triggered_only = yes
	
	option = { #May the Empire last a thousand years. Without us.
		name = militem.scorched.79.a
		custom_effect_tooltip = MTS_job_well_done_tt
		hidden_effect = {
			retire_character = MTS_Scorched_Earth_and_Luminous_Blade
			retire_character = EQS_Scorched_Earth
			retire_character = EQS_Luminous_Blade
			MTS_Warm_Night = {
				add_country_leader_role = {
					promote_leader = yes
					country_leader = {
						expire = "1965.1.1"
						ideology = solarism
						traits = {
							sympathetic_priestess
						}
					}
				}
			}
		}
	}
}

country_event = { #Scorched Earth finally reads the report meant for him about the fate of the Empire, and how it's descended into either civil war, or Equestria has come out on top, or otherwise has fallen to weak-willed hedonists in charge, which makes him believe they're the only source of true Solarism left, and that they must liberate the Empire at all costs
	id = militem.scorched.80
	title = militem.scorched.80.t
	desc = militem.scorched.80.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.80"}
	
	is_triggered_only = yes
	
	option = { #We are all that's left!
		name = militem.scorched.80.a
		add_war_support = 0.1
	}
}

country_event = { #Follow a couple of the remaining scientists that are from COBSOC as they are released from prison, only to be forced to research anything and everything which Scorched Earth orders them to do, despite having basically no scientific equipment, because that is opulent
	id = militem.scorched.81
	title = militem.scorched.81.t
	desc = militem.scorched.81.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.81"}
	
	is_triggered_only = yes
	
	option = { #How are we to science?
		name = militem.scorched.81.a
		add_tech_bonus = {
			name = armor_bonus
			bonus = 1
			uses = 2
			category = armor
		}
		add_tech_bonus = {
			name = motorized_bonus
			bonus = 1
			uses = 1
			category = motorized_equipment
		}
	}
}

country_event = { #Follow a group of soldiers, as they have been tasked with wiping out some of the thestral resistance, and test the new spells that some warm ages have developed for allowing night sight, and it doesn't go well, since they are so sensitive to light that they are blinded by the smallest thing
	id = militem.scorched.82
	title = militem.scorched.82.t
	desc = militem.scorched.82.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.82"}
	
	is_triggered_only = yes
	
	option = { #It's an iterative process.
		name = militem.scorched.82.a
		add_ideas = MTS_blindsight
	}
}

country_event = { #To showcase some of the new weapons that have been developed and designed for the South-East as a holier and a simpler weapon, although they constantly run into problems because the weapons are shoddily made since they're meant to be minimal
	id = militem.scorched.83
	title = militem.scorched.83.t
	desc = militem.scorched.83.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.83"}
	
	is_triggered_only = yes
	
	option = { #How am I supposed to kill?!
		name = militem.scorched.83.a
		add_tech_bonus = {
			name = infantry_bonus
			bonus = 1
			uses = 2
			category = infantry_weapons
		}
		add_tech_bonus = {
			name = support_bonus
			bonus = 1
			uses = 1
			category = support_tech
		}
	}
}

country_event = { #Some of the first tanks that have been developed by Scorched Earth's scientists are showcased, and all are cripplingly overspecialized, although the only one that doesn't have issues is the one that is basically a moving cannon and that's it, which annoys him since it was supposed to be better than that, but he accepts it regardless
	id = militem.scorched.84
	title = militem.scorched.84.t
	desc = militem.scorched.84.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.84"}
	
	is_triggered_only = yes
	
	option = { #Just make sure they work!
		name = militem.scorched.84.a
		add_ideas = MTS_weapons_of_glass
	}
}

country_event = { #Some scientists and soldiers take out some thestrals from their prisons to monitor them as they supposedly let them free, so they can be studied regarding how they work in the jungle so well; every one is tracked with magic, and some are purged anyway when they aren't considered helpful
	id = militem.scorched.85
	title = militem.scorched.85.t
	desc = militem.scorched.85.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.85"}
	
	is_triggered_only = yes
	
	option = { #At least they've provided some use.
		name = militem.scorched.85.a
		add_doctrine_cost_reduction = {
			cost_reduction = 0.33
			uses = 2
			category = special_forces_doctrine
		}
		add_ideas = MTS_one_with_darkness
	}
}

country_event = { #An officer gives a speech to his soldiers who are following him, and he goes on about how many of them are effectively worhtless, given that they are not willing to actually sacrifice themselves for the Empress, and he keeps drilling them, until a couple try to desert, and he shoots them dead then and there
	id = militem.scorched.86
	title = militem.scorched.86.t
	desc = militem.scorched.86.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.86"}
	
	is_triggered_only = yes
	
	option = { #Any other wanderers?
		name = militem.scorched.86.a
		set_technology = { suicide_craft = 1 }
		add_ideas = MTS_soldiers_reward
	}
}

country_event = { #A worker who is clearly overworked and stressed wanders into a repurposed building set as a church, and he is completely unsure of how to proceed, and believes that one of the priestesses could help him, and the only advice she gives is basically a spiel on how asceticism is great and he leaves more stressed than before
	id = militem.scorched.87
	title = militem.scorched.87.t
	desc = militem.scorched.87.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.87"}
	
	is_triggered_only = yes
	
	option = { #I don't that helped...
		name = militem.scorched.87.a
		add_ideas = MTS_non_material_wealth
	}
}

country_event = { #Follow a family as they are constantly harrassed for daring to not donate everything they have for the impending war effort, and since they don't even have much, they don't see why they need to, which only leads to more persecution
	id = militem.scorched.88
	title = militem.scorched.88.t
	desc = militem.scorched.88.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.88"}
	
	is_triggered_only = yes
	
	option = { #How is this tolerant?!
		name = militem.scorched.88.a
		add_ideas = MTS_useless_possessions
	}
}

country_event = { #A couple bolts out of their house as they find out they will be raided soon by the Militarium of Militem Solar, because they have a few non-essential possessions still with them, and as they flee, they see others left destitute by intimidation by Scorched, and they are captured after they are chased, and taken back as heretics for running
	id = militem.scorched.89
	title = militem.scorched.89.t
	desc = militem.scorched.89.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.89"}
	
	is_triggered_only = yes
	
	option = { #We only want a couple of things!
		name = militem.scorched.89.a
		add_ideas = MTS_happy_with_nothing
	}
}

country_event = { #A worker who finally has some time off heads back to their home and is ambushed by some soldiers to take them to a new grotto set up for workers near their factory, which is even worse than the house they lived in before, and although they struggle, they are no match for the group
	id = militem.scorched.90
	title = militem.scorched.90.t
	desc = militem.scorched.90.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.90"}
	
	is_triggered_only = yes
	
	option = { #I just want to go home!
		name = militem.scorched.90.a
		15 = {
			add_extra_state_shared_building_slots = 1
		}
		351 = {
			add_extra_state_shared_building_slots = 1
		}
		221 = {
			add_extra_state_shared_building_slots = 2
		}
		16 = {
			add_extra_state_shared_building_slots = 1
		}
		13 = {
			add_extra_state_shared_building_slots = 2
		}
	}
}

country_event = { #Soldiers go to raid one of the few remaining theatres in Militem Solar, because it is nothing but a waste of time when instead ponies could be training to fight for the Empress, and many of the ponies there are arrested for heresy for their work
	id = militem.scorched.91
	title = militem.scorched.91.t
	desc = militem.scorched.91.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.91"}
	
	is_triggered_only = yes
	
	option = { #Do you have something against thespians?!
		name = militem.scorched.91.a
		add_ideas = MTS_no_fun_allowed
	}
}

country_event = { #A priestess enters her church near the border of the Solar Empire, and she sees how it is being turned into effectively a fortress or bunker, despite it only recently having been ordained as a church, and she protests and attempts to fight back verbally against the Militarium for their actions, although it gets her nowhere
	id = militem.scorched.92
	title = militem.scorched.92.t
	desc = militem.scorched.92.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.92"}
	
	is_triggered_only = yes
	
	option = { #You desecrate everything!
		name = militem.scorched.92.a
		add_ideas = MTS_fortress_churches
	}
}

country_event = { #After being gravely injured through a job that was demanded of by Scorched's soldiers, a couple of construction workers are rushed to the primary hospital in New Baltimare, and are given not even token aid while they wait for any kind of proper medical care, since they are clearly just soft from their hedonistic lifestyle, which only makes them suffer more
	id = militem.scorched.93
	title = militem.scorched.93.t
	desc = militem.scorched.93.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.93"}
	
	is_triggered_only = yes
	
	option = { #We're dying here!
		name = militem.scorched.93.a
		add_ideas = MTS_reserved_aid
	}
}

country_event = { #As he is righteously furious, Scorched holds a long speech about how Militem Solar has become even stronger and more resolved in their plans to free the Empire, since they are now the only true continuance of it, and that they will never be stopped
	id = militem.scorched.94
	title = militem.scorched.94.t
	desc = militem.scorched.94.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.94"}
	
	is_triggered_only = yes
	
	option = { #They will all feel the Empress's wrath!
		name = militem.scorched.94.a
		add_ideas = MTS_imperial_freedom
	}
}

country_event = { #A radio rebroadcast of Scorched speaking to some of Militem Solar plays across many radio sets across the South-East, with a rant that is rambling at points about how they are the only pure part of the Empire left, its only torch, and that they will bring the heretics to their knees
	id = militem.scorched.95
	title = militem.scorched.95.t
	desc = militem.scorched.95.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.95"}
	
	is_triggered_only = yes
	
	option = { #They will not stand before us!
		name = militem.scorched.95.a
		add_stability = 0.05
		add_war_support = 0.05
	}
}

country_event = { #Luminous uncomfortably meets with many of the remaining inquisitors in Militem Solar, to give a message that Scorched has thrust upon them, that they must do less about finding all heretics and instead to strive to place the entire region into a concerted effort into liberating the Empire, which does not go well
	id = militem.scorched.96
	title = militem.scorched.96.t
	desc = militem.scorched.96.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.96"}
	
	is_triggered_only = yes
	
	option = { #I do not like it, either.
		name = militem.scorched.96.a
		add_ideas = MTS_salvation_of_the_heathens
	}
}

country_event = { #Follow Emerald Days, who has escaped being executed fore heresy herself since she was originally part of Pinpoint's inner circle, as she is tasked with rooting out every little bit of heresy or potential heresy left in the Militarium, so that it can be totally pure, which is something she's more than happy to do as she interrogates a soldier
	id = militem.scorched.97
	title = militem.scorched.97.t
	desc = militem.scorched.97.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.97"}
	
	is_triggered_only = yes
	
	option = { #I will enjoy this...
		name = militem.scorched.97.a
		add_stability = 0.05
		add_political_power = 100
	}
}

country_event = { #Luminous Blade looks on in shock as she sees some of her fellow inquisitors and priestesses burning everything they brought that could be read, even though it is not really unorthodox, and she learns that they were deemed corrupted by Scorched, and pushed further by other inquisitors, and she tries to save a few discretely, to preserve the knowledge of the Empire
	id = militem.scorched.98
	title = militem.scorched.98.t
	desc = militem.scorched.98.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.98"}
	
	is_triggered_only = yes
	
	option = { #This is going too far!
		name = militem.scorched.98.a
		add_ideas = MTS_forbidden_knowledge
	}
}

country_event = { #An already heavily beaten prisoner is woken by some magic by an inquisitor, who is the interrogator, and the victim asks for at least something to dull some of the pain or a drink or the like, but she gets nothing, as the inquisitor mocks them for being weak like other hedonists, as she tortures the prisoner some more
	id = militem.scorched.99
	title = militem.scorched.99.t
	desc = militem.scorched.99.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.99"}
	
	is_triggered_only = yes
	
	option = { #You will learn your place!
		name = militem.scorched.99.a
		add_manpower = -7500
		add_stability = 0.1
	}
}

country_event = { #Serene Shore, who is feeling unwell at how much she has been prodded by Scorched Earth to proceed, nervously addresses many of the priestesses and inquisitors in the South-East, who have been gathered there, to speak how they are the only true Solaris Cultus, and that they will purge the Empire of heretics, which earns cheers, and it upsets her
	id = militem.scorched.100
	title = militem.scorched.100.t
	desc = militem.scorched.100.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.100"}
	
	is_triggered_only = yes
	
	option = { #What have we done?
		name = militem.scorched.100.a
		add_ideas = MTS_the_new_cult
	}
}

country_event = { #Large groups of ponies are led outside of New Baltimare as a procession to a massive pyre, which is already being set alight for their burning, and there are various religious celebrations going on there, as they are effectively being offered up to be purified by the Holy Flame, which makes them all panic
	id = militem.scorched.101
	title = militem.scorched.101.t
	desc = militem.scorched.101.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.101"}
	
	is_triggered_only = yes
	
	option = { #Amnesty!
		name = militem.scorched.101.a
		every_state = {
			limit = {
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
				OR = {
					is_core_of = BAL
					is_claimed_by = BAL
				}
			}
			add_compliance = 5
			add_resistance = 10
		}
	}
}

country_event = { #A couple of rural ponies walk toward the outskirts of New Baltimare and they see how there are now bodies and other warnings to heretics about what will happen if they fall away, and they grow overly nervous about it, since it has changed for far more worse than they thought it would
	id = militem.scorched.102
	title = militem.scorched.102.t
	desc = militem.scorched.102.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.102"}
	
	is_triggered_only = yes
	
	option = { #Just keep your head low.
		name = militem.scorched.102.a
		every_state = {
			limit = {
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
				OR = {
					is_core_of = BAL
					is_claimed_by = BAL
				}
			}
			add_compliance = 5
			add_resistance = -5
		}
	}
}

country_event = { #A sniveling pony who has been caught committing a minor civil offense is brought before Scorched Earth and his new military tribunal, which is the new law of the land, and is given a soldier's execution, as everything is now being tried as a military offense
	id = militem.scorched.103
	title = militem.scorched.103.t
	desc = militem.scorched.103.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.103"}
	
	is_triggered_only = yes
	
	option = { #That's just a tad extreme!
		name = militem.scorched.103.a
		every_state = {
			limit = {
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
				OR = {
					is_core_of = BAL
					is_claimed_by = BAL
				}
			}
			add_compliance = 5
			add_resistance = -5
		}
	}
}

country_event = { #A thestral almost collapses in exhaustion, as they have been made to stay up multiple days straight, as part of their punishment and also because they are being adjusted to a diurnal sleep schedule, which makes it even harder, and because of their perceived sloth, they are beaten for falling behind as deterrent
	id = militem.scorched.104
	title = militem.scorched.104.t
	desc = militem.scorched.104.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.104"}
	
	is_triggered_only = yes
	
	option = { #I just need a nap...
		name = militem.scorched.104.a
		every_state = {
			limit = {
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
				OR = {
					is_core_of = BAL
					is_claimed_by = BAL
				}
			}
			add_compliance = 5
			add_resistance = 5
		}
		save_current_manpower = yes
		30 = { add_manpower = -102335 }
		31 = { add_manpower = -54390 }
		350 = { add_manpower = -23593 }
		36 = { add_manpower = -23842 }
		348 = { add_manpower = -74204 }
		restore_previous_manpower = yes
	}
}

country_event = { #A thestral darts through streets as he is pursued by a mob of furious ponies, who have been convinced that he and other thestrals are the problem of all their woes, thanks to the rhetoric of Scorched Earth, and he at first manages to elude them, but is eventually found and taken to be strung up as the mob gets out of control
	id = militem.scorched.105
	title = militem.scorched.105.t
	desc = militem.scorched.105.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.105"}
	
	is_triggered_only = yes
	
	option = { #Just as planned...
		name = militem.scorched.105.a
		every_state = {
			limit = {
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
				OR = {
					is_core_of = BAL
					is_claimed_by = BAL
				}
			}
			add_compliance = 5
			add_resistance = 5
			save_current_manpower = yes
			add_manpower = -2000
			restore_previous_manpower = yes
		}
	}
}

country_event = { #Follow some thestrals that barely escape their home as it is torched by soldiers of Scorched Earth, and they try to flee as fast as they can, and as they run they see others being dragged out and arrested or shot for resisting, before they are captured themselves
	id = militem.scorched.106
	title = militem.scorched.106.t
	desc = militem.scorched.106.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.106"}
	
	is_triggered_only = yes
	
	option = { #We aren't to blame!
		name = militem.scorched.106.a
		custom_effect_tooltip = MTS_unlock_inquisitionis_base_law_tt
		set_country_flag = MTS_inquisitionis_laws
		add_stability = 0.05
		every_state = {
			limit = {
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
				OR = {
					is_core_of = BAL
					is_claimed_by = BAL
				}
			}
			add_compliance = 10
			save_current_manpower = yes
			add_manpower = -4000
			restore_previous_manpower = yes
		}
	}
}

country_event = { #Luminous encounters Scorched looking out upon New Baltimare, without really any acknowledgement of her like he normally does, and it begins to worry her a bit, so she checks on him, and he speaks about how he is not happy with himself for failing the Empress, and that he will ensure everything is burnt to the ground to restore the Empire if he has to do that
	id = militem.scorched.107
	title = militem.scorched.107.t
	desc = militem.scorched.107.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.107"}
	
	is_triggered_only = yes
	
	option = { #It will be my Empire, if it has to be!
		name = militem.scorched.107.a
		add_ideas = MTS_daybreakers_memory
	}
}

country_event = { #A pony in EQS tunes into a radio broadcast that has been on repeat for hours at that point, which is of Scorched Earth, speaking of the crimes and sins of the ponies that made the Empire fall, and he promises their swift and painful end
	id = militem.scorched.108
	title = militem.scorched.108.t
	desc = militem.scorched.108.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.108"}
	
	is_triggered_only = yes
	
	option = { #He is just bluffing, right?
		name = militem.scorched.108.a
		3 = {
			OWNER = {
				ROOT = {
					create_wargoal = {
						type = annex_everything
						target = PREV
					}
				}
			}
		}
	}
}

country_event = { #A short event of solemn celebration of taking the Empire and Sanctum Solar, which has been damaged in the war, with only now Scorched being able to turn his attention to reclaiming the rest of the Empire and rebuilding
	id = militem.scorched.109
	title = militem.scorched.109.t
	desc = militem.scorched.109.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.109"}
	
	trigger = {
		tag = MTS
		owns_state = 3
		has_war = no
	}
	fire_only_once = yes
	
	option = { #It is time to show true Solarism.
		name = militem.scorched.109.a
		mark_focus_tree_layout_dirty = yes
		custom_effect_tooltip = MTS_new_focuses_tt
	}
}

country_event = { #Scorched Earth leads some of his troops into Sanctum Solar and one of the palatial quarters or the like, with the intent to completely destroy it, as a symbol to all other ponies in the city what will happen if they resist, which Luminous Blade tries to talk him out of, since it's burning the very home of the Empress
	id = militem.scorched.110
	title = militem.scorched.110.t
	desc = militem.scorched.110.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.110"}
	
	is_triggered_only = yes
	
	option = { #See some reason!
		name = militem.scorched.110.a
		add_stability = 0.05
		set_capital = { state = 3 }
	}
}

country_event = { #A priestess begins her service in a church in Fillydelphia, one of the main churches, and it is raided by portions of Militem Solar, who plan to shut down the entire church on orders of Scorched Earth, and arrest them all, for allow decadence to flourish, among other "crimes"
	id = militem.scorched.111
	title = militem.scorched.111.t
	desc = militem.scorched.111.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.111"}
	
	is_triggered_only = yes
	
	option = { #Empress damn you!
		name = militem.scorched.111.a
		add_stability = -0.05
	}
}

country_event = { #A couple of Militem Solar soldiers are going around on their patrol of a warehouse that's been commandeered Militam Solar for more weapons storage, and they are completely bored, but are soon ambushed and captured by heretics, who knew exactly where and when to be, as they take the weapons and torch the warehouse
	id = militem.scorched.112
	title = militem.scorched.112.t
	desc = militem.scorched.112.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.112"}
	
	is_triggered_only = yes
	
	option = { #We'll be taking those.
		name = militem.scorched.112.a
		add_stability = -0.1
		3 = {
			add_resistance = 10
			add_state_modifier = {
				modifier = {
					resistance_growth = 0.25
				}
			}
		}
		2 = {
			add_resistance = 10
			add_state_modifier = {
				modifier = {
					resistance_growth = 0.25
				}
			}
		}
		12 = {
			add_resistance = 10
			add_state_modifier = {
				modifier = {
					resistance_growth = 0.25
				}
			}
		}
		75 = {
			add_resistance = 10
			add_state_modifier = {
				modifier = {
					resistance_growth = 0.25
				}
			}
		}
	}
}

country_event = { #A slightly older inquisitor bursts into a house of a random citizen, as she is being chased by other inquisitors, serving Scorched Earth, and she holds the innocent hostage, claiming that she did nothing for warranting a heresy charge, and she isn't even given a chance to surrender, as the inquisitors chasing her simply torch the house instead, since she corrupted it with her presence
	id = militem.scorched.113
	title = militem.scorched.113.t
	desc = militem.scorched.113.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.113"}
	
	is_triggered_only = yes
	
	option = { #You've sealed your fate.
		name = militem.scorched.113.a
		add_war_support = -0.05
	}
}

country_event = { #A priestess is dragged in to the throne room, where Scorched has set himself and some other judges up, and he claims that she has been accused of negligence of duty and allowance of heresy through weakening ponies' minds, which she tries to protest against, but he keeps throwing accusations at her, to the point that eventually she slips up and he uses it against her to execute her
	id = militem.scorched.114
	title = militem.scorched.114.t
	desc = militem.scorched.114.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.114"}
	
	is_triggered_only = yes
	
	option = { #Admit your guilt!
		name = militem.scorched.114.a
		every_state = {
			limit = {
				NOT = { is_core_of = ROOT }
				is_owned_by = ROOT
				OR = {
					is_core_of = EQS
					is_claimed_by = EQS
				}
			}
			add_compliance = 5
			add_resistance = -5
		}
	}
}

country_event = { #Groups of soldiers swarm down upon the Cathedral of the Sun, during the middle of a service by a priestess, and they arrest the priestess while also sripping every effigy and ornate object from the cathedral, due to its opulent nature, which makes other ponies panic and flee
	id = militem.scorched.115
	title = militem.scorched.115.t
	desc = militem.scorched.115.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.115"}
	
	is_triggered_only = yes
	
	option = { #Heads will roll!
		name = militem.scorched.115.a
		add_ideas = MTS_powerless_church
	}
}

country_event = { #A latest report is given to Scorched about more attacks from the Harmonists, which he finally is able to see has some level of coordination among them, despite there being no outward signs they are working together, and he determines with Luminous that they need to do some forceful gathering of information from heretics
	id = militem.scorched.116
	title = militem.scorched.116.t
	desc = militem.scorched.116.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.116"}
	
	is_triggered_only = yes
	
	option = { #They will be found by the light.
		name = militem.scorched.116.a
		every_state = {
			limit = {
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
				OR = {
					is_claimed_by = EQS
					is_core_of = EQS
				}
			}
			add_resistance = 5
		}
	}
}

country_event = { #After a short, final talk about their plan of attack, soldiers from Militem Solar raid one of the main inquisitor archives in the heart of Sanctum Solar, which is protected by "rogue" inquisitors, which leads to multiple deaths on both sides as well as destruction of some scrolls
	id = militem.scorched.117
	title = militem.scorched.117.t
	desc = militem.scorched.117.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.117"}
	
	is_triggered_only = yes
	
	option = { #The faithful have no need of secrets!
		name = militem.scorched.117.a
		#Maybe make this an idea of +5% research, +15% racial and magic research, -10% ST
		add_tech_bonus = {
			name = racial_bonus
			uses = 2
			bonus = 1
			category = race_tech
		}
		add_tech_bonus = {
			name = magic_bonus
			uses = 2
			bonus = 1
			category = magical_tech
		}
	}
}

country_event = { #Pulsar Beam is hauled, fighting as much as she can, into the throne room for Scorched to interrogate and grill about her crimes, and she remains defiant to him, and he eventually has her executed for failing her duties as an inquisitor
	id = militem.scorched.118
	title = militem.scorched.118.t
	desc = militem.scorched.118.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.118"}
	
	is_triggered_only = yes
	
	option = { #You will learn your mistakes, in death.
		name = militem.scorched.118.a
		every_state = {
			limit = {
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
				OR = {
					is_core_of = EQS
					is_claimed_by = EQS
				}
			}
			add_compliance = 5
			add_resistance = -5
		}
		hidden_effect = {
			random_country = {
				limit = { has_character = EQS_Pulsar_Beam }
				retire_character = EQS_Pulsar_Beam
			}
		}
	}
}

country_event = { #Scorched Earth marches into the cell area where Sunset is being held, and he angrily orders her to fall in line, as he would rather keep a continuity between him and the Empress so more will keep in line, and he threatens her life she doesn't agree, and she does, but only because she wants to keep other followers safe, not for his threats or for him or even the Empress
	id = militem.scorched.119
	title = militem.scorched.119.t
	desc = militem.scorched.119.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.119"}
	
	is_triggered_only = yes
	
	option = { #Know that this is not the end.
		name = militem.scorched.119.a
		add_ideas = MTS_forgiven_clergy
		###Refactor this to random_country block after move
		EQS = {
			EQS_Sunset_Shimmer_1048 = { set_nationality = ROOT }
			EQS_Nightfall_Expanse = { set_nationality = ROOT }
			EQS_Floodwater = { set_nationality = ROOT }
			EQS_Whirlwind = { set_nationality = ROOT }
		}
		add_stability = -0.1
		add_political_power = -50
	}
}

country_event = { #Serene Shore nervously enters Scorched Earth's throne room to be told that now she will be the new Adoratio High Mage, which adds to her worry, since Scorched has dealt with Sunset permanently, and that she will be his mouth and ears of many of the possible hereies growing in the Empire
	id = militem.scorched.120
	title = militem.scorched.120.t
	desc = militem.scorched.120.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.120"}
	
	is_triggered_only = yes
	
	option = { #I'm... honored.
		name = militem.scorched.120.a
		add_ideas = MTS_holy_replacements
		IF = {
			limit = {
				has_idea = serene_shore
			}
			hidden_effect = { remove_ideas = serene_shore }
			MTS_Serene_Shore = {
				remove_advisor_role = { slot = political_advisor }
				add_advisor_role = {
					activate = yes
					advisor = {
						slot = political_advisor
						idea_token = serene_shore
						traits = { high_mage_shimmer_advisor }
					}
				}
			}
		}
		ELSE = {
			MTS_Serene_Shore = {
				remove_advisor_role = { slot = political_advisor }
				add_advisor_role = {
					advisor = {
						slot = political_advisor
						idea_token = serene_shore
						traits = { high_mage_shimmer_advisor }
					}
				}
			}
		}
		IF = {
			limit = { EQS = { has_character = EQS_Nova_Glow } }
			EQS = {
				EQS_Nova_Glow = { set_nationality = ROOT }
			}
		}
		EQS = {
			EQS_Obscura = { set_nationality = ROOT }
		}
		add_stability = 0.05
		add_political_power = 25
	}
}

country_event = { #Scorched furiously interrogates a pony he believes to be a heretic, who is pleading that they are loyal to the Empress, and doesn't know what he's talking about, and Luminous, who has been watching, intervenes, by stating that Scorched is losing himself, and torturing loyal citizens, which earns his ire, and they both fight, with the chance of him seeing reason and backing down, or just having her executed
	id = militem.scorched.121
	title = militem.scorched.121.t
	desc = militem.scorched.121.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.121"}
	
	is_triggered_only = yes
	
	option = { #You're... right. There are other ways to make her talk.
		name = militem.scorched.121.a
		ai_chance = {
			factor = 65
		}
		add_stability = 0.05
	}
	option = { #You are lost yourself. Maybe the Empress save your soul.
		name = militem.scorched.121.b
		ai_chance = {
			factor = 35
		}
		retire_character = EQS_Luminous_Blade
	}
}

country_event = { #After seeing again and and again reports of how much death and damage Quasar Pulse has caused before she was apprehended by Militem Solar, Scorched decides that the only course of action is to eliminate her as a threat permanently, and plans for her execution
	id = militem.scorched.122
	title = militem.scorched.122.t
	desc = militem.scorched.122.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.122"}
	
	is_triggered_only = yes
	
	option = { #She is too much of a threat.
		name = militem.scorched.122.a
		add_ideas = MTS_blasphemy_removed
		hidden_effect = {
			random_country = {
				limit = { has_character = EQS_Quasar_Pulse }
				retire_character = EQS_Quasar_Pulse
			}
		}
	}
}

country_event = { #For once in his rulership, Scorched Earth approaches with nervousness, as he gets closer to the cell in which Quasar Pulse is held, which shows signs of damage as she tried to break out, although it is in the Palace's strongest dungeons, and could resist the attacks that Quasar used against it, and he speaks with her, and states that she will be put down like an animal, but she has one chance to fight heresy with him, which she reluctantly agrees to
	id = militem.scorched.123
	title = militem.scorched.123.t
	desc = militem.scorched.123.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.123"}
	
	is_triggered_only = yes
	
	option = { #Then let us crush heresy together.
		name = militem.scorched.123.a
		add_ideas = MTS_beast_chained
		random_country = {
			limit = { has_character = EQS_Quasar_Pulse }
			EQS_Quasar_Pulse = { set_nationality = ROOT }
		}
	}
}

country_event = { #Scorched leads a personal attack against where he and some of the other inquisitors have triangulated the location of the leaders of the uprisings, who are some former Speculatores, including Astrum Solus, and they manage to take them partly by surprise, and in the ensuing battle, the speculatores are killed, and he determines they are finally going to have peace in the Empire
	id = militem.scorched.124
	title = militem.scorched.124.t
	desc = militem.scorched.124.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.124"}
	
	is_triggered_only = yes
	
	option = { #Their secrets will die with them.
		name = militem.scorched.124.a
		add_stability = 0.15
		add_tech_bonus = {
			name = electronics_bonus
			uses = 1
			bonus = 1
			category = electronics
		}
		hidden_effect = {
			3 = { 
				add_state_modifier = {
					modifier = {
						resistance_growth = -0.25
					}
				} 
			}
			2 = { 
				add_state_modifier = {
					modifier = {
						resistance_growth = -0.25
					}
				} 
			}
			12 = { 
				add_state_modifier = {
					modifier = {
						resistance_growth = -0.25
					}
				} 
			}
			75 = { 
				add_state_modifier = {
					modifier = {
						resistance_growth = -0.25
					}
				} 
			}
		}
	}
}

country_event = { #Scorched Earth, by himself, meets at a delapidated house, after he got a message about being spoken to by the leader of the rebels, who wants to make peace, since they knew he discovered them, and it's revealed to be Astrum Solus, who promises to end, so long as they still have the Speculatores around, otherwise she'll keep causing problems, which he won't want
	id = militem.scorched.125
	title = militem.scorched.125.t
	desc = militem.scorched.125.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.125"}
	
	is_triggered_only = yes
	
	option = { #You make a bad argument, but I will accept.
		name = militem.scorched.125.a
		add_stability = -0.05
		event_target:EQS_astrum_solus_target = {
			set_nationality = ROOT
		}
		hidden_effect = {
			3 = { 
				add_state_modifier = {
					modifier = {
						resistance_growth = -0.25
					}
				} 
			}
			2 = { 
				add_state_modifier = {
					modifier = {
						resistance_growth = -0.25
					}
				} 
			}
			12 = { 
				add_state_modifier = {
					modifier = {
						resistance_growth = -0.25
					}
				} 
			}
			75 = { 
				add_state_modifier = {
					modifier = {
						resistance_growth = -0.25
					}
				} 
			}
		}
	}
}

country_event = { #Scorched Earth, with the Empire stabilized, heads out to the balcony of the palace to speak to forcibly assembled ponies, to give one final speach of chastisement for their sins, and that he will lead to them all being purified through their actions, and that he will lead the Empire to safety, through becoming the new Emperor, as the God-Empress couldn't even protect the Empire, which earns shock from all
	id = militem.scorched.126
	title = militem.scorched.126.t
	desc = militem.scorched.126.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.126"}
	
	is_triggered_only = yes
	
	option = { #May we last for a thousand years!
		name = militem.scorched.126.a
		add_war_support = 0.05
		add_stability = 0.05
		every_state = {
			limit = {
				NOT = { is_core_of = EQS }
				is_owned_by = ROOT
				OR = {
					is_core_of = EQS
					is_claimed_by = EQS
				}
			}
			add_compliance = 20
			add_resistance = -20
		}
	}
}

country_event = { #Scorched walks into his throne room, waxing thoughtful for a moment on the glass of the Empress, and stating that he will lead the Empire into true greatness, which he wishes that Luminous would see as well, but he is prepared for the lonesome rode ahead, as the new Emperor of Ponykind.
	id = militem.scorched.127
	title = militem.scorched.127.t
	desc = militem.scorched.127.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.127"}
	
	is_triggered_only = yes
	
	option = { #SOL INVICTUS!
		name = militem.scorched.127.a
		add_ideas = MTS_freeing_the_world
		set_cosmetic_tag = EQS_SOL
		every_country = {
			limit = {
				is_in_array = {
					global.equus_nations = THIS.id
				}
				exists = yes
				NOT = { tag = ROOT }
			}
			ROOT = {
				create_wargoal = {
					type = annex_everything
					target = PREV
				}
			}
		}
	}
}

country_event = { #After the last conquests of Equus are completed, Scorched is shocked as ponies start to charge the palace, now that there is little to keep ponies from focusing on his horrible policies, which have ruined them all, and complete rebellion follows, with even the Adoratio getting in on it, with Serene Shore using his own weapon to end his life, and now repair the continental empire
	id = militem.scorched.128
	title = militem.scorched.128.t
	desc = militem.scorched.128.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.128"}
	
	trigger = {
		tag = MTS
		all_country = {
			NOT = { tag = MTS }
			is_in_array = { global.equus_nations = THIS.id }
			exists = no
		}
	}
	fire_only_once = yes
	
	option = { #Sic Semper Tyranis.
		name = militem.scorched.128.a
		custom_effect_tooltip = MTS_fate_of_tyrants_tt
		retire_character = EQS_Scorched_Earth
		IF = {
			limit = { has_completed_focus = MTS_replace_corrupt_priestesses }
			MTS_Serene_Shore = {
				add_country_leader_role = {
					promote_leader = yes
					country_leader = {
						expire = "1965.1.1"
						ideology = solarism
						traits = { high_mage_shimmer }
					}
				}
			}
		}
		ELSE = {
			IF = {
				limit = { can_be_country_leader = EQS_Sunset_Shimmer_1048 }
				promote_character = EQS_Sunset_Shimmer_1048
				hidden_effect = {
					IF = {
						limit = {
							EQS_Sunset_Shimmer_1048 = { has_trait = shield_of_the_empire }
						}
						EQS_Sunset_Shimmer_1048 = {
							remove_trait = { trait = shield_of_the_empire ideology = solarism }
							add_trait = { trait = high_mage_shimmer ideology = solarism }
						}
					}
				}
			}
			ELSE = {
				EQS_Sunset_Shimmer_1048 = {
					add_country_leader_role = {
						promote_leader = yes
						country_leader = {
							expire = "1965.1.1"
							ideology = solarism
							traits = { high_mage_shimmer }
							desc = "POLITICS_SUNSET_SHIMMER_DESC"
						}
					}
				}
			}
		}
	}
}

#country_event = { #Scorched Earth meets with his assembled armies outside of NH and he, with Luminous Blade, have a final speech speaking of how the communists are an insult to the Empress, and that the luxury that they live in is an abomination that must be wiped out
#	id = militem.scorched.24
#	title = militem.scorched.24.t
#	desc = militem.scorched.24.d
#	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.scorched.24"}
#	
#	is_triggered_only = yes
#	
#	option = { #They will fall before our faith!
#		name = militem.scorched.24.a
#		every_country = {
#			limit = {
#				is_in_array = { global.southeast_countries = THIS }
#			}
#			ROOT = {
#				if = {
#					limit = {
#						PREV = { 
#							NOT = { tag = MTS }
#							exists = yes
#						}
#					}
#					create_wargoal = {
#						target = PREV
#						type = annex_everything
#					}
#				}
#			}
#		}
#	}
#}

###Warm Night Events###
country_event = { #Warm Night finally is able to relax slightly, as she knows that she has convinced Scorched Earth to stand down on his madness and work with the Adoratio, but she soon worries again when Serene Shore tells her that she'll lead, since she was the ambitious one to even challenge him
	id = militem.warm.1
	title = militem.warm.1.t
	desc = militem.warm.1.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.1"}
	
	is_triggered_only = yes
	
	option = { #Oh, Daybreaker preserve me...
		name = militem.warm.1.a
		add_political_power = 50
		hidden_effect = {
			country_event = {
				id = militem.warm.2
				days = 7
				random_days = 7
			}
		}
	}
}

country_event = { #Warm has a first tour of the military and there is already growing dissent, which she is unable to quell with some words to assure them; alternately it could be a report about how the military is in open disarray with Scorched removed from top leadership, and many generals do not respect Warm
	id = militem.warm.2
	title = militem.warm.2.t
	desc = militem.warm.2.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.2"}
	
	is_triggered_only = yes
	
	option = { #This has gotten dangerous.
		name = militem.warm.2.a
		add_ideas = MTS_dissent_in_the_ranks
	}
}

country_event = { #As a first lesson of sorts, Warm Night leads Scorched Earth through some of the streets of New Horesleans to show how his policies have been already negatively effecting citizens in the city, and how he'd effectively be leading them all to the grave, and preventing them from coming to Daybreaker, which does chip at his defenses
	id = militem.warm.3
	title = militem.warm.3.t
	desc = militem.warm.3.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.2"}
	
	is_triggered_only = yes
	
	option = { #Perhaps you're right about this instance...
		name = militem.warm.3.a
		add_stability = 0.02
	}
}

country_event = { #As a way to get Luminous, who is a friend, back on track, Warm Night meets with her privately to show how she has misread or been mislead by Scorched about certain statements and passages from the Solarist scriptures and how her mission was corrupted, which Luminous is rather upset about, although Warm dissaudes her from doing anything to Scorched, since he was misguided himself
	id = militem.warm.4
	title = militem.warm.4.t
	desc = militem.warm.4.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.4"}
	
	is_triggered_only = yes
	
	option = { #Everypony strays sometimes.
		name = militem.warm.4.a
		add_war_support = 0.02
	}
}

country_event = { #Because of access to the NH government buildings and libraries, Warm Night finds some manifestos and booklets from COBSOC that she finds rather interesting, since there are some synergies with Solarism, and that it could be used, with Solarism, to actually bless ponies and bring them to Daybreaker
	id = militem.warm.5
	title = militem.warm.5.t
	desc = militem.warm.5.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.5"}
	
	is_triggered_only = yes
	
	option = { #It's not heresy when it helps ponies.
		name = militem.warm.5.a
		add_ideas = MTS_learning_new_ways
	}
}

country_event = { #Some priestesses are gathered by Warm Night to hear about how she has discovered many amazing things in the books from COBSOC, but they are far from convinced, and believe she's strayed into heresy, but she is able to at least partly convince them with Serene Shore's help
	id = militem.warm.6
	title = militem.warm.6.t
	desc = militem.warm.6.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.6"}
	
	is_triggered_only = yes
	
	option = { #Dear Daybreaker...
		name = militem.warm.6.a
		swap_ideas = {
			remove_idea = MTS_learning_new_ways
			add_idea = MTS_friendly_society
		}
	}
}

country_event = { #A teacher in one of the only art classes in NH, after being dedicated to religious studies, goes about looking at some of the work that his students have done, which is all about how the Empress is the perfect example of ponykind, and he is rather put off by some of the depictions, and has some burnt
	id = militem.warm.7
	title = militem.warm.7.t
	desc = militem.warm.7.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.7"}
	
	is_triggered_only = yes
	
	option = { #Burn it. Burn it now.
		name = militem.warm.7.a
		add_ideas = MTS_liberal_solarists
	}
}

country_event = { #Follow the inner monologue of a worker who is being paid all right by the church in NH to clean or maintain it, because he sees them all as nothing but nutjobs, but he won't complain about actually making money; he is overly snarky about it all
	id = militem.warm.8
	title = militem.warm.8.t
	desc = militem.warm.8.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.8"}
	
	is_triggered_only = yes
	
	option = { #A bit's a bit.
		name = militem.warm.8.a
		add_ideas = MTS_paid_labor
	}
}

country_event = { #A beggar on the streets of NH is caught completely off guard, because she believes that she would never get anything from anypony, as she is given a large amount of money and other items from a couple of priestesses, who are overly condescending about her needing to turn to Daybreaker, and as she remains clueless, they get more snide about her not understanding her gift that she received
	id = militem.warm.9
	title = militem.warm.9.t
	desc = militem.warm.9.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.9"}
	
	is_triggered_only = yes
	
	option = { #What's the catch?
		name = militem.warm.9.a
		add_ideas = MTS_sympathetic_charity
	}
}

country_event = { #Follow priestesses as they head from the "better" parts of NH to spread charity and the message of Daybreaker among all, as they believe all the good works they are doing will lead to salvation, which they have been convinced of by Warm Night, even if it wasn't her original intention, which consternates her
	id = militem.warm.10
	title = militem.warm.10.t
	desc = militem.warm.10.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.10"}
	
	is_triggered_only = yes
	
	option = { #That's not what I meant...
		name = militem.warm.10.a
		add_ideas = MTS_church_shrinks
	}
}

country_event = { #As she is heading back to her quarters for the night, Warm Night is confronted by Pinpoint, who is far from happy that Warm cancelled most of her research, on the grounds of poor witnessing to the masses or the like, or otherwise being inhumane to Daybreaker's potential followers, and she claims that she will protect everypony from heresy no matter what, which gets Warm Night worried
	id = militem.warm.11
	title = militem.warm.11.t
	desc = militem.warm.11.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.11"}
	
	is_triggered_only = yes
	
	option = { #
		name = militem.warm.11.a
		add_tech_bonus = {
			name = racial_bonus
			uses = 1
			bonus = 1
			category = race_tech
		}
		add_stability = -0.05
	}
}

country_event = { #After a loyal inquisitor informs Warm Night that Pinpoint is trying to work with others to overthrow the government, Warm Night arrests her and despite the verbal abuse she takes from Pinpoint, keeps the option of imprisonment on the table instead
	id = militem.warm.12
	title = militem.warm.12.t
	desc = militem.warm.12.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.12"}
	
	is_triggered_only = yes
	
	option = { #We are not monsters, unlike she.
		name = militem.warm.12.a
		add_stability = 0.1
		add_political_power = -75
		retire_character = MTS_Pinpoint
	}
	option = { #We have to make an example.
		name = militem.warm.12.b
		add_stability = -0.1
		add_political_power = 75
		if = {
			limit = {
				has_government = communism
			}
			add_popularity = {
				ideology = communism
				popularity = 0.05
			}
		}
		else = {
			add_popularity = {
				ideology = fascism
				popularity = 0.05
			}
		}
		retire_character = MTS_Pinpoint
	}
}

country_event = { #In a rather advanced training exercise, some troops of Militem Solar are purpusefully pitted against apparitions of friends or family, while their CO encourages them to go forwrad, as they must learn that their mission of liberation will be disliked by some, and they may have to resort to violence to succeed
	id = militem.warm.13
	title = militem.warm.13.t
	desc = militem.warm.13.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.13"}
	
	is_triggered_only = yes
	
	option = { #Shooting them isn't hard!
		name = militem.warm.13.a
		add_ideas = MTS_missionaries_of_liberty
	}
}

country_event = { #During the night, Warm Night is met by one of the generals who secretly is against her, and he tries to convince her to come with him or stand down, and attempts to arrest her, when she grows suspicious, but he is stopped in time by some nearby guards, which puts her on alert to end the conspiracy against her to keep Militem Solar stable
	id = militem.warm.14
	title = militem.warm.14.t
	desc = militem.warm.14.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.14"}
	
	is_triggered_only = yes
	
	option = { #This is worse than I feared...
		name = militem.warm.10.a
		add_stability = -0.03
	}
}

country_event = { #After assembling who she believes to be all the generals who are against her, Warm Night begins to go over, point by point, objection by objection, to her methods and that she reassures them, with some reluctant help from Scorched Earth, that she is still for returning the South-East to Daybreaker's command and she is still loyal to Daybreaker
	id = militem.warm.15
	title = militem.warm.15.t
	desc = militem.warm.15.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.15"}
	
	is_triggered_only = yes
	
	option = { #Is that really so hard to believe?
		name = militem.warm.15.a
		add_stability = -0.05
		add_political_power = -75
	}
}

country_event = { #Warm Nigh huffily presides over a military tribunal, where a number of generals are brought before her, although they protest their innocence at first, but she goes on about how the Inquisitionis found evidence of their plans to overthrow her, and she reluctantly agrees with the execution sentence for treason
	id = militem.warm.16
	title = militem.warm.16.t
	desc = militem.warm.16.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.16"}
	
	is_triggered_only = yes
	
	option = { #I wish there was another way...
		name = militem.warm.16.a
		add_war_support = 0.05
		add_political_power = 50
		retire_character = MTS_Saber_Rattle
		retire_character = MTS_Crona_Shine
	}
}

country_event = { #A few students struggle to maintain their concentration as a professor that has been installed in the only university in NH speaks about the economics of Solarist theory with some very Markist undertones, which only causes more confusion, since it is neither Markist nor Solarist
	id = militem.warm.17
	title = militem.warm.17.t
	desc = militem.warm.17.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.17"}
	
	is_triggered_only = yes
	
	option = { #No clue what's going on here.
		name = militem.warm.17.a
		add_research_slot = 1
		add_popularity = {
			ideology = communism
			popularity = 0.075
		}
	}
}

country_event = { #As continued reports of the damage wrought with the attacks on NH by Scorched Earth are given to Warm Night, she grows more concerned and even upset at the state of the city, and she takes it upon herself to use some of the church funds she resides in to help, which upsets some of her fellow priestesses
	id = militem.warm.18
	title = militem.warm.18.t
	desc = militem.warm.18.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.18"}
	
	is_triggered_only = yes
	
	option = { #This is for the greater good.
		name = militem.warm.18.a
		one_random_industrial_complex = yes
		one_random_arms_factory = yes
	}
}

country_event = { #As a grizzled sailor winds up on the docks for what he worries may be one of his last days sailing his only ship that provides any possibility of supporting himself, he is surprised when he sees a priestess waiting outside it, and he worries about being arrested or the like, but she offers to buy his ship, to repair it, so long as he keeps doing his important service to keep ponies fed, and answer to the Empire when the time comes
	id = militem.warm.19
	title = militem.warm.19.t
	desc = militem.warm.19.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.19"}
	
	is_triggered_only = yes
	
	option = { #I suppose I don't got a choice.
		name = militem.warm.19.a
		add_ideas = MTS_local_industry_encouraged
	}
}

country_event = { #Warm Night is brought before a couple of families, who are nervous about seeing their new leader, and she is overly welcoming and open, and they are a bit nervous about what it means, until she shows them the new, subsidized housing that was made for them, and she can barely hold back a smile and tears when she sees their joy
	id = militem.warm.20
	title = militem.warm.20.t
	desc = militem.warm.20.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.20"}
	
	is_triggered_only = yes
	
	option = { #This is what we're meant to do.
		name = militem.warm.20.a
		add_stability = 0.05
		28 = {
			add_extra_state_shared_building_slots = 1
		}
	}
}

country_event = { #Warm Night nervously gets in front of a podium as she sees the number of ponies who have gathered before her to hear what she has to say about her plans for the South-East, and she goes on about how she has helped to lift them out of the worst of their poverty and the like, because of both COBSOC and Scorched, but they have to spread this liberty to the rest of the peninsula, even if it means war, which she doesn't want to do, but decides it has to be done
	id = militem.warm.21
	title = militem.warm.21.t
	desc = militem.warm.21.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.21"}
	
	is_triggered_only = yes
	
	option = { #This wasn't an easy choice.
		name = militem.warm.21.a
		every_country = {
			limit = {
				is_in_array = { global.southeast_countries = THIS.id }
				NOT = { tag = ROOT }
				exists = yes
			}
			ROOT = {
				create_wargoal = {
					type = annex_everything
					target = PREV
				}
			}
		}
	}
}

country_event = { #After the final bits of combat fades out from NB, Warm Night begins to wander the destruction with an escort, and she sees some of the dead fighters, as she goes through the city, whcih makes her feel more and more disgusted that she had to fight, but she gives some congratulations to her troops, as they helped save more of COBSOC for the Empire and Solarism
	id = militem.warm.22
	title = militem.warm.22.t
	desc = militem.warm.22.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.22"}
	
	is_triggered_only = yes
	
	option = { #May we avoid conflict like this again.
		name = militem.warm.22.a
		add_stability = 0.03
		add_popularity = {
			ideology = communism
			popularity = 0.03
		}
	}
}

country_event = { #Even though she has some hesitations about heavily praising the different soldiers who helped to free the South-East, Warm Night holds a parade in NB regarding their service, and she praises them for helping bring salvation to the South-East, although she can tell how it's motivating some to join, which makes her worry about encouraging future conflict
	id = militem.warm.23
	title = militem.warm.23.t
	desc = militem.warm.23.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.23"}
	
	is_triggered_only = yes
	
	option = { #Maybe I'm overemphasizing.
		name = militem.warm.23.a
		add_ideas = MTS_heroes_of_the_age
	}
}

country_event = { #A demonstration is given to Warm Night, now that the nation is nominally stabilized, about how to occupy the land effectively, with Scorched showing some of his refined tactics, and Warm Night reluctantly agrees to implement them, even though they are harsher than she would like
	id = militem.warm.24
	title = militem.warm.24.t
	desc = militem.warm.24.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.24"}
	
	is_triggered_only = yes
	
	option = { #When in New Baltimare...
		name = militem.warm.24.a
		add_ideas = MTS_defending_the_vision
	}
}

country_event = { #As some of COBSOC's government offices are cleared, Warm Night finds some books from Cobalt Hoof in reference to tactics deployed in the earlier days, and how it stabilized the nation, although it was also brutal, which disgusts her; she still sees the merit in implementing them to keep the land, though
	id = militem.warm.25
	title = militem.warm.25.t
	desc = militem.warm.25.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.25"}
	
	is_triggered_only = yes
	
	option = { #I feel like I signed away my soul...
		name = militem.warm.25.a
		add_ideas = MTS_native_tactics
	}
}

country_event = { #As Warm Night prepares to rest of the night, she believes she hears some noise from outside her room in now the new church in New Baltimare, and while she is on edge and prepares for something, she is surprised when a thestral, a communist thestral, swoops in and pledges that she'll help Warm, since she will be raising thestrals out of poverty, too, and Warm really needs somepony who knows COBSOC's tactics
	id = militem.warm.26
	title = militem.warm.26.t
	desc = militem.warm.26.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.26"}
	
	is_triggered_only = yes
	
	option = { #I suppose you're right.
		name = militem.warm.26.a
		MTS_Silhouette = {
			add_corps_commander_role = {
				traits = { thestral_race_trait infantry_officer ranger }
				skill = 3
				attack_skill = 2
				defense_skill = 3
				planning_skill = 2
				logistics_skill = 3
			}
		}
		custom_effect_tooltip = MTS_silhouette_stats_tt
		add_ideas = MTS_COBSOC_pardons
	}
}

country_event = { #With further developments and refinements of Solarist tactics, Warm Night watches as a group of soldiers goes through a demonstration of how the main tactics for the future will be far less lethal, as simulated civilians are left alive as soldiers take out fake military targets, which makes her confident they will defend the Militem with minimal losses
	id = militem.warm.27
	title = militem.warm.27.t
	desc = militem.warm.27.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.27"}
	
	is_triggered_only = yes
	
	option = { #We will show the Empress's love.
		name = militem.warm.27.a
		add_ideas = MTS_guardians_of_the_day
	}
}

country_event = { #Warm Night is given a proposal by some of the other priestesses or inquisitors about how to use many of the prisoners, and that they should be used to be labor to rebuild some of the infrastructure, under the guise that they will be learning unity after being done, although they'll probably still be used as different labor or just executed for crimes, which she reluctantly agrees to
	id = militem.warm.28
	title = militem.warm.28.t
	desc = militem.warm.28.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.28"}
	
	is_triggered_only = yes
	
	option = { #Some harsher tactics are still needed, I suppose
		name = militem.warm.28.a
		add_timed_idea = {
			days = 60
			idea = MTS_unified_solarist_peninsula
		}
		set_country_flag = MTS_unlock_propserity
		unlock_decision_category_tooltip = MTS_investing_in_ourselves_category
	}
}

country_event = { #With the first, small-time projects for the Militem underway, Warm Night accepts further proposals from her fellow priestesses, no matter how odd they are, and she lists out a few which catch her eye because of how absurd they are, but she okays them anyway
	id = militem.warm.29
	title = militem.warm.29.t
	desc = militem.warm.29.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.29"}
	
	is_triggered_only = yes
	
	option = { #All will benefit everypony!
		name = militem.warm.29.a
		custom_effect_tooltip = MTS_spend_that_money_tt
	}
}

country_event = { #Follow a priestess as she tries to gather some funds from different churches that have been established across the South-East, as she is seen as somewhat of a traitor, since she's taking money from them, and she argues how they will better everypony, although they don't necessarily see it that way, as she is despised despite being donated to
	id = militem.warm.30
	title = militem.warm.30.t
	desc = militem.warm.30.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.30"}
	
	is_triggered_only = yes
	
	option = { #It is worth the derision.
		name = militem.warm.30.a
		two_random_industrial_complex = yes
		one_random_industrial_complex = yes
		one_random_industrial_complex = yes
		35 = { add_resource = { type = steel amount = 8 } }
		351 = { add_resource = { type = steel amount = 8 } }
		15 = { add_resource = { type = steel amount = 8 } }
	}
}

country_event = { #After the construction of the new defense planning hub that Scorched Earth convinced Warm to build for him, Warm is brought to preside over a meeting of the generals for how to keep the Militem defended, which she provides some suggestions to, but she is mostly ignored as it devolves into different egos fighting together
	id = militem.warm.31
	title = militem.warm.31.t
	desc = militem.warm.31.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.31"}
	
	is_triggered_only = yes
	
	option = { #I think I just need to lie down...
		name = militem.warm.31.a
		add_ideas = MTS_SOCAD
	}
}

country_event = { #A manager grumbles about how wages are still killing her, after she already cut them back, since she is forced to employ so many, despite how many are just slackers, and she is interrupted in her complaints by an inquisitor visiting, for the sole purpose of arresting her after she was informed the manager was abusing workers, which the manager denies, although is presented the facts for effectively trying to starve her workers
	id = militem.warm.32
	title = militem.warm.32.t
	desc = militem.warm.32.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.32"}
	
	is_triggered_only = yes
	
	option = { #I need to live, too!
		name = militem.warm.32.a
		add_ideas = MTS_no_indentured_servants
	}
}

country_event = { #Follow some workers as they get off work, completely and utterly exhausted as they were tasked to the bone, although they have their days' wages, which they all agree was better than under COBSOC, although they're so tired, they can barely afford any luxuries that they wanted, although they are at least happy to not be starving, and thank Daybreaker for it
	id = militem.warm.33
	title = militem.warm.33.t
	desc = militem.warm.33.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.33"}
	
	is_triggered_only = yes
	
	option = { #Maybe one day we'll get a vacation.
		name = militem.warm.33.a
		add_ideas = MTS_harsh_fairness
	}
}

country_event = { #A worker starts finishing the touches on a new cathedral in New Baltimare, which has him in awe for a while, and distracts him from his scuplture of Daybreaker, which he breaks, and he worries how he will be punished, and tries to find a way to hide his mistake
	id = militem.warm.34
	title = militem.warm.34.t
	desc = militem.warm.34.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.34"}
	
	is_triggered_only = yes
	
	option = { #She is forgiving, yes?
		name = militem.warm.34.a
		add_ideas = MTS_genuflecting_architecture
	}
}

country_event = { #Although it is not true competition, Warm Night begins to force different businesses to compete on price, quality, etc., which only earns the ire of some of the owners, since it is expensive, and she is petitioned to stop, although she does not, since it makes the situation better for everypony else, which earns the anger of many businessponies across the peninsula
	id = militem.warm.35
	title = militem.warm.35.t
	desc = militem.warm.35.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.35"}
	
	is_triggered_only = yes
	
	option = { #It is for the greater good.
		name = militem.warm.35.a
		add_ideas = MTS_solarist_economics
	}
}

country_event = { #A couple of ponies are practically dragged by some of their friends into a service in a church, and are entirely resistant or even mocking of the sermon and the preaching therein, but after the service they are surprised when they are given food and warm drinks, like everypony else, as the Adoratio claims they are there to only serve and provide
	id = militem.warm.36
	title = militem.warm.36.t
	desc = militem.warm.36.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.36"}
	
	is_triggered_only = yes
	
	option = { #Maybe they aren't so bad...
		name = militem.warm.36.a
		add_ideas = MTS_energy_for_all
	}
}

country_event = { #A priestess barges into a group meeting that many others are currently having over some different texts, and she is holding a few pages in her magic of something, and berates them for ruining the pure word of the early scripture writers, because of how it is dumbed down for the laypony and with poor, weird translations, although they ignore her and shut her out
	id = militem.warm.37
	title = militem.warm.37.t
	desc = militem.warm.37.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.37"}
	
	is_triggered_only = yes
	
	option = { #I am trying to keep it pure!
		name = militem.warm.37.a
		add_stability = -0.05
		add_political_power = -75
		add_war_support = 0.05
		add_popularity = {
			ideology = communism
			popularity = 0.1
		}
	}
}

country_event = { #After just converting to Solarism, a pony is given a long-winded breakdown of what they have agreed to do, which involves also spreading the news to all those she knows, as everypony under the Empress are equal and blessed, but those who are not are worth less than dirt, which confuses and even scares the new convert
	id = militem.warm.38
	title = militem.warm.38.t
	desc = militem.warm.38.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.38"}
	
	is_triggered_only = yes
	
	option = { #You will not need them in the future.
		name = militem.warm.38.a
		add_ideas = MTS_equal_worshippers
	}
}

country_event = { #A family carefully moves through the streets of Stableside, still seeing some propaganda of Lucky Star that was never torn down, promising safety and security, but they feel like that has been completely lost with the Solarists; when they come to a church, the doors are open, and a priestess heavily hints they should enter and convert, lest they be left to perish and starve or be arrested as heretics
	id = militem.warm.39
	title = militem.warm.39.t
	desc = militem.warm.39.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.39"}
	
	is_triggered_only = yes
	
	option = { #What choice do we have?
		name = militem.warm.39.a
		add_stability = 0.05
		add_popularity = {
			ideology = communism
			popularity = 0.05
		}
	}
}

country_event = { #A group of university students are brought before their priestess dean of their university, who reprimands them about their protests regarding religious teaching in the school, and she ensures they will comply in the future, through proper punishment, as an example to others who might protest across the different schools
	id = militem.warm.40
	title = militem.warm.40.t
	desc = militem.warm.40.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.40"}
	
	is_triggered_only = yes
	
	option = { #How does one learn without mistakes?
		name = militem.warm.40.a
		add_popularity = {
			ideology = communism
			popularity = 0.075
		}
		add_manpower = -15000
		add_political_power = 50
	}
}

country_event = { #As Warm Night prepares to rest of the evening, she is surprised when Scorched Earth practically bursts into her room, demanding that he speak with her, which she grants; he slowly and awkwardly admits that he and Luminous have been seeing each other, which isn't surprising to Warm, and that he wishes to marry her, but he is unsure how to proceed, which amuses Warm as she provides guidance
	id = militem.warm.41
	title = militem.warm.41.t
	desc = militem.warm.41.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.41"}
	
	is_triggered_only = yes
	
	option = { #I shall prepare nuptials.
		name = militem.warm.41.a
		custom_effect_tooltip = MTS_love_is_in_bloom_tt
		hidden_effect = {
			country_event = {
				id = militem.warm.42
				days = 7
			}
		}
	}
}

country_event = { #For preparation for the marriage, Warm Night meets with both Scorched and Luminous, to give them some first bits of advice and warnings about marriage, and both Luminous and Scorched begin to understand how grave a commitment it is, but in the end, do agree to continue
	id = militem.warm.42
	title = militem.warm.42.t
	desc = militem.warm.42.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.42"}
	
	is_triggered_only = yes
	
	option = { #You won't see this in the Empire, that's for sure.
		name = militem.warm.42.a
		country_event = {
			id = militem.warm.43
			days = 3
		}
	}
}

country_event = { #Scorched and Luminous both nervously are wedded by Warm Night, who finds it amusing that both are so uncomfortable about what is going on, and as the vows happen, both of them stumble their way through, but in the end, it is still a successful marriage
	id = militem.warm.43
	title = militem.warm.43.t
	desc = militem.warm.43.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.43"}
	
	is_triggered_only = yes
	
	option = { #I pronounce you stallion and mare.
		name = militem.warm.43.a
		EQS_Scorched_Earth = {
			add_trait = { trait = bound_flames }
		}
		EQS_Luminous_Blade = {
			add_trait = { trait = bound_flames }
		}
	}
}

country_event = { #Follow an inquisitor as she flees from and is ultimately captured by soldiers of the Militem, and she is brought before Warm to be chastised for failing to adhere to the new mission of support of ponies in the Militem, with the new, proper theology of Solarism; the inquisitor tries to resist, but is eventually broken by Warm
	id = militem.warm.44
	title = militem.warm.44.t
	desc = militem.warm.44.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.44"}
	
	is_triggered_only = yes
	
	option = { #You didn't think that you'd continue, did you?
		name = militem.warm.44.a
		add_ideas = MTS_illuminated_inquisitors
	}
}

country_event = { #An inquisitor attempts to work with some of her sisters to plan an overthrow and arrest of Warm Night, since she is clearly a heretic in the guise of a priestess, but she is caught and arrested by those she trusted, and is brought forward to be tried for heresy herself, by Warm, and she curses Warm before she is charged as guilty
	id = militem.warm.45
	title = militem.warm.45.t
	desc = militem.warm.45.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.45"}
	
	is_triggered_only = yes
	
	option = { #The Empress will correct your soul when you die!
		name = militem.warm.45.a
		add_ideas = MTS_heightened_inquisitors
	}
}

country_event = { #Follow an inquisitor as she performs her new duty as a priestess in the Militem, and when some ponies come for confessionals, she is absolutely horrible at it, because she wants to condemn or kill them for heresy, but she is eventually reined in by others there, and is reprimanded accordingly
	id = militem.warm.46
	title = militem.warm.46.t
	desc = militem.warm.46.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.46"}
	
	is_triggered_only = yes
	
	option = { #I will not curse confessioners. I will not curse confessioners. I will not...
		name = militem.warm.46.a
		add_ideas = MTS_integrated_inquisitors
	}
}

country_event = { #A couple of prisoners of Militem Solar snark between each other as they and others are led toward a central hub in New Baltimare, as their guards lament that they must be punished for their resistance to the Empress, and the prisoners doubt that to actually be the case, given how some priestesses are eyeing them with sadistic looks
	id = militem.warm.47
	title = militem.warm.47.t
	desc = militem.warm.47.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.47"}
	
	is_triggered_only = yes
	
	option = { #Did that one just wink?
		name = militem.warm.47.a
		every_state = {
			limit = {
				is_owned_by = ROOT
				OR = {
					is_claimed_by = BAL
					is_core_of = BAL
				}
				NOT = { is_core_of = ROOT }
			}
			add_resistance = -10
		}
	}
}

country_event = { #A few younger ponies, who are overly motivated to fight against what they see as oppression, prepare to lead a crowd of protesters onto the government buildings of New Baltimare, but are soon arrested by some inquisitors and soldiers, as they try to break up the growing crowd of those who refuse to bend the knee to Daybreaker, so they can be properly punished
	id = militem.warm.48
	title = militem.warm.48.t
	desc = militem.warm.48.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.48"}
	
	is_triggered_only = yes
	
	option = { #Where's our freedom of speech?!
		name = militem.warm.48.a
		every_state = {
			limit = {
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
				OR = {
					is_claimed_by = BAL
					is_core_of = BAL
				}
			}
			add_resistance = -5
			add_compliance = 5
		}
	}
}

country_event = { #As Warm works on some of her leadership needs for the rebuilding of Militem Solar, she is interrupted by a number of thestrals, who are desperate enough to ask her for help, and she ends up warring with herself a bit, but finally agrees, as they could be an asset, although she only gives them the barest of necessities
	id = militem.warm.49
	title = militem.warm.49.t
	desc = militem.warm.49.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.49"}
	
	is_triggered_only = yes
	
	option = { #Do not squander this.
		name = militem.warm.49.a
		add_stability = -0.02
		add_political_power = 25
	}
}

country_event = { #Follow some other young ponies as they are motivated by priestesses condemning the protests against Warm Night, as they get the idea that they should also protest the protesters, and thereby show support for Daybreaker, and when they do, it leads to violence as the two sides clash, as well as more arrests
	id = militem.warm.50
	title = militem.warm.50.t
	desc = militem.warm.50.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.50"}
	
	is_triggered_only = yes
	
	option = { #Makes sense.
		name = militem.warm.50.a
		every_state = {
			limit = {
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
				OR = {
					is_claimed_by = BAL
					is_core_of = BAL
				}
			}
			add_compliance = 5
		}
	}
}

country_event = { #As the protests grow worse, Warm Night decides to meet with some of the apparent heads of the protests and try to negotiate a way for them to stop, but when she does meet, it is effectively useless, because the ponies refuse to listen to her as they demand "freedoms" they supposedly had before
	id = militem.warm.51
	title = militem.warm.51.t
	desc = militem.warm.51.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.51"}
	
	is_triggered_only = yes
	
	option = { #Unponying is not a right!
		name = militem.warm.51.a
		every_state = {
			limit = {
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
				OR = {
					is_claimed_by = BAL
					is_core_of = BAL
				}
			}
			add_resistance = -5
			add_compliance = 5
		}
	}
}

country_event = { #A couple of ponies rush into the hospital in NB with a third injured pony, and they try to get some medical care for the wounded pony; the staff are willing until they realize that the ponies are associated tangentially with some protesters, and the ponies are denied any care unless they cut all ties, or repent
	id = militem.warm.52
	title = militem.warm.52.t
	desc = militem.warm.52.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.52"}
	
	is_triggered_only = yes
	
	option = { #She's dying and you want us to say a prayer?!
		name = militem.warm.52.a
		every_state = {
			limit = {
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
				OR = {
					is_core_of = BAL
					is_claimed_by = BAL
				}
			}
			add_compliance = 5
			add_resistance = -5
		}
	}
}

country_event = { #As part of the agreements for servicing thestrals, priestesses head down into the ghettos of Red Glory to ensure they're safe, and all the while they complain and moan about helping the spawn of Nightmare Moon, and they can sense resentment among the thestrals, who are still wallowing in squalor, although not enough to perish
	id = militem.warm.53
	title = militem.warm.53.t
	desc = militem.warm.53.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.53"}
	
	is_triggered_only = yes
	
	option = { #Ingrates.
		name = militem.warm.53.a
		add_stability = 0.05
		30 = { add_state_modifier = { modifier = { state_production_speed_buildings_factor = 0.1 } } }
		31 = { add_state_modifier = { modifier = { state_production_speed_buildings_factor = 0.1 } } }
		350 = { add_state_modifier = { modifier = { state_production_speed_buildings_factor = 0.1 } } }
		36 = { add_state_modifier = { modifier = { state_production_speed_buildings_factor = 0.1 } } }
		348 = { add_state_modifier = { modifier = { state_production_speed_buildings_factor = 0.1 } } }
	}
}

country_event = { #As part of a routine meeting with new recruits, Warm Night delivers a small sermon or speech about their service to Daybreaker, and the language she uses is rather confusing to a few thestrals who have volunteered, in agreement with the Militem about working together, and she tiredly explains basic concepts, and ultimately leads them to convert to Solarism, if reluctantly
	id = militem.warm.54
	title = militem.warm.54.t
	desc = militem.warm.54.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.54"}
	
	is_triggered_only = yes
	
	option = { #Now do you understand?
		name = militem.warm.54.a
		MTS_Umbral_Petal = {
			add_corps_commander_role = {
				traits = { thestral_race_trait commando solaris_militarium }
				skill = 2
				attack_skill = 1
				defense_skill = 2
				planning_skill = 1
				logistics_skill = 3
			}
		}
		MTS_Sideswipe = {
			add_corps_commander_role = {
				traits = { thestral_race_trait trickster solaris_militarium }
				skill = 1
				attack_skill = 1
				defense_skill = 1
				planning_skill = 1
				logistics_skill = 1
			}
		}
		custom_effect_tooltip = MTS_umbral_petal_stats_tt
		custom_effect_tooltip = MTS_sideswipe_stats_tt
	}
}

country_event = { #Warm Night is given a request by one of her harsher inquisitors, which she reluctantly reads as protests still go on outside of the COBSOC government offices, and she eventually agrees to the harsh proposal of using prisoners from the protests as labor, and thereby, an example to what will happen if they continue
	id = militem.warm.55
	title = militem.warm.55.t
	desc = militem.warm.55.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.55"}
	
	is_triggered_only = yes
	
	option = { #If only we didn't have to fall back on savagery.
		name = militem.warm.55.a
		1214 = { add_extra_state_shared_building_slots = 1 }
		15 = { add_extra_state_shared_building_slots = 1 }
		24 = { add_extra_state_shared_building_slots = 1 }
		33 = { add_extra_state_shared_building_slots = 1 }
		every_state = {
			limit = {
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
				OR = {
					is_claimed_by = BAL
					is_core_of = BAL
				}
			}
			add_compliance = 5
			add_resistance = -5
		}
	}
}

country_event = { #A mare who was part of the protests effectively rots in one of the prison cells in NB, although she is not completely ignored, as she has food, and she also has a shortened copy of Solarist scriptures, plus some poster propaganda of Daybreaker's forgiveness, and as she laments there longer, she eventually reads the scriptures and decides to repent, so long as it'll get her out of the cell
	id = militem.warm.56
	title = militem.warm.56.t
	desc = militem.warm.56.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.56"}
	
	is_triggered_only = yes
	
	option = { #Don't think I'm asking too big a miracle.
		name = militem.warm.56.a
		add_ideas = MTS_prison_prostletyzers
	}
}

country_event = { #A nightshift manager of a factory, which can now operate thanks to the thestrals on a 24/7 basis, has a meeting with her other managers before they end their shifts to talk about how they can more easily mess up the experience of their thestral "workers", by providing as little as possible but keeping them coming back, which makes the others nervous, but they go along with her plans regardless
	id = militem.warm.57
	title = militem.warm.57.t
	desc = militem.warm.57.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.57"}
	
	is_triggered_only = yes
	
	option = { #You're sure that it won't backfire?
		name = militem.warm.57.a
		add_stability = 0.05
		30 = { add_state_modifier = { modifier = { state_resources_factor = 0.05 } } }
		31 = { add_state_modifier = { modifier = { state_resources_factor = 0.05 } } }
		350 = { add_state_modifier = { modifier = { state_resources_factor = 0.05 } } }
		36 = { add_state_modifier = { modifier = { state_resources_factor = 0.05 } } }
		348 = { add_state_modifier = { modifier = { state_resources_factor = 0.05 } } }
	}
}

country_event = { #A thestral lieutenant, after going through the training for the Militem, is led to his squad which he will lead in battle, and the squad is in disbelief, since they never thought they'd be serving a thestral, and they almost revolt there, although the thestral puts it down with harsh punishments, possibly even beatings or an execution
	id = militem.warm.58
	title = militem.warm.58.t
	desc = militem.warm.58.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.58"}
	
	is_triggered_only = yes
	
	option = { #I will be obeyed!
		name = militem.warm.58.a
		add_ideas = MTS_night_raiders
	}
}

country_event = { #Groups of ponies flee after the protests are finally broken up, and they are pursued into the jungle by inquisitors, and one group is captured, and begs forgiveness or mercy, although for constantly being a thorn in the Militem's side, they are executed immediately by fire
	id = militem.warm.59
	title = militem.warm.59.t
	desc = militem.warm.59.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.59"}
	
	is_triggered_only = yes
	
	option = { #The end of our problems.
		name = militem.warm.59.a
		every_state = {
			limit = {
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
				OR = {
					is_claimed_by = BAL
					is_core_of = BAL
				}
			}
			add_compliance = 5
			add_resistance = -10
		}
	}
}

country_event = { #Warm Night receives a report about how the thestrals have improved the productivity of the nation, and because of their integration with one aspect of the country, have made it even more specialized and effective in a specific area, whether industry or war
	id = militem.warm.60
	title = militem.warm.60.t
	desc = militem.warm.60.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.60"}
	
	is_triggered_only = yes
	
	option = { #It was good to make peace.
		name = militem.warm.60.a
		IF = {
			limit = {
				has_completed_focus = MTS_workforce_underpinnings
			}
			30 = { 
				add_state_modifier = { modifier = { local_supplies = 0.15 } }
				add_state_modifier = { modifier = { recruitable_population_factor = -0.15 } }
			}
			31 = { 
				add_state_modifier = { modifier = { local_supplies = 0.15 } }
				add_state_modifier = { modifier = { recruitable_population_factor = -0.15 } }
			}
			350 = { 
				add_state_modifier = { modifier = { local_supplies = 0.15 } }
				add_state_modifier = { modifier = { recruitable_population_factor = -0.15 } }
			}
			36 = { 
				add_state_modifier = { modifier = { local_supplies = 0.15 } }
				add_state_modifier = { modifier = { recruitable_population_factor = -0.15 } }
			}
			348 = { 
				add_state_modifier = { modifier = { local_supplies = 0.15 } }
				add_state_modifier = { modifier = { recruitable_population_factor = -0.15 } }
			}
		}
		ELSE = {
			add_ideas = MTS_nocturnal_laborers
		}
	}
}

country_event = { #With the help of Serene Shore, who encourages Warm to be calm and think on the way to pen her request, Warm Night pens a letter to Sanctum Solar, asking to be brought back into the Empress's fold, and thereby aiding her in the reclaiming of the Empire's territory
	id = militem.warm.61
	title = militem.warm.61.t
	desc = militem.warm.61.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.61"}
	
	is_triggered_only = yes
	
	option = { #We can only hope that she answers kindly.
		name = militem.warm.61.a
		IF = {
			limit = {
				country_exists = EQS
			}
			EQS = {
				country_event = militem.warm.62
			}
		}
		ELSE_IF = {
			limit = {
				NOT = { country_exists = EQS }
				country_exists = SLW
			}
			SLW = {
				country_event = militem.warm.62
			}
		}
		ELSE = {
			hidden_effect = {
				country_event = {
					id = militem.warm.63
					days = 7
					random_days = 7
				}
			}
		}
	}
}

country_event = { #A letter arrives from Warm Night to the leader of either EQS or SLW, stating how she has helped repair the South-East and converted many to Solarism with Daybreaker's mercy, and that she wishes to join the Empire to assist with its restoration
	id = militem.warm.62
	title = militem.warm.62.t
	desc = militem.warm.62.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.62"}
	
	is_triggered_only = yes
	
	option = { #I will never accept a blatant heretic!
		name = militem.warm.62.a
		MTS = {
			country_event = {
				id = militem.warm.63
				days = 3
				random_days = 5
			}
			set_country_flag = MTS_EQS_rejected
		}
	}
	option = { #She clearly has tamed the beast. She will relearn her place soon enough.
		name = militem.warm.62.b
		MTS = {
			country_event = {
				id = militem.warm.63
				days = 3
				random_days = 5
			}
			set_country_flag = MTS_EQS_accepted
		}
	}
}

country_event = { #A missive is returned by EQS or SLW, either approving or condemning the request, the latter because of her blatant heresy; if EQS and SLW are gone, then it is an eventually conclusion because of there being no response, along with word of occupation in Sanctum Solar
	id = militem.warm.63
	title = {
		text = militem.warm.63.t.a
		trigger = {
			has_country_flag = MTS_EQS_accepted
		}
	}
	title = {
		text = militem.warm.63.t.b
		trigger = {
			has_country_flag = MTS_EQS_rejected
		}
	}
	title = {
		text = militem.warm.63.t.c
		trigger = {
			NOT = { has_country_flag = MTS_EQS_accepted }
			NOT = { has_country_flag = MTS_EQS_rejected }
		}
	}
	desc = {
		text = militem.warm.63.d.a
		trigger = {
			has_country_flag = MTS_EQS_accepted
		}
	}
	desc = {
		text = militem.warm.63.d.b
		trigger = {
			has_country_flag = MTS_EQS_rejected
		}
	}
	desc = {
		text = militem.warm.63.d.c
		trigger = {
			NOT = { has_country_flag = MTS_EQS_accepted }
			NOT = { has_country_flag = MTS_EQS_rejected }
		}
	}
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.63"}
	
	is_triggered_only = yes
	
	option = { #We are as one!
		name = militem.warm.63.a
		trigger = {
			has_country_flag = MTS_EQS_accepted
		}
		mark_focus_tree_layout_dirty = yes
	}
	option = { #This was not unexpected.
		name = militem.warm.63.b
		trigger = {
			has_country_flag = MTS_EQS_rejected
		}
		mark_focus_tree_layout_dirty = yes
	}
	option = { #We are alone on the continent.
		name = militem.warm.63.c
		trigger = {
			NOT = { has_country_flag = MTS_EQS_rejected }
			NOT = { has_country_flag = MTS_EQS_accepted }
		}
		set_country_flag = MTS_EQS_rejected
		mark_focus_tree_layout_dirty = yes
	}
}

country_event = { #As she waits for the entourage from Daybreaker or the other Solar Empire leader in New Horseleans, Warm Night worries about how accepted they will actually be, since she is far from orthodox, and she tries to play herself as more orthodox than she is when the priestesses arrive, although it's hard to hide given how ponies treat her on the street
	id = militem.warm.64
	title = militem.warm.64.t
	desc = militem.warm.64.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.64"}
	
	is_triggered_only = yes
	
	option = { #They're just... overjoyed at serving the Empress!
		name = militem.warm.64.a
		add_stability = 0.02
		add_political_power = 25
	}
}

country_event = { #When Warm Night and the other priestesses return to New Baltimare, there are already protests about how Daybreaker will treat them too harshly, and if they aren't ensured freedoms soon there will be another war in the South-East, which she tries to calm down immediately, but it doesn't stop the obvious tension in the city from growing greater
	id = militem.warm.65
	title = militem.warm.65.t
	desc = militem.warm.65.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.65"}
	
	is_triggered_only = yes
	
	option = { #This will blow over, probably.
		name = militem.warm.65.a
		add_ideas = MTS_peninsular_crossroads
	}
}

country_event = { #As one of her first decrees as Daybreaker's ordained leader, Warm Night states that the Empress has heard their worries, and that she will be listening to their concerns, but the theocratic oligarchy will continue, of the Adoratio ruling only, and that they best not resist, lest the Empress retaliate for their defiance
	id = militem.warm.66
	title = militem.warm.66.t
	desc = militem.warm.66.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.66"}
	
	is_triggered_only = yes
	
	option = { #Surely there must be better messaging than this?
		name = militem.warm.66.a
		add_stability = 0.05
	}
}

country_event = { #Warm Night sees how the government is clearly unpopular, and that it could turn into something far more dangerous if she doesn't do something and listen to them, and she goes against most recommendations and declares that she will lead the Ordo into their first elections, and then resign afterward, so they can have who they really wanted as their direct ruler and Daybreaker's chosen
	id = militem.warm.67
	title = militem.warm.67.t
	desc = militem.warm.67.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.67"}
	
	is_triggered_only = yes
	
	option = { #Never wanted the job, anyway.
		name = militem.warm.67.a
		add_political_power = 100
		add_popularity = {
			ideology = democratic
			popularity = 0.1
		}
	}
}

country_event = { #Warm Night tiredly waits for objections to be finished from a couple of other priestesses on the new theocratic council, and when they are done, she continues on with what she was reading, since she believes they're all rightful critiques of how the nation is being run, and she pushes for them to accept changes that are requested
	id = militem.warm.68
	title = militem.warm.68.t
	desc = militem.warm.68.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.68"}
	
	is_triggered_only = yes
	
	option = { #Surely you can afford to drink a bit less wine?
		name = militem.warm.68.a
		add_ideas = MTS_adoratio_council
	}
}

country_event = { #Warm Night uncomfortably presides over the talks of a new congress of the various states in the South-East, as they bicker and complain about how they will get a fair constitution for self-rule while remaining faithful for Daybreaker
	id = militem.warm.69
	title = militem.warm.69.t
	desc = militem.warm.69.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.69"}
	
	is_triggered_only = yes
	
	option = { #"Trust me" doesn't cut it.
		name = militem.warm.69.a
		add_stability = 0.03
		add_popularity = {
			ideology = democratic
			popularity = 0.05
		}
	}
}

country_event = { #A priestess is escorted into the new courthouse in New Baltimare, regarding how she has treated some of the citizens who are worse off than others, and she freely admits to it, despite it being against what Ordo Meridian espouses, because she believes the ones whom she didn't help were unfaithful, and didn't deserve any assistance, which is effectively her admitting guilt
	id = militem.warm.70
	title = militem.warm.70.t
	desc = militem.warm.70.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.70"}
	
	is_triggered_only = yes
	
	option = { #Wait until the Empress heres this!
		name = militem.warm.70.a
		add_ideas = MTS_eternal_aid
	}
}

country_event = { #Since the Militem is now a proper Ordo, it requires a new archmage to lead it, and with a few candidates, among whom are some of the archmages that have lasted through the quiet purges of the aggressive ones, Warm Night spots Luminous and she prepares to make her the archmage, as a reward for her service, and also because she would continue the cause in the Empire proper
	id = militem.warm.71
	title = militem.warm.71.t
	desc = militem.warm.71.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.71"}
	
	is_triggered_only = yes
	
	option = { #It is only due.
		name = militem.warm.71.a
		#Give Luminous a new trait and political advisor slot for being an archmage
		EQS_Luminous_Blade = {
			add_advisor_role = {
				advisor = {
					slot = political
					idea_token = luminous_blade
					traits = {
						warrior_archmage
					}
				}
			}
		}
		OVERLORD = { set_country_flag = MTS_united_ordo } #This should set the GFX to be a single Ordo in the Empire, with Luminous as its leader; would have a project for expanding mines and oil fields of the Badlands; should matter whether puppeted or integrated
	}
}

country_event = { #As the threat of others invading, especially changelings, is still on the mind of everypony in the Ordo, the new councils and congress realize that they need Solarist assistance, and seek it from Scorched, and use Warm Night to ask him, and he is annoyed but agrees
	id = militem.warm.72
	title = militem.warm.72.t
	desc = militem.warm.72.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.72"}
	
	is_triggered_only = yes
	
	option = { #What would they do without me?
		name = militem.warm.72.a
		EQS_Scorched_Earth = {
			add_advisor_role = {
				advisor = {
					slot = army_chief
					cost = 200
					idea_token = scorched_earth
					traits = {
						army_chief_defensive_3
					}
				}
			}
		}
	}
}

country_event = { #Some voters, after turning out for the first free election in the Ordo, begin to go on a violent riot as the candidate for the New Baltimare elections who was considered to be a shoo-in, a priestess, is not, and instead is beaten by a thestral, which causes even more upset through the city
	id = militem.warm.73
	title = militem.warm.73.t
	desc = militem.warm.73.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.73"}
	
	is_triggered_only = yes
	
	option = { #And we were the thugs?
		name = militem.warm.73.a
		add_political_power = -50
		add_popularity = {
			ideology = democratic
			popularity = 0.05
		}
	}
}

country_event = { #A few priestesses are protesting how soldiers and inquisitors alike are attempting to drag out most if not all of their money that they collected from tithes to instead turn back and it becomes a bit more intense as they try to keep at least a bit for themselves
	id = militem.warm.74
	title = militem.warm.74.t
	desc = militem.warm.74.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.74"}
	
	is_triggered_only = yes
	
	option = { #Can we not make a bit of money?
		name = militem.warm.74.a
		add_political_power = -300
		add_manpower = 250000
		two_random_industrial_complex = yes
		three_random_industrial_complex = yes
	}
}

country_event = { #A law about the new religious freedoms that ponies, especially thestrals have, is read out to the new government, followed by about a hundred or so stipulations about what is actually permissible, and basically requires still worshiping Daybreaker and following solarism
	id = militem.warm.75
	title = militem.warm.75.t
	desc = militem.warm.75.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.75"}
	
	is_triggered_only = yes
	
	option = { #It'll work.
		name = militem.warm.75.a
		add_ideas = MTS_free_to_worship
	}
}

country_event = { #Warm Night tiredly listens as a different on the council that was established as part of the reforms, and soon another problem arises with some of the thestrals and how they are still treated poorly, and she and some of the others get into a heated discussion on how to solve it, and actually come to an agreement, which surprises even her
	id = militem.warm.76
	title = militem.warm.76.t
	desc = militem.warm.76.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.76"}
	
	is_triggered_only = yes
	
	option = { #Onto the next problem.
		name = militem.warm.76.a
		swap_ideas = {
			remove_idea = MTS_adoratio_council
			add_idea = MTS_wise_priestesses
		}
		remove_ideas = MTS_peninsular_crossroads
	}
}

country_event = { #Follow a thestral as they go about chasing a bit of prey for some tools or some clothing or the like, and they find their target in a massive pool of oil, and are unsure of what to do at first, but when they return with word, it almost instantly starts a new oil rush, and ruins their scavenging ground
	id = militem.warm.77
	title = militem.warm.77.t
	desc = militem.warm.77.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.77"}
	
	is_triggered_only = yes
	
	option = { #Can I get a cut, at least?
		name = militem.warm.77.a
		16 = { add_resource = { type = oil amount = 24 } }
		88 = { add_resource = { type = oil amount = 16 } }
		348 = { add_resource = { type = oil amount = 30 } }
		350 = { add_resource = { type = oil amount = 10 } }
	}
}

country_event = { #Warm Night presides over the final election results of the republic of the south-east, and she is a bit concerned, since it's rather close, and she listens to some of the candidates go on about their platforms with some of the new news media, and when the elections are called, she proclaims the new president, and hopes that it will pacify things
	id = militem.warm.78
	title = militem.warm.78.t
	desc = militem.warm.78.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.78"}
	
	is_triggered_only = yes
	
	option = { #The candidate hopefully will solve things.
		name = militem.warm.78.a
		set_politics = {
			ruling_party = democratic
			elections_allowed = no
		}
		set_party_name = {
			ideology = democratic
			long_name = MTS_legal_heretics_long
			name = MTS_legal_heretics
		}
		MTS_Sugar_Swirl = {
			add_country_leader_role = {
				promote_leader = yes
				#desc = POLITICS_SUGAR_SWIRL_DESC
				country_leader = {
					ideology = harmonic_constitutionalism
					expire = "1965.1.1"
					traits = { }
				}
			}
		}
		###Have multiple options for leaders eventually
		remove_ideas = MTS_peninsular_crossroads
	}
}

country_event = { #To her surprise, Warm Night is brought into Stableside because of an event meant to honor her, and she is confused, since she doesn't know why her service was regarded so, and when she sees that it's a statue of herself, she grows a bit worried about it interferring with Daybreaker worship instead, although she is convinced to accept it, and become the new high mage of the South-East
	id = militem.warm.79
	title = militem.warm.79.t
	desc = militem.warm.79.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.79"}
	
	is_triggered_only = yes
	
	option = { #Maybe it's acceptable...
		name = militem.warm.79.a
		MTS_Warm_Night = { add_trait = { trait = southeastern_savior ideology = religious_socialism } }
	}
}

country_event = { #With the new president chosen, Warm Night is brought into the congressional chambers, which she expects to be about what she sees as her crimes, and instead she is provided an honorary title as head priestess of the South-East, as she has proven she has had the best interest of ponies at heart, and that she could provide further insight, which surprises her
	id = militem.warm.80
	title = militem.warm.80.t
	desc = militem.warm.80.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.80"}
	
	is_triggered_only = yes
	
	option = { #I should be punished, not rewarded.
		name = militem.warm.80.a
		MTS_Warm_Night = {
			add_advisor_role = {
				advisor = {
					slot = political_advisor
					idea_token = warm_night
					traits = { southeastern_mother }
				}
			}
		}
	}
}

country_event = { #With a sigh, Warm Night gives one final look around her quarters as she packs things up, as she has petitioned to move back to Ordo Maris, where she was from, and leave the South-East behind her, and she speaks a short while with Scorched and Luminous to encourage them further, and that she will keep in touch, and she departs for the nearest train station
	id = militem.warm.81
	title = militem.warm.81.t
	desc = militem.warm.81.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.81"}
	
	is_triggered_only = yes
	
	option = { #My work is done.
		name = militem.warm.81.a
		custom_effect_tooltip = MTS_communism_apparently_works_tt
		hidden_effect = { OVERLORD = { country_event = militem.warm.82 } }
	}
}

country_event = { #A short event of a letter from Warm Night requesting that the South-East be fully brought into the fold, and that the leader can keep it either semi-autonomous or honor the request
	id = militem.warm.82
	title = militem.warm.82.t
	desc = militem.warm.82.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.82"}
	
	is_triggered_only = yes
	
	option = { #A bold, but acceptable request from a priestess.
		name = militem.warm.82.a
		annex_country = {
			target = PREV
			transfer_troops = yes
		}
	}
	option = { #They know how to run themselves. They may stay "free."
		name = militem.warm.82.b
		PREV = {
			MTS_Warm_Night = { set_nationality = ROOT }
			MTS_Serene_Shore = {
				add_country_leader_role = {
					promote_leader = yes
					country_leader = {
						expire = "1965.1.1"
						ideology = religious_socialism
						traits = { arch_priestess }
					}
				}
			}
		}
	}
}

country_event = { #After a number of days, the letter that Warm Night was dreading returns and she is unsurprised yet worried that she and the South-East have been declared heretical, which means their fate is sealed in death
	id = militem.warm.83
	title = militem.warm.83.t
	desc = militem.warm.83.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.83"}
	
	is_triggered_only = yes
	
	option = { #We will simply need to defy those odds.
		name = militem.warm.83.a
		custom_effect_tooltip = MTS_you_done_bucked_up_tt
		add_political_power = -75
		add_stability = -0.05
	}
}

country_event = { #A nervous Warm Night meets with Scorched Earth and some other generals to discuss the possibility of successfully defending against the Empire, and Scorched is pessimistic but does give some options, all the while stating that he should have been kept in charge to keep the Empire happy
	id = militem.warm.84
	title = militem.warm.84.t
	desc = militem.warm.84.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.84"}
	
	is_triggered_only = yes
	
	option = { #We already saw where your actions took us. Let's focus on the present.
		name = militem.warm.84.a
		add_war_support = 0.05
		add_manpower = 25000
	}
}

country_event = { #A newer priestess is overwhelmed by the number of ponies trying to seek guidance or assurance from her after word of the Empire's intentions becomes public, and she does all that she can to stave off mass panic, basically offering bribes from the tithes to get them to leave
	id = militem.warm.85
	title = militem.warm.85.t
	desc = militem.warm.85.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.85"}
	
	is_triggered_only = yes
	
	option = { #That's what prosperity gets them, right?
		name = militem.warm.85.a
		every_state = {
			limit = {
				is_owned_by = ROOT
			}
			set_temp_variable = { MTS_state_propserity_added = 2 }
			MTS_add_state_prosperity = yes
		}
		add_stability = 0.03
	}
}

country_event = { #One of the priestesses of the main church in New Baltimare is having a mild panic attack as ponies mass outside the building, clamoring to get in because they want some level of security given to them in the troubled times they are in, and another comes to give moral support for both the other priestess and the crowds, as they promise that they may serve the Empress still, and keep the South-East safe
	id = militem.warm.86
	title = militem.warm.86.t
	desc = militem.warm.86.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.86"}
	
	is_triggered_only = yes
	
	option = { #It'll work for a time, anyway.
		name = militem.warm.86.a
		add_stability = 0.05
		add_political_power = 125
	}
}



country_event = { #A low-ranking officer in the Militarium grumbles and complains to himself as he makes his way toward the hideout or base of operations of a group of thestrals that have been rather testy with being controlled by the Ordo, and after he is allowed entrance he nervously tells them that if they continue fighting they'll be given more freedom to act on their own accord, which they eventually agree to
	id = militem.warm.87
	title = militem.warm.87.t
	desc = militem.warm.87.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.87"}
	
	is_triggered_only = yes
	
	option = { #Now I must shower...
		name = militem.warm.87.a
		add_ideas = MTS_regional_militias
		hidden_effect = {
			set_variable = { MTS_militias_cap = 24 }
			division_template = {
				name = "Minutemares" 
				division_names_group = SLE_INF_02
				template_counter = 68
				is_locked = yes
				force_allow_recruiting = yes
				division_cap = 24

				regiments = { 
					militia = { x = 0 y = 0 }
					militia = { x = 0 y = 1 }
					militia = { x = 1 y = 0 }
					militia = { x = 1 y = 1 }
					militia = { x = 2 y = 0 }
					militia = { x = 2 y = 1 }
					artillery_brigade = { x = 3 y = 0 }
				}
				support = { 
					engineer = { x = 0 y = 0 }
				}
			}
			28 = { create_unit = { division = "name = \"The Flaming Apples\" division_template = \"Minutemares\" start_experience_factor = 0.3" officer = { name = MTS_Presto_Gravy_name portraits = { } } owner = ROOT id = 963 } }
			81 = { create_unit = { division = "name = \"The Raging Pears\" division_template = \"Minutemares\" start_experience_factor = 0.1" owner = ROOT id = 11858 } }
		}
		custom_effect_tooltip = MTS_another_settlement_needs_your_help_tt
	}
}

country_event = { #A priestess and a couple of layponies and an inquisitor are all arguing over exactly what the different aspects worshiping Daybreaker entails, which comes quickly to blows before another priestess interjects, and grills if they all worship Daybreaker, and if they do, then the other aspects don't matter, which annoys at least the inquisitor, although the others are satisfied
	id = militem.warm.88
	title = militem.warm.88.t
	desc = militem.warm.88.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.88"}
	
	is_triggered_only = yes
	
	option = { #Because this shows Daybreaker's unity.
		name = militem.warm.88.a
		swap_ideas = {
			remove_idea = MTS_decentralized_theology
			add_idea = MTS_unique_perspectives
		}
	}
}

country_event = { #Warm Night and the other priestesses have a long-winded argument, with Warm Night hammering again and again what should be defined as at least the primary acceptable way to worship in Solarism, aspiring to be a better pony, and using her light as guidance, rather than genuflecting upon Daybreaker for merely existing and saving them all, which makes some of the others upset, but ultimately they are outvoted
	id = militem.warm.89
	title = militem.warm.89.t
	desc = militem.warm.89.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.89"}
	
	is_triggered_only = yes
	
	option = { #She is our better, which we must aspire to.
		name = militem.warm.89.a
		swap_ideas = {
			remove_idea = MTS_dictated_worship
			add_idea = MTS_truthful_theology
		}
	}
}

country_event = { #Scorched and Luminous both find Warm Night in her quarters to speak privately, with Scorched being the bolder of the two to state flatly they are retiring, which Luminous reiterates for herself, since they would like some time to themselves before possibly the end, but they both promise they will serve, in a supportive capacity instead of active
	id = militem.warm.90
	title = militem.warm.90.t
	desc = militem.warm.90.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.90"}
	
	is_triggered_only = yes
	
	option = { #Hopefully your equals can be found.
		name = militem.warm.90.a
		EQS_Scorched_Earth = {
			remove_unit_leader_role = yes
			add_advisor_role = {
				advisor = {
					slot = army_chief
					cost = 150
					idea_token = scorched_earth
					traits = { army_chief_entrenchment_3 }
				}
			}
		}
		EQS_Luminous_Blade = {
			remove_unit_leader_role = yes
			add_advisor_role = {
				advisor = {
					slot = high_command
					cost = 150
					idea_token = luminous_blade
					traits = { army_commando_3 }
				}
			}
		}
	}
}

country_event = { #A younger officer leads a group of ponies through the deep jungle in the South-East, for a training exercise to prove that he can use the jungle to his advantage, and the test is unknown exactly, and it ends up being hunting down an Ursa Minor or another mythical creature, which almost wipes them out before he uses some of the terrain to his advantage to take it down without losses
	id = militem.warm.91
	title = militem.warm.91.t
	desc = militem.warm.91.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.91"}
	
	is_triggered_only = yes
	
	option = { #Be nice if this talked about first.
		name = militem.warm.91.a
		add_ideas = MTS_fighting_at_home
	}
}

country_event = { #An absolutely exhausted prisoner worker tries her best to drown out with her own thoughts of her imprisonment or her life before Militem Solar the constant propaganda of how they are bettering themselves and others, and she soon slips up her job, regarding some of the steel beams on a new manufactory, which leads to her being sent for further correction
	id = militem.warm.92
	title = militem.warm.92.t
	desc = militem.warm.92.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.92"}
	
	is_triggered_only = yes
	
	option = { #Give me a break!
		name = militem.warm.92.a
		unlock_decision_tooltip = MTS_the_great_leap
	}
}

country_event = { #A cheery radio ad plays on a radio station, from some random priestess, about how recycling anything not needed is a blessing from the Empress, because it blesses others or it can be used for defending her righteous Ordo, and if ponies do not, they will suffer unnamed, but harsh, consequences
	id = militem.warm.93
	title = militem.warm.93.t
	desc = militem.warm.93.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.93"}
	
	is_triggered_only = yes
	
	option = { #Somehow I don't feel the love.
		name = militem.warm.93.a
		unlock_decision_tooltip = MTS_reduce_and_reuse
	}
}

country_event = { #A large shipment of equipment for a farmer in the South-East's arable land is provided without any instructions, and the farmer and his family try to use the new, mechanized equipment, and their ignorance ends up with them starting a fire in the maize fields, which leads to a massive popcorn harvest, which the farmer hopes will be accepted
	id = militem.warm.94
	title = militem.warm.94.t
	desc = militem.warm.94.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.94"}
	
	is_triggered_only = yes
	
	option = { #Never cross the red and blue wires!
		name = militem.warm.94.a
		unlock_decision_tooltip = MTS_farming_modernisation
	}
}

country_event = { #With some excitement, Warm Night unveils the plans for a new medical center in NB to the rest of her council, but soon they start pointing out different aspects that could be added to the hospital, and it actually starts an argument, before Warm Night or another simply proposes they implement all of it, which gets instant agreement (no matter the monetary price)
	id = militem.warm.95
	title = militem.warm.95.t
	desc = militem.warm.95.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.95"}
	
	is_triggered_only = yes
	
	option = { #Why not all?
		name = militem.warm.95.a
		unlock_decision_tooltip = MTS_healthy_living
	}
}

country_event = { #As the reality of being a target for the Empire sets in, Warm Night begins to work with Serene Shore on assembling a number of ponies from the Adoratio, Inquisitionis, and the Militarium to work together to formalize a foreign policy that the Ordo will have with the rest of the world, even the Empire, although she isn't sure how big on peace they will be
	id = militem.warm.96
	title = militem.warm.96.t
	desc = militem.warm.96.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.96"}
	
	is_triggered_only = yes
	
	option = { #There must be a deterrent somewhere.
		name = militem.warm.96.a
		add_stability = 0.03
		add_popularity = {
			ideology = communism
			popularity = 0.05
		}
	}
}

country_event = { #After she starts getting swamped with letters of complaints or the like from ponies in the South-East, and since a lot of them are rather stupid with their moaning, Warm Night finally has enough and she offloads it onto a number of priestesses, who she feel would be decent enough, if even the answer is telling them no, especially thestrals
	id = militem.warm.97
	title = militem.warm.97.t
	desc = militem.warm.97.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.97"}
	
	is_triggered_only = yes
	
	option = { #Just let me work!
		name = militem.warm.97.a
		add_timed_idea = {
			idea = MTS_internal_relations_council
			days = 90
		}
	}
}

country_event = { #After another report of captured EQS spies, Warm Night writes up a decree that for the moment, both the borders and the ports are closed for almost everypony, except those that can provably be traced to be fleeing from countries and are properly vetted, which causes a large amount of consternation in the country
	id = militem.warm.98
	title = militem.warm.98.t
	desc = militem.warm.98.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.98"}
	
	is_triggered_only = yes
	
	option = { #This will be the first step to safety.
		name = militem.warm.98.a
		IF = {
			limit = { has_dlc = "La Resistance" }
			add_ideas = MTS_isolated_solarists_LAR
		}
		ELSE = {
			add_ideas = MTS_isolated_solarists
		}
	}
}

country_event = { #Follow some ponies from Stalliongrad, who have been held in port for weeks outside of New Horseleans, as they are finally given approval for entering the Ordo, as they were confirmed to be refugees, which they rejoice about, since they were almost out of supplies and fuel
	id = militem.warm.99
	title = militem.warm.99.t
	desc = militem.warm.99.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.99"}
	
	is_triggered_only = yes
	
	option = { #Not to say praise Daybreaker, but praise Daybreaker.
		name = militem.warm.99.a
		13 = {
			add_manpower = 54628
			add_victory_points = { #Nova Petrova
				province = 6537
				value = 1
			}
		}
		90 = { add_manpower = 30492 }
		34 = { 
			add_manpower = 43829
			add_victory_points = { #Heaven's Hope
				province = 6678
				value = 1
			}
		}
	}
}

country_event = { #Follow a mare as she kicks back and enjoys the rather generous support structure that the South-East now has, to the point where she doesn't have to work, and she is disturbed from her very busy day of just relaxing and having a drink or the like by Militarium pressers who claim she is proved to be wasting money, and that they will put her on a work crew, and paid accordingly
	id = militem.warm.100
	title = militem.warm.100.t
	desc = militem.warm.100.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.100"}
	
	is_triggered_only = yes
	
	option = { #Can't a mare just enjoy the fruits of others labor?!
		name = militem.warm.100.a
		random_state = {
			limit = { is_owned_by = ROOT }
			set_temp_variable = { MTS_state_propserity_added = 5 }
			MTS_add_state_prosperity = yes
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
		random_state = {
			limit = { is_owned_by = ROOT }
			set_temp_variable = { MTS_state_propserity_added = 5 }
			MTS_add_state_prosperity = yes
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
		random_state = {
			limit = { is_owned_by = ROOT }
			set_temp_variable = { MTS_state_propserity_added = 5 }
			MTS_add_state_prosperity = yes
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
		random_state = {
			limit = { is_owned_by = ROOT }
			set_temp_variable = { MTS_state_propserity_added = 5 }
			MTS_add_state_prosperity = yes
		}
		random_state = {
			limit = { is_owned_by = ROOT }
			set_temp_variable = { MTS_state_propserity_added = 5 }
			MTS_add_state_prosperity = yes
		}
	}
}

country_event = { #The player is given a report about how SCS has managed to remain independent of CHN, either because the Hegemony has collapsed, or because it has actually defended itself, and that since they are also a rather prosperous region with different views compared to their former overlords, that they should form a defensive pact
	id = militem.warm.101
	title = militem.warm.101.t
	desc = militem.warm.101.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.101"}
	
	is_triggered_only = yes
	
	option = { #Let's see if they feel the same way.
		name = militem.warm.101.a
		SCS = { country_event = militem.warm.102 }
		#If accepted, they would get hidden modifiers to not call in or want to be called in on an offensive war
	}
}

country_event = { #SCS gets a proposal from MTS about forming a defensive alliance so that the south of Equus can remain free and have the best of intentions for their citizens without interference; they would only call upon each other in a defensive war
	id = militem.warm.102
	title = militem.warm.102.t
	desc = militem.warm.102.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.102"}
	
	is_triggered_only = yes
	
	option = { #Sounds like a good idea.
		name = militem.warm.102.a
		ai_chance = {
			base = 30
			modifier = {
				has_government = communism
				factor = 2
			}
		}
		FROM = { country_event = { id = militem.warm.103 days = 3 random_days = 3 } }
	}
	option = { #Never trust a Solarist, especially a commie Solarist.
		name = militem.warm.102.b
		ai_chance = {
			base = 30
		}
		#Idea has to be removed and added via an on action, as it affects the desire to join in defensive wars
		set_country_flag = SCS_rejected_MTS_alliance
		FROM = { country_event = { id = militem.warm.103 days = 3 random_days = 3 } }
	}
}

country_event = { #MTS gets the response from SCS, either expressing support, or denying the alliance; the latter will remove the national focus as being chosen, and allow taking Path of Purity (will cause a flag for rejection)
	id = militem.warm.103
	title = militem.warm.103.t.a
	desc = militem.warm.103.d.a
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.103"}
	
	is_triggered_only = yes
	
	option = { #I know they would see reason.
		name = militem.warm.103.a
		trigger = {
			NOT = { SCS = { has_country_flag = SCS_rejected_MTS_alliance } }
		}
		create_faction = MTS_southern_pact
		add_to_faction = FROM
		hidden_effect = {
			if = {
				limit = { FROM = { is_ai = yes } }
				FROM = {
					add_ideas = MTS_no_friends_calling_offensive
				}
			}
			if = {
				limit = { is_ai = yes }
				add_ideas = MTS_no_friends_calling_offensive
			}
		}
	}
	option = { #Their loss.
		name = militem.warm.103.b
		trigger = { SCS = { has_country_flag = SCS_rejected_MTS_alliance } }
		uncomplete_national_focus = { focus = MTS_bonds_of_isolated }
	}
}

country_event = { #A radio propaganda broadcast goes into fake depths of how some ponies were wanting to form an alliance with untrustworthy nations, which would bring about a downfall to the Solarist revolution, and that those ponies have been corrected, as they must always remain pure, for Daybreaker, and for the blessing of everypony
	id = militem.warm.104
	title = militem.warm.104.t
	desc = militem.warm.104.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.104"}
	
	is_triggered_only = yes
	
	option = { #Friends would be nice, though...
		name = militem.warm.104.a
		add_ideas = MTS_pure_peninsula
	}
}

country_event = { #A group of South-Easterners and South-Westerners work together in a shared training exercise, with the COs of both companies getting into a rivalry with each other, which in the end actually makes them both better at what they do, as part of the shared military mission that MTS and SCS began
	id = militem.warm.105
	title = militem.warm.105.t
	desc = militem.warm.105.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.105"}
	
	is_triggered_only = yes
	
	option = { #Never thought I'd fight beside a friend.
		name = militem.warm.105.a
		add_ideas = MTS_sorad
		#This should be in SCS as well; play for both nations
	}
}

country_event = { #A new speculatore trained only in the South-East chases through a city the target she was hoping to find, which is a solarist speculatore or an EQS spy, whom she manages to find shortly before the pony finds passage back to their country of origin, which leads to a shootout of magic, with the South-Easterner barely coming out on top
	id = militem.warm.106
	title = militem.warm.106.t
	desc = militem.warm.106.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.106"}
	
	is_triggered_only = yes
	
	option = { #Keep our borders safe!
		name = militem.warm.106.a
		add_ideas = MTS_private_spies
	}
}

country_event = { #As a piece of training exercise for the new homeguard of the South-East, a group of ponies is made to go through one of the intact Ezemtzli temples, which has a number of traps and magical foes, which kills some of them, but they do manage to come out on top, all the better for it, and more dangerous than ever
	id = militem.warm.107
	title = militem.warm.107.t
	desc = militem.warm.107.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.107"}
	
	is_triggered_only = yes
	
	option = { #We can take on anything!
		name = militem.warm.107.a
		add_ideas = MTS_peninsular_homeguard
	}
}

country_event = { #After returning to her quarters after a long meeting with some of the different council members of the Ordo, Warm Night has a small exestential crisis as she worries about what will happen to the Ordo if EQS ever takes them, and she eventually pushes the worry out of her mind, as she concludes that the South-East is her mission, and that she will simply have to nurture it while she can
	id = militem.warm.108
	title = militem.warm.108.t
	desc = militem.warm.108.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.108"}
	
	is_triggered_only = yes
	
	option = { #I just hope I'm wise enough.
		name = militem.warm.108.a
		add_ideas = MTS_internal_salvation
	}
}

country_event = { #An office manager calls in one of her newest workers, who is a male thestral, and goes through multiple excuses why the thestral is being fired, each one refuted by the thestral in question, and it finally slips out that she found a thestral who could work for even cheaper wages, which anger sthe stallion all the more, especially since that other thestral shows up, which earns his ire
	id = militem.warm.109
	title = militem.warm.109.t
	desc = militem.warm.109.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.109"}
	
	is_triggered_only = yes
	
	option = { #Are you kidding me?!
		name = militem.warm.109.a
		add_ideas = MTS_token_bat_workers
	}
}

country_event = { #A nervous thestral mare meets with the day shift managers of her new employer, as she is still wary about ponies not really accepting thestrals, and she goes through her plans for enticing even more thestrals to work for them, mainly through good and fair wages and the like, which actually gets approval, and all are excited for the opportunity to produce even more for the Empress
	id = militem.warm.110
	title = militem.warm.110.t
	desc = militem.warm.110.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.110"}
	
	is_triggered_only = yes
	
	option = { #This is easy!
		name = militem.warm.110.a
		add_ideas = MTS_true_twenty_four_seven
	}
}

country_event = { #Although she is tired, Warm Night attends one of the thestral holidays that occurs around that time of year, as a sign of her supporting thestrals and their rights, and although she is still weirded out by them somewhat, she does find the entire festival inspiring, and she talks with some of the community to learn more about it, and perhaps gets flirted up or the like as well during it, which she might entertain
	id = militem.warm.111
	title = militem.warm.111.t
	desc = militem.warm.111.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.111"}
	
	is_triggered_only = yes
	
	option = { #Perhaps in another life.
		name = militem.warm.111.a
		add_stability = 0.05
		add_popularity = {
			ideology = communism
			popularity = 0.05
		}
		EEE = {
			EEE_Laconic_Azure = { set_nationality = ROOT }
		}
	}
}

country_event = { #A thestral accountant, who has been working for one of the public companies set up by the government, is raided at his home early in the morning to be taken to the nearest barracks, which he believes means he's under arrest, but rather he is simply being pushed into service to help with logistics, although he is still harshly treated for complaining and the like
	id = militem.warm.112
	title = militem.warm.112.t
	desc = militem.warm.112.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.112"}
	
	is_triggered_only = yes
	
	option = { #I didn't even have my coffee yet!
		name = militem.warm.112.a
		add_ideas = MTS_useful_pencil_pushers
	}
}

country_event = { #A couple of thestral children return to their house for the night after school, and constantly degrade some of the traditions that their parents have kept up regarding Luna and the moon and the like, which completely horrifies their parents, as they read some of the homework later and see just how Solarist the teaching is and how it's retraining the thestrals to be as un-thestral as possible
	id = militem.warm.113
	title = militem.warm.113.t
	desc = militem.warm.113.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.113"}
	
	is_triggered_only = yes
	
	option = { #What tripe is this?!
		name = militem.warm.113.a
		add_ideas = MTS_thestrals_of_the_empire
	}
}

country_event = { #Some Ordo soldiers grumble between themselves about why they have to be bait for thestrals, implying that they are being used for a trap for thestral rebels or the like, and as they try to keep a lookout for their targets, they are blindsided and captured, which ends the actual military exercise they were a part of, to prove how thestrals are the perfect night strike teams, which still leaves them irritated
	id = militem.warm.114
	title = militem.warm.114.t
	desc = militem.warm.114.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.114"}
	
	is_triggered_only = yes
	
	option = { #At least we don't have freaky eyes!
		name = militem.warm.114.a
		add_ideas = MTS_strike_at_night
	}
}

country_event = { #A report for Warm Night about how the thestral indentured servants have helped to keep the production of the Ordo high for defense, but that there is trouble brewing and more forces will be needed to keep order; Alternately, the report is instead of how the liberal treatment of thestrals has encouraged many to lay down their arms and come work for the Ordo, and while it has caused small flareups of conflict between groups, it is going well overall
	id = militem.warm.115
	title = militem.warm.115.t.a
	desc = militem.warm.115.d.a
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.115"}
	
	is_triggered_only = yes
	
	option = { #It's the best of both worlds!
		name = militem.warm.115.a
		IF = {
			limit = { has_completed_focus = MTS_lesser_equals }
			add_ideas = MTS_great_migration_evil
		}
		ELSE = {
			add_ideas = MTS_great_migration_good
		}
	}
}

country_event = { #Follow Warm Night at night, as she goes cloaked through many of the streets of New Baltimare, and she sees how ponies have had their lives improved overall by her guidance, how ponies help each other, and how reverance of Daybreaker is kept all the same, despite the dangers; she believes her job is done, and that the Ordo will last as a shining beacon of how Solarism can work with others to bless everycreature, no matter what the orthodox say
	id = militem.warm.116
	title = militem.warm.116.t
	desc = militem.warm.116.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.116"}
	
	is_triggered_only = yes
	
	option = { #Perhaps it's finally time for a vacation...
		name = militem.warm.116.a
		custom_effect_tooltip = MTS_syncretic_victory_tt
		swap_ideas = {
			remove_idea = MTS_paradise_of_southeast
			add_idea = MTS_utopic_solarists
		}
	}
}

country_event = { #Warm Night breathes a couple of long sighs as she and a few other priestesses wait in a ruined hall leading to the balcony over the courtyard of the Imperial Palace, which she plans to use to speak to the new subjects of her, and after fussing a bit, she does go out and state how she will make them live better than before, and gently show them how they were misguided, which doesn't go over well, like she thought
	id = militem.warm.117
	title = militem.warm.117.t
	desc = militem.warm.117.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.117"}
	
	is_triggered_only = yes
	
	option = { #They will come around.
		name = militem.warm.117.a
		set_capital = { state = 3 }
		add_state_core = 3
	}
}

country_event = { #A wounded soldier from EQS is barely making ends meat living on the streets, and he sees a couple of priestesses approach him, which makes him feel far more guilty about taking the lives of a couple of other priestesses, which has haunted him since the war, and he tries to hide, although they approach and tell him to calm down, as they will help prop him up, as he is forgiven, despite his misdeeds, which makes him break down into tears
	id = militem.warm.118
	title = militem.warm.118.t
	desc = militem.warm.118.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.118"}
	
	is_triggered_only = yes
	
	option = { #Why must you do this?
		name = militem.warm.118.a
		every_state = {
			limit = {
				OR = {
					is_core_of = EQS
					is_claimed_by = EQS
				}
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
			}
			add_compliance = 5
			add_resistance = -5
		}
	}
}

country_event = { #As there is still much dissent in the Adoratio, Warm Night decides to sit in on one of the latest meetings that they are having, and listens to what she believes is completely corrupt theology, which she can finally take no more, and despite her escorts' concern, stands up to correct them and call them all to repent for a better way forward, which only drives her out of the church instead
	id = militem.warm.119
	title = militem.warm.119.t
	desc = militem.warm.119.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.119"}
	
	is_triggered_only = yes
	
	option = { #They must listen!
		name = militem.warm.119.a
		add_political_power = -150
		add_stability = 0.05
	}
}

country_event = { #Scorched Earth leads a few of his own soldiers toward the Militarium headquarters in Sanctum Solar, getting no resistance along the way, until he reaches the main entrance of the fortress and demands to speak with Blueblood, who is holed up there, and the two of them argue about who ruined the Empire (him or Blueblood), and Scorched does intimidate some soldiers to let him in to deal with Blueblood
	id = militem.warm.120
	title = militem.warm.120.t
	desc = militem.warm.120.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.120"}
	
	is_triggered_only = yes
	
	option = { #I hope that I don't have to listen to his prattling much longer...
		name = militem.warm.120.a
		add_command_power = 25
		every_state = {
			limit = {
				NOT = { is_core_of = ROOT }
				is_owned_by = ROOT
				OR = {
					is_core_of = EQS
					is_claimed_by = EQS
				}
			}
			add_resistance = -5
		}
	}
}

country_event = { #A report is provided to Warm Night of some of the results of the latest expensive program to raise some of the ponies affected by the war out of abject poverty, as it has proven so far to keep them from growing resentful enough to consider becoming heretics, although there is still some risk of some ponies using their gifts for fighting against the Empress, which some detractors have latched onto
	id = militem.warm.121
	title = militem.warm.121.t
	desc = militem.warm.121.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.121"}
	
	is_triggered_only = yes
	
	option = { #They will always be naysayers.
		name = militem.warm.121.a
		every_state = {
			limit = {
				NOT = { is_core_of = ROOT }
				is_owned_by = ROOT
				OR = {
					is_core_of = EQS
					is_claimed_by = EQS
				}
			}
			add_compliance = 5
			add_resistance = -5
		}
	}
}

country_event = { #A couple of inquisitors that have been with MTS since the beginning come out to a speech that Warm Night is holding in front of the Cathedral of the Sun and are shocked when she declares that the Inquisitionis is no more, since it was attempting to keep power for itself, instead of doing what it could to help ponies, and that all willing inquisitors will be given roles as priestesses, and others will be allowed to leave, so long as they do not cause trouble
	id = militem.warm.122
	title = militem.warm.122.t
	desc = militem.warm.122.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.122"}
	
	is_triggered_only = yes
	
	option = { #How will we keep order?!
		name = militem.warm.122.a
		add_ideas = MTS_inquisitionis_dissolved
	}
}

country_event = { #As she is dragged into the throne room to see Warm Night, Quasar Pulse, whose magic is stopped by an inhibitor ring, is furious to see Warm Night and curses her for being a heretic, which only disappoints Warm Night as she claims Quasar's statement only reinforces Warm's decision regarding executing her, although she will give Quasar a chance to see how the Inquisitionis will improve by meeting their new Lady Inquisitor, Radiant Bliss
	id = militem.warm.123
	title = militem.warm.123.t
	desc = militem.warm.123.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.123"}
	
	is_triggered_only = yes
	
	option = { #She's more animal than pony at this rate.
		name = militem.warm.123.a
		add_ideas = MTS_new_inquisitionis
	}
}

country_event = { #Scorched Earth goes to speak with some of the captured generals of the Empire, who are not pleased at all about being arrested, and tries to argue with them that they can work for the true purpose of Daybreaker, not what the twisted words of Blueblood convinced them were her desires, like he once was; he doesn't fully believe it himself, since he still doesn't fully agree with Warm Night, and they can sense it, which makes it difficult to convince them
	id = militem.warm.124
	title = militem.warm.124.t
	desc = militem.warm.124.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.124"}
	
	is_triggered_only = yes
	
	option = { #Listen for once!
		name = militem.warm.124.a
		add_manpower = 75000
		every_state = {
			limit = {
				NOT = { is_core_of = ROOT }
				is_owned_by = ROOT
				OR = {
					is_core_of = EQS
					is_claimed_by = EQS
				}
			}
			add_resistance = -5
		}
	}
}

country_event = { #Warm Night holds a service outside of the Cathedral of the Sun, as she commemorates the liberation of Sanctum Solar and declares that a new holy day, where ponies will have freedom to worship the Empress, or anything else they wish, so long as it is first given to the Empress, will be held, which earns some cheers from the crowd before she silences them to go on about those who perished freeing it, which earns a bit of derision instead, since ponies' families were affected by the conquest
	id = militem.warm.125
	title = militem.warm.125.t
	desc = militem.warm.125.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.125"}
	
	is_triggered_only = yes
	
	option = { #We can't all be satisfied.
		name = militem.warm.125.a
		3 = {
			add_state_modifier = { modifier = { recruitable_population_factor = 0.15 } }
			add_state_modifier = { modifier = { state_production_speed_buildings_factor = 0.15 } }
		}
	}
}

country_event = { #Warm Night barely holds back some anger as she grows upset at Blueblood during her negotiations with him, as he is still behind bars, although he has said that he is open to working with her, and it mostly revolves around how much control of the Militarium that he will have, as she wishes for Scorched to lead, while he wants control; he is using flirts and the like to throw her off her A game, and it slowly gets to her before she gives in and lets him have some control, which he is most pleased about
	id = militem.warm.126
	title = militem.warm.126.t
	desc = militem.warm.126.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.126"}
	
	is_triggered_only = yes
	
	option = { #Pleasure doing business? Yeah, right.
		name = militem.warm.126.a
		add_ideas = MTS_united_militarium
		random_country = {
			limit = {
				has_character = EQS_Blueblood
			}
			EQS_Blueblood = { set_nationality = ROOT }
		}
		random_country = {
			limit = {
				has_character = EQS_Floodwater
			}
			EQS_Floodwater = { set_nationality = ROOT }
		}
		random_country = {
			limit = {
				has_character = EQS_Nightshade
			}
			EQS_Nightshade = { set_nationality = ROOT }
		}
	}
}

country_event = { #Warm Night cautiously enters the prison chambers where Daybreaker or the regent is being held, and she speaks with them for a short while regarding her temporary reign over the Empire, and she relenquishes command to the leader, which surprises them, as she states she doesn't want to lead, but she has reformed the Empire into a better position religiously, and it almost gets Daybreaker or the regent to prepare to execute Warm Night, but they think better given how it would cause unrest with ponies clearly liking Warm
	id = militem.warm.127
	title = militem.warm.127.t
	desc = militem.warm.127.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.127"}
	
	is_triggered_only = yes
	
	option = { #Perhaps this can be a way forward.
		name = militem.warm.127.a
		set_cosmetic_tag = EQS_SOL
		add_ideas = MTS_daybreaker_limited
	}
}

country_event = { #As Warm Night's train pulls into Canterlot, she is taken to see Celestia in the throne room, which makes her nervous, since it's like the palace but isn't, since it's already been redecorated, and she has a talk with Celestia, who tries to assuage her fears, and promises she'll be in Canterlot a while, since she is so close to seeing harmony for what it is
	id = militem.warm.128
	title = militem.warm.128.t
	desc = militem.warm.128.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.128"}
	
	is_triggered_only = yes
	
	option = { #Thanks, I think.
		name = militem.warm.128.a
		add_popularity = {
			ideology = democratic
			popularity = 0.01
		}
		add_political_power = 10
	}
}

country_event = { #One of the following days, Celestia and Warm Night go through some of the repaired sections of Canterlot or the palace, which Celestia uses to show how she's not the devil that Warm and others were taught, as she is helping to restore the prosperity Equestria and building back ponies in Harmony, and she points out how she is similar to Warm's ideals, in many ways, if Warm would just move a bit further along in her path toward liberating ponies
	id = militem.warm.129
	title = militem.warm.129.t
	desc = militem.warm.129.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.129"}
	
	is_triggered_only = yes
	
	option = { #You make a point...
		name = militem.warm.129.a
		add_popularity = {
			ideology = democratic
			popularity = 0.02
		}
	}
}

country_event = { #Warm Night follows Celestia as she goes to a reopening of a community center or another place that many of the less fortunate in Canterlot go to, and she is spoken to by some of the different ponies there, and learns how much Celestia has actually helped already, and a few are curious enough to see what she sees, since she has an outside perspective with being a former Solarist
	id = militem.warm.130
	title = militem.warm.130.t
	desc = militem.warm.130.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.130"}
	
	is_triggered_only = yes
	
	option = { #Well, now that you mention it...
		name = militem.warm.130.a
		add_popularity = {
			ideology = democratic
			popularity = 0.02
		}
	}
}

country_event = { #At the nudging of Celestia, Warm Night visits one of the former chapter houses of Canterlot, and meets with a few of the reformed priestesses there, who share how they have been working with helping the community expand and recover from the civil war, and they get to chatting about how their faith helped them through tough times, which starts to help Warm form some new friendships, which she appreciates while she's there
	id = militem.warm.131
	title = militem.warm.131.t
	desc = militem.warm.131.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.131"}
	
	is_triggered_only = yes
	
	option = { #Maybe we can stay in contact?
		name = militem.warm.131.a
		add_popularity = {
			ideology = democratic
			popularity = 0.05
		}
	}
}

country_event = { #During one of her final days in Canterlot, Celestia meets with Warm Night to ask her to come with a case that has recently come before her, and Warm Night is a bit confused, untils she sees that it's somepony who was arrested in self-defense during the war, but has since gone on to try and fight to make Canterlot free from royalty and religion entirely, a truly antithetical pony, and she is left with the choice of mercy or punishment, and reluctantly chooses the former
	id = militem.warm.132
	title = militem.warm.132.t
	desc = militem.warm.132.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.132"}
	
	is_triggered_only = yes
	
	option = { #Everypony deserves a second chance...
		name = militem.warm.132.a
		add_popularity = {
			ideology = democratic
			popularity = 0.05
		}
	}
}

country_event = { #After staying up far too late thinking, Warm Night attempts to find and speak with Celestia late at night, and she talks about her experiences in Canterlot and how she didn't see how much even her last bits of Solarism were holding her back, and pledges to follow Celestia and work in Harmony with others, which Celestia tries to dissuade her about, since she doesn't want religion, but Warm remains firm in her commitment, and leaves a changed pony
	id = militem.warm.133
	title = militem.warm.133.t
	desc = militem.warm.133.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.133"}
	
	is_triggered_only = yes
	
	option = { #I must spread this far and wide!
		name = militem.warm.133.a
		MTS_Warm_Night = {
			add_country_leader_role = {
				country_leader = {
					ideology = harmonic_theocracy
					expire = "1965.1.1"
					traits = { sympathetic_priestess }
				}
			}
		}
		set_party_name = {
			ideology = democratic
			name = MTS_reformed_priestesses
		}
		set_politics = {
			ruling_party = democratic
			elections_allowed = no
		}
	}
}

country_event = { #Shortly after her return to the South-East, Warm Night is brought into another meeting regarding defending the nation against the changelings in particular, as well as some recent activity caused by them, and when she does come in, since she's late, Scorched Earth calls her out for siding with the enemy, which places her on the defensive to convince them that all is well and that Celestia can be trusted
	id = militem.warm.134
	title = militem.warm.134.t
	desc = militem.warm.134.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.134"}
	
	is_triggered_only = yes
	
	option = { #This is not heresy!
		name = militem.warm.134.a
		add_command_power = -20
	}
}

country_event = { #A radio advertisement for a new mango factory or mango store, or something else that is related to thestrals in some way plays on the radio in a thestral family, and it is incredibly awkward as it hypes up that it's from a company in Equestria to come into the South-East, and that they have great testimonials, despite not even having stores yet, and the testimonials of the thestrals are clearly faked and badly acted
	id = militem.warm.135
	title = militem.warm.135.t
	desc = militem.warm.135.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.135"}
	
	is_triggered_only = yes
	
	option = { #Because THAT makes me want to buy there.
		name = militem.warm.135.a
		add_ideas = MTS_capitalist_encouragements
	}
}

country_event = { #As Warm Night enters her office, she is being hounded by a couple of different businessponies from Equestria, who are both rather obnoxious to her, and she is being chastised about her fiscal policy, which has completely bankrupted the South-East, and she tries to defend herself, until they show a rather thorough presentation that shows how the nation would collapse soon without some level of austerity, which she reluctantly agrees to
	id = militem.warm.136
	title = militem.warm.136.t
	desc = militem.warm.136.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.136"}
	
	is_triggered_only = yes
	
	option = { #Just leave me alone!
		name = militem.warm.136.a
		#Advisors here
		MTS_Tall_Stacks = {
			add_advisor_role = {
				advisor = {
					slot = political_advisor
					idea_token = tall_stacks
					traits = { ruthless_capitalist }
				}
			}
		}
		MTS_Blotted_Ink = {
			add_advisor_role = {
				advisor = {
					slot = political_advisor
					idea_token = blotted_ink
					traits = { silent_workhorse }
				}
			}
		}
		#MTS_Whiteboard = {
		#	add_advisor_role = {
		#		slot = political_advisor
		#		idea_token = whiteboard
		#		traits = { financial_expert }
		#	}
		#}
	}
}

country_event = { #After stepping out of some transport, Warm Night brings Scorched Earth under guard to see some of the new subdivisions in different areas of New Horseleans, and how the Harmonist influence has actually helped the area recover more, since it was only recently that there were still craters and the like from the initial siege, and she also shows how they are still living by some standard of minimalism, which helps them all work better for Celestia, which he begrudgingly acknowleges
	id = militem.warm.137
	title = militem.warm.137.t
	desc = militem.warm.137.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.137"}
	
	is_triggered_only = yes
	
	option = { #Is this not what you strove for?
		name = militem.warm.137.a
		add_political_power = 5
	}
}

country_event = { #Warm Night leads Luminous through the port of entry into Sunny Shoals, which was one of the areas that both of them frequented for different reasons, and it is built up far better than it was under the Solar Empire, and ponies are clearly at ease and happy there, and she goes on to show and describe how Celestia has helped protect ponies better than Daybreaker, which she knows was part of the reason that Luminous joined the Inquisitionis, which slowly convinces Luminous to recant
	id = militem.warm.138
	title = militem.warm.138.t
	desc = militem.warm.138.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.138"}
	
	is_triggered_only = yes
	
	option = { #You can still achieve your dreams with her.
		name = militem.warm.138.a
		add_political_power = 5
	}
}

country_event = { #A captain in the Militarium of the South-East goes through some of the different barracks of his former troops, who are packing up, and he gives them a few words of encouragement, and he goes to his own quarters, where he is already packed, save for a picture or two of his family, and also some clippings about excessive conscription, and he has a small soliloquy regarding his time there, and how he made the best of a horrible situation
	id = militem.warm.139
	title = militem.warm.139.t
	desc = militem.warm.139.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.139"}
	
	is_triggered_only = yes
	
	option = { #We did good.
		name = militem.warm.139.a
		add_manpower = -200000
		add_ideas = MTS_manageable_army_size
	}
}

country_event = { #Warm Night nervously meets with Celestia in the COBSOC headquarters along with a couple of other priestesses or inquisitors, and Celestia has her own delegation, and they talk briefly before they have their dinner, as part of Celestia's tour of the South-East, to ensure that it's progressing well, and Warm tries to pump herself up, and Celestia simply tells her that she's doing fine and not to be nervous, and that Celestia will visit again to see how progress is coming
	id = militem.warm.140
	title = militem.warm.140.t
	desc = militem.warm.140.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.140"}
	
	is_triggered_only = yes
	
	option = { #I think she's more nerveracking than Daybreaker...
		name = militem.warm.140.a
		add_stability = 0.03
		add_popularity = {
			ideology = democratic
			popularity = 0.1
		}
		add_political_power = 25
	}
}

country_event = { #Scorched and Luminous are brought together outside one of the courtrooms in the COBSOC palace, and they both are a bit nervous and maybe a tad bit awkward due to untold feelings for each other, and before they go in, they promise they will remain loyal to each other, and when they are brought in, they are surprised that they are pardoned by Warm Night, as she wishes to keep them in the Dominion to aid with its defense, and because they deserve a second chance, like her
	id = militem.warm.141
	title = militem.warm.141.t
	desc = militem.warm.141.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.141"}
	
	is_triggered_only = yes
	
	option = { #I suppose we accept.
		name = militem.warm.141.a
		add_war_support = 0.05
		custom_effect_tooltip = MTS_magical_friendship_tt
	}
}

country_event = { #As Scorched and Luminous are brought in for the tribunal that Warm Night has to head, Warm nervously thinks exactly about how she should approach the topic, since she still has the letter of partial agreement of Celestia regarding the state of their service, and after giving a few non-answers to their own questions for why they are being tried, she reluctantly states that Celestia will not let them serve, but has allowed a pardon, and they are free to live their civilian lives, and she also jokes about them being able to marry now
	id = militem.warm.142
	title = militem.warm.142.t
	desc = militem.warm.142.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.142"}
	
	is_triggered_only = yes
	
	option = { #Just stay protected, okay?
		name = militem.warm.142.a
		add_stability = 0.05
		add_ideas = MTS_experienced_guides
	}
}

country_event = { #Celestia arrives to a field outside of Baltimare, and she is rather nonplussed as Warm showcases how their army has become more specialized, and also modernized, to reduce the number of bodies needed and the risks associated with war, and as she goes on, she grows more nervous, since Celestia has remained mostly silent (Celestia is in armor) and she believes that she has messed up somehow, and then Celestia reluctantly states she has done well, and that her mind is elsewhere for the war, which worries Warm
	id = militem.warm.143
	title = militem.warm.143.t
	desc = militem.warm.143.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.143"}
	
	is_triggered_only = yes
	
	option = { #Just don't change your mind.
		name = militem.warm.143.a
		add_war_support = 0.05
		add_popularity = {
			ideology = democratic
			popularity = 0.1
		}
	}
}

country_event = { #Warm learns about how Scorched and Luminous are still rather staunch solarists, and she brings them to her quarters in her chapter house (or former chapter house), and she tries to convince them that they are not fully protected, and that they no longer have to serve a corrupted Celestia, as Celestia has done more for ponies than Daybreaker ever has, and they can all serve her together, as friends, and it slowly convinces both of them to relent
	id = militem.warm.144
	title = militem.warm.144.t
	desc = militem.warm.144.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.144"}
	
	is_triggered_only = yes
	
	option = { #Just listen to me!
		name = militem.warm.144.a
		###Either give them a level, a new, shared trait, or improve their spirit by a small amount
		if = {
			limit = { has_idea = MTS_experienced_guides }
			swap_ideas = {
				remove_idea = MTS_experienced_guides
				add_idea = MTS_experienced_guides_2
			}
		}
		###Maybe replace later with a trait of +5% leader xp gain and +5% recon
		else = {
			EQS_Scorched_Earth = { add_skill_level = 1 }
			EQS_Luminous_Blade = { add_skill_level = 1 }
		}
	}
}

country_event = { #Fat Stacks meets with Warm Night with a rather large presentation or the like with reports regarding the state of the South-East, and as he goes through and shows how ponies' lives have improved, Warm begins to become a bit more flustered and emotional as it is clear her dream of ponies being able to survive and follow their dreams has come to pass
	id = militem.warm.145
	title = militem.warm.145.t
	desc = militem.warm.145.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.145"}
	
	is_triggered_only = yes
	
	option = { #This is everything everypony could need!
		name = militem.warm.145.a
		swap_ideas = {
			remove_idea = MTS_seez
			add_idea = MTS_seez_advantage
		}
	}
}

country_event = { #A report is provided speaking of a recent hurricane that the pegasi weren't able to stave off and how the different divisions of the military helped with the recovery in the aftermath, and how they did more than what would be required of the military to get ponies back on their hooves, such as even donations or looking after kids, etc., and how ponies are better off because of it
	id = militem.warm.146
	title = militem.warm.146.t
	desc = militem.warm.146.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.146"}
	
	is_triggered_only = yes
	
	option = { #They've taken things to heart.
		name = militem.warm.146.a
		swap_ideas = {
			remove_idea = MTS_volunteers_of_harmony
			add_idea = MTS_liberation_warriors
		}
	}
}

country_event = { #After meeting with a few final delegates from Equestria who have been going around to report back to Celestia, Warm Night gives them a sealed letter for them to take to Celestia, and states that it must be only for Celestia; afterward she goes to her quarters to ruminate, and feel a bit of satisfaction at all the work she had done
	id = militem.warm.147
	title = militem.warm.147.t
	desc = militem.warm.147.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.147"}
	
	is_triggered_only = yes
	
	option = { #Harmony is true strength, after all.
		name = militem.warm.147.a
		custom_effect_tooltip = MTS_ask_mommy_tia_tt
		OVERLORD = {
			country_event = militem.warm.148
		}
	}
}

country_event = { #Celestia is given a letter from Warm Night stating how she believes that the South-East's scars have been healed, and they should become part of Equestria again, asking to be properly relieved of duty
	id = militem.warm.148
	title = militem.warm.148.t
	desc = militem.warm.148.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.148"}
	
	is_triggered_only = yes
	
	option = { #I welcome my ponies back into harmony.
		name = militem.warm.148.a
		FROM = {
			country_event = {
				id = militem.warm.149
				days = 3
				random_days = 7
			}
		}
	}
	option = { #There are still pain points. We should remain separate for now.
		name = militem.warm.148.b
		FROM = {
			country_event = {
				id = militem.warm.150
				days = 3
				random_days = 7
			}
		}
	}
}

country_event = { #Warm Night takes a sip or two of a drink that she has at a cafe looking out over Eclipse Gulf, and she soon is met up with by Scorched and Luminous, who she starts to chat with regarding how civilian life is treating all three of them, especially since Scorched and Luminous are now engaged or married, and she ends with a couple of thoughts about how they have helped ponies in the end, and that the second chances they were given were not wasted, as they get back to chatting about random things
	id = militem.warm.149
	title = militem.warm.149.t
	desc = militem.warm.149.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.149"}
	
	is_triggered_only = yes
	
	option = { #I feel a bit of relaxation is in order, no?
		name = militem.warm.149.a
		#custom_effect_tooltip = MTS_yoink_the_southeast_tt
		custom_effect_tooltip = MTS_true_harmony_tt
		OVERLORD = {
			annex_country = {
				target = ROOT
				transfer_troops = yes
			}
			hidden_effect = {
				every_state = {
					limit = {
						is_core_of = ROOT
					}
					add_core_of = PREV
				}
			}
		}
	}
}

country_event = { #Warm Night takes a final look around her office as she packs up some of the items she had in it, not that there were many, and she meets with the pony who is replacing her, who is one of the governors from Equestria, and she asks that it not be messed up, what she has left, as she departs, thinking on if she made the right choice to retire.
	id = militem.warm.150
	title = militem.warm.150.t
	desc = militem.warm.150.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.warm.150"}
	
	is_triggered_only = yes
	
	option = { #I'm sure retirement will treat me okay.
		name = militem.warm.150.a
		MTS_Morning_Rain = {
			add_country_leader_role = {
				promote_leader = yes
				country_leader = {
					ideology = harmonic_theocracy
					expire = "1965.1.1"
					traits = { }
				}
			}
		}
	}
}

###Pinpoint Events###
country_event = { #Pinpoint first approaches about getting heretics to experiment on, as an offer to hopefully new ways to take out the enemy quicker
	id = militem.pinpoint.1
	title = militem.pinpoint.1.t
	desc = militem.pinpoint.1.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.1"}
	
	trigger = {
		tag = MTS
		has_country_leader = { ruling_only = yes character = EQS_Scorched_Earth }
		any_of_scopes = {
			array = global.southeast_countries
			NOT = { tag = MTS }
			has_war_with = PREV
		}
	}
	
	mean_time_to_happen = { days = 60 }
	fire_only_once = yes
	
	option = { #We could use the additional benefits...
		name = militem.pinpoint.1.a
		ai_chance = {
			factor = 40
			modifier = {
				is_historical_focus_on = yes
				factor = 0
			}
		}
		add_ideas = MTS_heretic_research
		custom_effect_tooltip = MTS_trust_her_bro_tt
		hidden_effect = {
			country_event = {
				id = militem.pinpoint.2
				days = 30
				random_days = 60
			}
			add_ideas = MTS_punching_some_heretics
		}
	}
	option = { #The Militarium has no need of an inquisitor's esotericism!
		name = militem.pinpoint.1.b
		ai_chance = {
			factor = 60
		}
		add_political_power = 25
	}
}

country_event = { #Pinpoint leads Scorched through some of her results from captured heretics and prisoners of war, which are mostly methods of extreme suffering before death, which she shows casually; it is enough to disturb Scorched
	id = militem.pinpoint.2
	title = militem.pinpoint.2.t
	desc = militem.pinpoint.2.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.2"}
	
	is_triggered_only = yes
	
	option = { #If this gets us our victory, then continue.
		name = militem.pinpoint.2.a
		ai_chance = {
			factor = 65
		}
		add_war_support = 0.05
		add_command_power = 20
		hidden_effect = {
			country_event = {
				id = militem.pinpoint.3
				days = 20
				random_days = 20
			}
		}
	}
	option = { #This is going too far! Shut it down at once!
		name = militem.pinpoint.2.b
		ai_chance = {
			factor = 35
		}
		add_political_power = 25
		add_war_support = -0.05
		remove_ideas = MTS_heretic_research
		hidden_effect = {
			remove_ideas = MTS_punching_some_heretics
		}
	}
}

country_event = { #Scorched is brought by Luminous and another aide to an explosion site, where it's revealed that it was a test by Pinpoint (she was supposedly doing something that day) and was using loyal members of Militem Solar (who she believes are heretics), which makes Scorched feel like an idiot to have believed she didn't have ulterior motives
	id = militem.pinpoint.3
	title = militem.pinpoint.3.t
	desc = militem.pinpoint.3.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.3"}
	
	is_triggered_only = yes
	
	option = { #We were all idiots! We must stop her before she goes too far!
		name = militem.pinpoint.3.a
		country_event = {
			id = militem.pinpoint.4
			days = 3
		}
	}
}

country_event = { #Scorched leads a large squad of soldiers to arrest or execute Pinpoint if she fights, but she works to convince the soldiers that he is the one at fault (she also has a few volunteer soldiers with her), as he wishes to lead them into their own crusade against the Empress, not because of opulence, but because he desires to be seen as a god himself; this can work on a few, with options on if it succeeds or not
	id = militem.pinpoint.4
	title = militem.pinpoint.4.t
	desc = militem.pinpoint.4.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.4"}
	
	is_triggered_only = yes
	
	option = { #Scorched is wounded by a soldier who betrays him.
		name = militem.pinpoint.4.a
		ai_chance = {
			factor = 75
		}
		country_event = militem.pinpoint.5
	}
	option = { #Pinpoint's words are not effective enough and she is overwhelmed.
		name = militem.pinpoint.4.b
		ai_chance = {
			factor = 25
		}
		country_event = militem.pinpoint.6
	}
}

country_event = { #As Scorched is bleeding out from a shot from a traitor soldier, Pinpoint goes to him and mocks him for thinking that he could go against the Inquisitionis or the Empress; she will see that the South-East is pacified, and then create a perfect, heretic-free utopia
	id = militem.pinpoint.5
	title = militem.pinpoint.5.t
	desc = militem.pinpoint.5.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.5"}
	
	is_triggered_only = yes
	
	option = { #Never trust an inquisitor...
		name = militem.pinpoint.5.a
		clr_country_flag = MTS_scorched_earth_triumphant
		MTS_Pinpoint = {
			add_country_leader_role = {
				promote_leader = yes
				country_leader = {
					ideology = solarism
					expire = "1965.1.1"
					desc = "POLITICS_PINPOINT_DESC"
					traits = {
						experimental_inquisitor
					}
				}
			}
		}
		retire_character = EQS_Scorched_Earth
		retire_character = EQS_Luminous_Blade
		add_stability = -0.03
		hidden_effect = {
			news_event = southeastnews.15
		}
	}
}

country_event = { #Pinpoint has one final showdown, before she is shot by a soldier that gets a flank on her; as she is bleeding out, Scorched goes to deride her for daring to stand against the Empress's will and mission; he makes sure to end her quickly with a shot from his pistol, stating that he wishes her a burning torment in Tartarus
	id = militem.pinpoint.6
	title = militem.pinpoint.6.t
	desc = militem.pinpoint.6.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.6"}
	
	is_triggered_only = yes
	
	option = { #Never trust an inquisitor.
		name = militem.pinpoint.6.a
		retire_character = MTS_Pinpoint
		remove_ideas = MTS_heretic_research
		hidden_effect = {
			remove_ideas = MTS_punching_some_heretics
			news_event = southeastnews.16
		}
		add_stability = 0.03
	}
}

country_event = { #A soldier rushes into a radio tent in a camp near enemy lines for apparently orders, but instead it is an Ordo-wide broadcast by Pinpoint about how Scorched was a heretic and wished to prevent the glorious mission of the Inquisitionis to cleanse the South-East and all of the Empire and she has taken control instead
	id = militem.pinpoint.7
	title = militem.pinpoint.7.t
	desc = militem.pinpoint.7.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.7"}
	
	is_triggered_only = yes
	
	option = { #That's impossible!
		name = militem.pinpoint.7.a
		add_ideas = MTS_disrupted_ordo
		add_political_power = 75
	}
}

country_event = { #Some of the garrison of New Horseleans is called out onto a sudden inspection, and one of the soldiers is overly nervous since she was helping one of her friends, who is refusing to fight or fighting for the enemy, with some food, and the crew is inspected by Pinpoint herself, who uses some magic to try and read their thoughts, and it's enough to grab the guilty pony for further, gravitational interrogation
	id = militem.pinpoint.8
	title = militem.pinpoint.8.t
	desc = militem.pinpoint.8.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.8"}
	
	is_triggered_only = yes
	
	option = { #Time to see if you can handle the pressure.
		name = militem.pinpoint.8.a
		add_manpower = -25000
		MTS_Gallant = {
			add_corps_commander_role = {
				traits = { pony_race_trait solaris_militarium cautious politically_connected }
				skill = 2
				attack_skill = 1
				defense_skill = 4
				planning_skill = 1
				logistics_skill = 1
			}
		}
		custom_effect_tooltip = MTS_gallant_stats_tt
	}
}

country_event = { #Luminous is tracked down by some of Pinpoint's closest inquisitors, and she has a last stand to try and fight back against Pinpoint, and she does manage to break free from the attack, although most of her supporters are killed in the battle, which forever breaks her ability to interfere with Pinpoint
	id = militem.pinpoint.9
	title = militem.pinpoint.9.t
	desc = militem.pinpoint.9.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.9"}
	
	is_triggered_only = yes
	
	option = { #Where will love get you now?!
		name = militem.pinpoint.9.a
		add_war_support = -0.05
		MTS_Keen_Blade = {
			add_corps_commander_role = {
				traits = { pony_race_trait = solaris_militarium trickster }
				skill = 2
				attack_skill = 2
				defense_skill = 2
				planning_skill = 2
				logistics_skill = 1
			}
		}
		custom_effect_tooltip = MTS_keen_blade_stats_tt
	}
}

country_event = { #Follow Saber Rattle as he frantically goes about his tent or quarters after he learns that Pinpoint is now the archmage in charge, since he was rabidly fanatical to Scorched Earth, and he sees the writing on the wall that he will be a target; as he is about to flee, he is found by Pinpoint, who more than happily begins to execute him there for future heresy
	id = militem.pinpoint.10
	title = militem.pinpoint.10.t
	desc = militem.pinpoint.10.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.10"}
	
	is_triggered_only = yes
	
	option = { #One sniveling career general dealt with.
		name = militem.pinpoint.10.a
		retire_character = MTS_Saber_Rattle
		add_stability = -0.05
		MTS_Glad_Tidings = {
			add_corps_commander_role = {
				traits = { pony_race_trait solaris_militarium politically_connected career_officer }
				skill = 1
				attack_skill = 1
				defense_skill = 1
				planning_skill = 1
				logistics_skill = 1
			}
		}
		custom_effect_tooltip = MTS_glad_tidings_stats_tt
	}
}

country_event = { #Follow a thestral as she slips past some guards that are a bit too conveniently away on their patrol elsewhere in a prison camp, although she is too nervous to notice that, and she comes across the thestral that she was sent there to rescue, a more important captain or the like in the fight against Militem Solar, and she fights with the rescuer to not go, but is unable to say why; when they escape, she reveals that she is sorry, and shows that she is strapped with a magic bomb, which detonates
	id = militem.pinpoint.11
	title = militem.pinpoint.11.t
	desc = militem.pinpoint.11.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.11"}
	
	is_triggered_only = yes
	
	option = { #Like moths to a flame.
		name = militem.pinpoint.11.a
		add_ideas = MTS_bait_for_heretics
	}
}

country_event = { #A couple of prisoners are transported in some truck convoys to an unmarked labor camp deep within Hayseed Swamp, and when they stop they are moved to another truck, and jammed in with a bunch of other prisoners, while an officer or inquisitor berates them for their heresy, and how they will atone for it until they die, and otherwise attempts to break their spirits
	id = militem.pinpoint.12
	title = militem.pinpoint.12.t
	desc = militem.pinpoint.12.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.12"}
	
	is_triggered_only = yes
	
	option = { #Will we ever be free?
		name = militem.pinpoint.12.a
		add_ideas = MTS_crushing_corrections
	}
}

country_event = { #Pinpoint is in slight awe of the room that she has chosen for her quarters in COBSOC's headquarters, since it is quite large, and she starts to go through a strong purge, while she hears fighting still in the city; she is completely nonchalant about the screams of death around her, and even actively enjoys it as she purges whatever she deems heretical in the room
	id = militem.pinpoint.13
	title = militem.pinpoint.13.t
	desc = militem.pinpoint.13.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.13"}
	
	is_triggered_only = yes
	
	option = { #Home is where the heretic is not.
		name = militem.pinpoint.13.a
		add_stability = 0.03
		add_popularity = {
			ideology = fascism
			popularity = 0.02
		}
	}
}

country_event = { #One of the generals that claimed to be loyal to Pinpoint rather than stuck with the words of Scorched Earth is dragged out in the middle of the night by Pinpoint, who is on a slightly nervous break, believing that he is moments away from betraying her, and that she will ensure that his position is loyal, without him
	id = militem.pinpoint.14
	title = militem.pinpoint.14.t
	desc = militem.pinpoint.14.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.14"}
	
	is_triggered_only = yes
	
	option = { #I knew I should have sworn to uphold Scorched's plans!
		name = militem.pinpoint.14.a
		custom_effect_tooltip = MTS_convex_stats_tt
		custom_effect_tooltip = MTS_steaming_broil_stats_tt
		set_country_flag = MTS_pinpoints_crew
	}
}

country_event = { #Pinpoint discusses some of the problems with the land she now has, and her distrust of most of the administrators that are left, and how they will probably be all heretics, and Emerald and Light, her closest confidants, propose some solutions, and how they could assist her; they are just as erratic as her, which makes her believe she has found to excellent replacements
	id = militem.pinpoint.15
	title = militem.pinpoint.15.t
	desc = militem.pinpoint.15.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.15"}
	
	is_triggered_only = yes
	
	option = { #At least a couple see things as clearly as I do.
		name = militem.pinpoint.15.a
		add_advisor_role = {
			character = MTS_Emerald_Days
			advisor = {
				slot = political_advisor
				idea_token = emerald_days
				traits = { fetishist_mage }
			}
		}
		add_advisor_role = {
			character = MTS_Light_Jolt
			advisor = {
				slot = political_advisor
				idea_token = light_jolt
				traits = { electric_personality }
			}
		}
	}
}

country_event = { #Pinpoint meets with both Emerald Days and Light Jolt, and agrees to split the administration of the realm, so they can concentrate their eradication of heresy
	id = militem.pinpoint.16
	title = militem.pinpoint.16.t
	desc = militem.pinpoint.16.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.16"}
	
	is_triggered_only = yes
	
	option = { #This is a temporary measure.
		name = militem.pinpoint.16.a
		set_cosmetic_tag = MTS_inquisitor_heaven
		set_capital = { state = 1214 }
		MTS_spawn_inquisitor_puppets = yes
		every_state = {
			limit = {
				is_owned_by = ROOT
				NOT = { is_core_of = ROOT }
			}
			add_core_of = ROOT
		}
	}
}

country_event = { #Emerald Days hurriedly leaves her quarters as she learns that Pinpoint is there to inspect both her and some of her troops that she has been bragging about; it interrupts some of her experiments in alchemy or the like, which also irritates her; Pinpoint finds it a bit lacking
	id = militem.pinpoint.17
	title = militem.pinpoint.17.t
	desc = militem.pinpoint.17.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.17"}
	
	is_triggered_only = yes
	
	option = { #Make sure they're whipped into shape!
		name = militem.pinpoint.17.a
		OCS = { add_war_support = 0.05 }
		add_stability = 0.05
		add_command_power = 25
	}
}

country_event = { #A group of soldiers near the border with EQS notice a patrol of EQS soldiers wandering too far in, and try to warn them off, but get into a skirmish, with the character being followed finding out that his sibling was in that patrol, after killing them
	id = militem.pinpoint.18
	title = militem.pinpoint.18.t
	desc = militem.pinpoint.18.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.18"}
	
	is_triggered_only = yes
	
	option = { #What have we done?!
		name = militem.pinpoint.18.a
		add_war_support = 0.05
		OCS = { army_experience = 25 }
	}
}

country_event = { #Emerald Days hurriedly goes through a ritual with one of her totem dolls of Daybreaker, as she prays and hopes that it will lead to further strength for her troops, and she stops herself after words from Pinpoint remind her of her place, and to not trust in the zebra magic, although she wants ot use more of it
	id = militem.pinpoint.19
	title = militem.pinpoint.19.t
	desc = militem.pinpoint.19.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.19"}
	
	is_triggered_only = yes
	
	option = { #We must use all forms of magic!
		name = militem.pinpoint.19.a
		OCS = { add_ideas = MTS_esoteric_enhancements }
	}
}

country_event = { #Follow a couple of Custodiens knights as they prepare to attack a Ordo depot or prison, and they believe themselves safe because of the low light, and that they can see fine, until they are ambushed by some soldiers that have been enhanced in rituals by Emerald, revealed by their damaged eyes that they see before their capture
	id = militem.pinpoint.20
	title = militem.pinpoint.20.t
	desc = militem.pinpoint.20.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.20"}
	
	is_triggered_only = yes
	
	option = { #What foul magic is this?!
		name = militem.pinpoint.20.a
		OCS = { add_ideas = MTS_night_adaptations }
	}
}

country_event = { #A soldier struggles against some of his bonds, as he is brought before Emerald for her to use a potion she has concocted that slaves soldiers to both Daybreaker and more importantly, her, which she is pleased about, although Pinpoint arrives for an inspection and learns of it, which angers her
	id = militem.pinpoint.21
	title = militem.pinpoint.21.t
	desc = militem.pinpoint.21.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.21"}
	
	is_triggered_only = yes
	
	option = { #These will serve ONLY the Empress!
		name = militem.pinpoint.21.a
		30 = {
			create_unit = { division = "division_template = \"Ordo Defenders\" start_experience_factor = 0.75" owner = MTS prioritize_location = 569 }
		}
		81 = {
			create_unit = { division = "division_template = \"Ordo Defenders\" start_experience_factor = 0.3" owner = MTS prioritize_location = 11858 }
		}
		28 = {
			create_unit = { division = "division_template = \"Ordo Defenders\" start_experience_factor = 0.9" owner = MTS prioritize_location = 963 }
			create_unit = { division = "division_template = \"Inquisitous Legio\" start_experience_factor = 0.3" owner = MTS prioritize_location = 963 }
		}
	}
}

country_event = { #An inquisitor brings back a recently captured heretic, whom she prepares for interrogation before execution, and she goes through multiple, odd rituals, such as washing hands, saying a few prayers, or possibly taking blood or the like from the heretic to put on herself, as a way to keep herself pure; she isn't happy about all the added steps
	id = militem.pinpoint.22
	title = militem.pinpoint.22.t
	desc = militem.pinpoint.22.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.22"}
	
	is_triggered_only = yes
	
	option = { #All this red tape...
		name = militem.pinpoint.22.a
		add_ideas = MTS_separated_punishments
		custom_effect_tooltip = MTS_stop_hitting_yourself_tt
	}
}

country_event = { #Pinpoint almost fruitlessly attempts to push some of her inquisitors and recruits to study the libraries that were in Baltimare and the like that COBSOC was holding for itself, since they are adamantly against that, since there are surely many heretical ideas, and they try to parse how they can do so without falling into heresy, which frustrates her to no end
	id = militem.pinpoint.23 #SLE receives a letter from MTS flaunting that they're going rogue to actually deal with heresy; or, Quasar sees how MTS is completely ignoring her and declares the nation fully heretical instead, especially after some attempts at communication were denied by Pinpoint
	title = militem.pinpoint.23.t
	desc = militem.pinpoint.23.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.23"}
	
	is_triggered_only = yes
	
	option = { #Just, read!
		name = militem.pinpoint.23.a #They will burn soon enough!
		#add_ideas = MTS_wizardly_inquisitors
		add_opinion_modifier = {
			target = MTS
			modifier = SLE_rogue_ordo
		}
	}
}

country_event = { #Light Jolt nervously waits for Pinpoint to arrive at one of the main factories in Stableside, as she knows that Pinpoint would rather see any and all workers there punished for siding with the communists, and the inspection does end up with one or two dead workers, just because of them falling behind on apparent quotas that didn't exist
	id = militem.pinpoint.24
	title = militem.pinpoint.24.t
	desc = militem.pinpoint.24.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.24"}
	
	is_triggered_only = yes
	
	option = { #Well, that's hazard pay to give out...
		name = militem.pinpoint.24.a
		OAC = {
			two_random_industrial_complex = yes
			one_random_industrial_complex = yes
		}
	}
}

country_event = { #A worker is brought back to be given some more placating drugs to encourage him to stay longer at his factory, but he keeps fighting to have it, which leads to him being taken to Light Jolt, who almost seductively interrogates him while also using her magic to torture him
	id = militem.pinpoint.25
	title = militem.pinpoint.25.t
	desc = militem.pinpoint.25.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.25"}
	
	is_triggered_only = yes
	
	option = { #How electrifying.
		name = militem.pinpoint.25.a
		add_political_power = 25
		OAC = {
			add_ideas = MTS_high_off_work
		}
	}
}

country_event = { #A nervous site overseer comes in before Light Jolt to try and beg for more time on a work project, since so many of her workers have been killed in the upkeep of the Ordo, but Light Jolt will not accept it, and makes sure that she pushes ahead, after giving more than a few shocks of electricity
	id = militem.pinpoint.26
	title = militem.pinpoint.26.t
	desc = militem.pinpoint.26.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.26"}
	
	is_triggered_only = yes
	
	option = { #Next time I will not be lenient!
		name = militem.pinpoint.26.a
		86 = { add_extra_state_shared_building_slots = 1 }
		26 = { add_extra_state_shared_building_slots = 2 }
		36 = { add_extra_state_shared_building_slots = 1 }
		OAC = { add_stability = -0.05 }
	}
}

country_event = { #Some workers are sent down into a tunnel that is being used to build a new, high-speed rail line between New Baltimare, New Horseleans, and Stableside, and they are so exhausted, that they protest at first, but are overruled, and when they are sent, they set off explosives when they don't mean to, which worries the manager about his own head rather than their lives
	id = militem.pinpoint.27
	title = militem.pinpoint.27.t
	desc = militem.pinpoint.27.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.27"}
	
	is_triggered_only = yes
	
	option = { #Maybe we can just cover it up in the logs?
		name = militem.pinpoint.27.a
		OAC = { add_ideas = MTS_roads_of_bones }
	}
}

country_event = { #A young worker is thrown into a camp with multiple guards, and is told it's her new home, as she will be used for labor to build an entirely new city in the jungle, which she might live in afterwards, if she survives, which freaks her out
	id = militem.pinpoint.28
	title = militem.pinpoint.28.t
	desc = militem.pinpoint.28.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.28"}
	
	is_triggered_only = yes
	
	option = { #This wasn't promised!
		name = militem.pinpoint.28.a
		25 = {
			add_manpower = 57382
		}
		36 = {
			add_manpower = 61937
		}
		33 = {
			add_manpower = 54836
		}
	}
}

country_event = { #Pinpoint meets again with her two closest inquisitors to demand that they bring their Ordos back into the larger Ordo Meridian, since heresy has been effectively quashed, which devolves into a clash of egos as all three believe they have the best way forward
	id = militem.pinpoint.29
	title = militem.pinpoint.29.t
	desc = militem.pinpoint.29.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.29"}
	
	is_triggered_only = yes
	
	option = { #You will return to the fold, and that is final!
		name = militem.pinpoint.29.a
		custom_effect_tooltip = MTS_manifest_that_destiny_tt
		hidden_effect = {
			OCS = { country_event = militem.pinpoint.30 }
			OAC = { country_event = militem.pinpoint.30 }
		}
	}
	option = { #Then perhaps we shall agree to an alternative.
		name = militem.pinpoint.29.b
		custom_effect_tooltip = MTS_buddies_until_the_end_tt
		hidden_effect = {
			OCS = { country_event = militem.pinpoint.32 }
			OAC = { country_event = militem.pinpoint.32 }
		}
	}
}

country_event = { #A missive is sent to both Ordos by Pinpoint to demand that with the heresies dealt with and the ponies of the South-East more loyal because of it, it is time to reintegrate
	id = militem.pinpoint.30
	title = militem.pinpoint.30.t
	desc = militem.pinpoint.30.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.30"}
	
	is_triggered_only = yes
	
	option = { #Let us become whole again.
		name = militem.pinpoint.30.a
		if = {
			limit = { has_country_leader = { character = MTS_Emerald_Days } }
			MTS_Emerald_Days = {
				remove_country_leader_role = { ideology = solarism }
				set_nationality = FROM
			}
		}
		else_if = {
			limit = { has_country_leader = { character = MTS_Light_Jolt } }
			MTS_Light_Jolt = {
				remove_country_leader_role = { ideology = solarism }
				set_nationality = FROM
			}
		}
		FROM = {
			annex_country = {
				target = ROOT
				transfer_troops = yes
			}
			every_state = {
				limit = {
					is_core_of = ROOT
				}
				add_core_of = FROM
			}
		}
	}
	option = { #No! We have not fought off heresy for nothing!
		name = militem.pinpoint.30.b
		FROM = { 
			country_event = { id = militem.pinpoint.31 days = 3 }
			end_puppet = ROOT
		}
		leave_faction = yes
	}
}

country_event = { #Since one of the Ordos refused to be annexed, Pinpoint declares the pony leading as as heretic and that they will be destroyed by the Empress's hoof
	id = militem.pinpoint.31
	title = militem.pinpoint.31.t
	desc = militem.pinpoint.31.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.31"}
	
	is_triggered_only = yes
	
	option = { #They will burn in Tartarus!
		name = militem.pinpoint.31.a
		declare_war_on = {
			target = FROM
			type = annex_everything
		}
	}
}

country_event = { #Instead of being demanded to integrate, the Ordos are given the opportunity to continue on, under Pinpoint and Ordo Meridian, so that they can continue autonomously, but still serve the Empress
	id = militem.pinpoint.32
	title = militem.pinpoint.32.t
	desc = militem.pinpoint.32.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.32"}
	
	is_triggered_only = yes
	
	option = { #We shall fight against heresy, together!
		name = militem.pinpoint.32.a
		ai_chance = { factor = 70 }
		FROM = {
			set_autonomy = {
				target = ROOT
				autonomy_state = autonomy_satellite
			}
			set_country_flag = MTS_united_inquisitors
		}
	}
	option = { #We must be free to fight heresy properly!
		name = militem.pinpoint.32.b
		ai_chance = { 
			factor = 30
			modifier = {
				is_historical_focus_on = yes
				factor = 0
			}
		}
		FROM = { 
			country_event = { id = militem.pinpoint.27 days = 3 }
			end_puppet = ROOT
		}
		leave_faction = yes
	}
}	

#country_event = { #If both agree to be annexed, Pinpoint will have an integration talk with her two subordinates, where they effectively bond a bit more over the complete destruction that they caused upon the heretics; if both ask for continued autonomy
#	id = militem.pinpoint.41
#	title = militem.pinpoint.26.t
#	desc = "It worked?"
#	immediate = {
#		log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.26"
#		clear_variable = global.MTS_proposition_accepted
#	}
#	
#	is_triggered_only = yes
#	
#	option = {
#		name = militem.pinpoint.26.a
#	}
#}

country_event = { #Some new recruits for the elite forces of Ordo Meridian are put on display from the drill sergeant, who razzes them and otherwise pushes them to the extreme, potentially with some comments on going full heretic or something, and to never go full heretic
	id = militem.pinpoint.33
	title = militem.pinpoint.33.t
	desc = militem.pinpoint.33.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.33"}
	
	is_triggered_only = yes
	
	option = { #Never go full heretic.
		name = militem.pinpoint.33.a
		add_ideas = MTS_bred_for_the_jungle
	}
}

country_event = { #After a skirmish practice, a soldier is reprimanded for one incredibly minor, not even dangerous thing, such as going a bit too soon, or even before, his commander, who is an inquisitor who is overly eager to please Pinpoint, almost a sycophant, which drags on the rest of the squad because of it
	id = militem.pinpoint.34
	title = militem.pinpoint.34.t
	desc = militem.pinpoint.34.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.34"}
	
	is_triggered_only = yes
	
	option = { #Yes, ma'am...
		name = militem.pinpoint.34.a
		add_ideas = MTS_battle_inquisitors
	}
}

country_event = { #Pinpoint comes charging into a meeting of tech-priestesses that are communing over a tank or the like, because she knows that they are now worshiping the tank over the Empress, and she is prepared to kill them all, but one of the priestesses argues to let them be, or they'll destroy all their work that can help wipe out heresy
	id = militem.pinpoint.35
	title = militem.pinpoint.35.t
	desc = militem.pinpoint.35.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.35"}
	
	is_triggered_only = yes
	
	option = { #If you ever leave this compound, you're dead!
		name = militem.pinpoint.35.a
		add_ideas = MTS_goddesss_tech_priestesses
	}
}

country_event = { #As a way to blow off some steam, Pinpoint begins to research some different compounds to mix with white phosphorous to make it even more deadly, and she comes up with something that burns through even the thickest metal, which is pleased to test on some subjects, since they're worth nothing anyway
	id = militem.pinpoint.36
	title = militem.pinpoint.36.t
	desc = militem.pinpoint.36.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.36"}
	
	is_triggered_only = yes
	
	option = { #It's a start, at least
		name = militem.pinpoint.36.a
		add_ideas = MTS_clearing_for_war
	}
}

country_event = { #A squad of soldiers receives orders directly from Pinpoint, which order them to go against their directive that they had prior, which confuses them a bit, but ultimately means they get to do more damage to a heretic village or the like, although they aren't happy about being meddled with
	id = militem.pinpoint.37
	title = militem.pinpoint.37.t
	desc = militem.pinpoint.37.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.37"}
	
	is_triggered_only = yes
	
	option = { #Can you leave us in peace?!
		name = militem.pinpoint.37.a
		swap_ideas = {
			add_idea = MTS_structured_military
			remove_idea = MTS_disrupted_ordo
		}
	}
}

country_event = { #In the night, a couple of radio operators listen in on some conversation that is happening in a house in Red Glory, since radios were distributed to all households throughout the Ordo, and they basically listen in like watching a movie, placing bets on who will say something heretical first, and reporting it when it happens; maybe some slightly suggestive talk by those who are being listened to, which is what is heretical
	id = militem.pinpoint.38
	title = militem.pinpoint.38.t
	desc = militem.pinpoint.38.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.38"}
	
	is_triggered_only = yes
	
	option = { #One more for the funeral pyre.
		name = militem.pinpoint.38.a
		add_political_power = 75
		add_tech_bonus = {
			name = electronics_bonus
			bonus = 1
			uses = 1
			category = electronics
		}
	}
}

country_event = { #Some new trainees for Speculatores are currently in a class of old Ponish, and find the language amusing, although hard, as their teacher is going through some pronunciations or syntax; a few are making fun of her in old Ponish, which she finally responds to, and makes them panic because they know they are caught
	id = militem.pinpoint.39
	title = militem.pinpoint.39.t
	desc = militem.pinpoint.39.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.39"}
	
	is_triggered_only = yes
	
	option = { #Repar dath!
		name = militem.pinpoint.39.a
		if = {
			limit = { has_dlc = "La Resistance" }
			add_ideas = MTS_all_ponish_to_me_lar
		}
		else = {
			add_ideas = MTS_all_ponish_to_me
		}
	}
}

country_event = { #Pinpoint goes in for a report from the head mage researching new disguise spells, like changeling spells, and is surprised when said pony appears after losing her disguise as a hammer or the like, and she goes through a couple of results, where two test subjects were turned into permanent inanimate objects, which doesn't bother Pinpoint, since it is figured out for good afterwards
	id = militem.pinpoint.40
	title = militem.pinpoint.40.t
	desc = militem.pinpoint.40.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.40"}
	
	is_triggered_only = yes
	
	option = { #Leave them as examples, or something.
		name = militem.pinpoint.40.a
		if = {
			limit = { has_dlc = "La Resistance" }
			add_ideas = MTS_unseen_before_all_lar
		}
		else = {
			add_ideas = MTS_unseen_before_all
		}
	}
}

country_event = { #A Speculatore goes into Pinpoint's lab as a final test of her ability to sneak through things, and does find something that is a bit too secretive, even for being the head of the Ordo, and she plans to spread it to everypony, since it's basically detailing Hereticus, but she is captured by Pinpoint and then tested on instead
	id = militem.pinpoint.41
	title = militem.pinpoint.41.t
	desc = militem.pinpoint.41.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.41"}
	
	is_triggered_only = yes
	
	option = { #Should have turned away when you could have.
		name = militem.pinpoint.41.a
		if = {
			limit = {
				has_dlc = "La Resistance"
			}
			add_ideas = MTS_secrets_to_everypony_lar
		}
		else = {
			add_ideas = MTS_secrets_to_everypony
		}
	}
}

country_event = { #An officer for Ordo Meridian overlooks the construction force that she's been tasked to, since their performance is seen as pathetic, and she's also been threatened herself if it isn't fixed, and she forces ponies to work, even though they're clearly exhausted, all in the name of the Empress, and otherwise is harsh on them for falling behind
	id = militem.pinpoint.42
	title = militem.pinpoint.42.t
	desc = militem.pinpoint.42.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.42"}
	
	is_triggered_only = yes
	
	option = { #No slackers!
		name = militem.pinpoint.42.a
		add_ideas = MTS_endless_work
	}
}

country_event = { #Pinpoint enters her research chambers dressed in a different robe, and clearly giddy at her opportunity, which is a struggling captive mare who is still for COBSOC or Lucky Star, and who protests to be let go, although her pleas soon stop as Pinpoint uses some magic to silence her while she cuts the mare open, to see what exactly makes her tick and want to fall to heresy
	id = militem.pinpoint.43
	title = militem.pinpoint.43.t
	desc = militem.pinpoint.43.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.43"}
	
	is_triggered_only = yes
	
	option = { #Simply fascinating.
		name = militem.pinpoint.43.a
		add_ideas = MTS_temptations_tempted
	}
}

country_event = { #A report from one of the newer inquisitors addressed to Pinpoint recounts how they stopped heresy before it began by breaking in and beating and arresting a stallion who was saying some questionable things as observed by one of their informants, and how this has helped spur even further church attendance, and make more loyal ponies
	id = militem.pinpoint.44
	title = militem.pinpoint.44.t
	desc = militem.pinpoint.44.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.44"}
	
	is_triggered_only = yes
	
	option = { #One sacrifice for the good of many.
		name = militem.pinpoint.44.a
		add_ideas = MTS_sun_watchers
	}
}

country_event = { #A couple of mares led by a stallion start laying down the groundwork for hollowing out a new room for an underground factory, and one of the mares is sure that the stallion did it wrong, but he is confident that he didn't, and they start to get into an argument over it, before it sets off and collapses the entire ceiling and buries them in it
	id = militem.pinpoint.45
	title = militem.pinpoint.45.t
	desc = militem.pinpoint.45.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.45"}
	
	is_triggered_only = yes
	
	option = { #Time for some fresh workers...
		name = militem.pinpoint.45.a
		add_ideas = MTS_depths_of_tartarus
	}
}

country_event = { #Follow a mare as she tries to stay together while she's taken to a prison camp, and when she is finally brought out, she does one final, desperate escape, against the recommendations of the other ponies there, and is shot dead because of it, since she knew what would eventually happen to her, anyway
	id = militem.pinpoint.46
	title = militem.pinpoint.46.t
	desc = militem.pinpoint.46.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.46"}
	
	is_triggered_only = yes
	
	option = { #We can at least dissect the corpse.
		name = militem.pinpoint.46.a
		add_ideas = MTS_last_use_in_death
	}
}

country_event = { #Emerald Days and Light Jolt are boths summoned back to New Horseleans to listen to Pinpoint's plan that she has, which is a convoluted mess akin to many conspiracy theories about how thestrals are dumb enough to believe that if she claims she is harmonist, they will follow her, although Emerald at least thinks it's insane enough to work; Light doesn't
	id = militem.pinpoint.47
	title = militem.pinpoint.47.t
	desc = militem.pinpoint.47.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.47"}
	
	is_triggered_only = yes
	
	option = { #It will be flawless!
		name = militem.pinpoint.42.a
		add_stability = -0.04
		add_manpower = 2500
	}
}

country_event = { #A thestral desperately tries to get out of their jail cell that they wake up in, as they have little idea of how they were captured, save that they blacked out in the jungle (drug bomb), and when he sees that Pinpoint is in his cell ready to experiment on him, he tries even more desperately to get away before she breaks his legs to prevent him from leaving, and otherwise tortures him while preparing to dissect him
	id = militem.pinpoint.48
	title = militem.pinpoint.48.t
	desc = militem.pinpoint.48.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.48"}
	
	is_triggered_only = yes
	
	option = { #For science!
		name = militem.pinpoint.48.a
		add_war_support = 0.05
		add_stability = -0.05
	}
}

country_event = { #When a thestral wakes on an operating table, she panics as she knows that something isn't right, and Pinpoint tries some rather bad humor to get her to calm down, and promises that she will soon be made pure again, as she produces a syringe which she injects into the thestral, and it soon kills the thestral, although not before making it shed its fangs and lose a wing
	id = militem.pinpoint.49
	title = militem.pinpoint.49.t
	desc = militem.pinpoint.49.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.49"}
	
	is_triggered_only = yes
	
	option = { #This could maybe work in reverse, actually.
		name = militem.pinpoint.49.a
		add_ideas = MTS_magical_corrections
	}
}

country_event = { #In eagerness, Pinpoint goes out on an expedition to launch some new gene weaponry bombs that she has developed based on the research of thestrals, although she doesn't plan to be in teh battlefield when they go off, she ensures her soldiers that things will be fine; they don't go as fine as she believes, as some of her soldiers die, although she passes it off as thestral inbreeding
	id = militem.pinpoint.50
	title = militem.pinpoint.50.t
	desc = militem.pinpoint.50.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.50"}
	
	is_triggered_only = yes
	
	option = { #They weren't true believers, anyway.
		name = militem.pinpoint.50.a
		add_ideas = MTS_gene_weaponry
	}
}

country_event = { #Pinpoint gets a report about the new technologies used to block any intel leaving the nation, and how it has already intercepted some rogue broadcasts, which makes her confident that they can quickly go to war and wipe out WNG without much knowledge by the rest of the world, so long as she can make it seem like it's business as usual there
	id = militem.pinpoint.51
	title = militem.pinpoint.51.t
	desc = militem.pinpoint.51.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.51"}
	
	is_triggered_only = yes
	
	option = { #Time to expand the programs.
		name = militem.pinpoint.51.a
		add_ideas = MTS_silenced_ears
		if = {
			limit = {
				WNG = { country_exists = yes }
			}
			create_wargoal = {
				target = WNG
				type = annex_everything
			}
		}
		else = {
			1196 = {
				controller = {
					ROOT = {
						create_wargoal = {
							target = PREV
							type = annex_everything
						}
					}
				}
			}
			1197 = {
				controller = {
					ROOT = {
						create_wargoal = {
							target = PREV
							type = annex_everything
						}
					}
				}
			}
			1198 = {
				controller = {
					ROOT = {
						create_wargoal = {
							target = PREV
							type = annex_everything
						}
					}
				}
			}
		}
	}
}

country_event = { #In a final ceremony in New Baltimare, Pinpoint effectively presents herself as the new High Mage of the Inquisitionis or Adoratio, and she gives the most pomp and circumstance that she can to impress upon everypony that she should be obeyed, and that she has been blessed by Daybreaker to destroy heresy in Zebrica
	id = militem.pinpoint.52
	title = militem.pinpoint.52.t
	desc = militem.pinpoint.52.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.52"}
	
	is_triggered_only = yes
	
	option = { #May the sun give us strength!
		name = militem.pinpoint.52.a
		add_ideas = MTS_protection_from_sun
	}
}

country_event = { #Some finishing touches are done on the newest engines and drive spindles for a fresh navy for the Ordo, which Pinpoint overlooks, as they are putting the last engine in a ship; the ship tests the motor momentarily once installed, and it explodes in a blast of magic, which the main forepony apologizes profusely over, as the docks begin to burn down
	id = militem.pinpoint.53
	title = militem.pinpoint.53.t
	desc = militem.pinpoint.53.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.53"}
	
	is_triggered_only = yes
	
	option = { #Can't progress without breaking some eggs.
		name = militem.pinpoint.53.a
		add_ideas = MTS_reaching_the_globe
	}
}

country_event = { #A pair of soldiers are on patrol, complaining about having to be stuck in the hellhole that is the BAT capital, and they think they hear something, which makes them both scared and required to investigate, and they are jumped and lynched by a mob of thestrals, who are cursing them as oppressors and that their justice will come, although they are mowed down by another patrol that hears it
	id = militem.pinpoint.54
	title = militem.pinpoint.54.t
	desc = militem.pinpoint.54.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.54"}
	
	is_triggered_only = yes
	
	option = { #You will serve the Empress, even if you are all dead!
		name = militem.pinpoint.54.a
		every_state = {
			limit = {
				is_core_of = BAT
			}
			add_compliance = 5
			add_resistance = -10
			save_current_manpower = yes
			add_manpower = -20000
			restore_previous_manpower = yes
		}
	}
}

country_event = { #Follow a speculatore for MTS as she finally gets an in with a few officers in Manehattan, which she has been marking for weeks, as she pretends to be a refugee from the South-East; the conversations are somewhat useful, but she is almost captured when she leaves, although she escapes the inquisitor questioning her
	id = militem.pinpoint.55
	title = militem.pinpoint.55.t
	desc = militem.pinpoint.55.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.55"}
	
	is_triggered_only = yes
	
	option = { #A close escape!
		name = militem.pinpoint.55.a
		add_ideas = MTS_unimportant_spies
	}
}

country_event = { #Convex breaks into one of the older research labs in BAT territory and her squads soon get into combat with some guards and scientists who have so far managed to keep the place a fortress, and after she deals with some of them, she finds one of the main repositories of the research, which she a euphoric first reaction, although she finds out some of the heretical experiences and is disgusted instead
	id = militem.pinpoint.56
	title = militem.pinpoint.56.t
	desc = militem.pinpoint.56.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.56"}
	
	is_triggered_only = yes
	
	option = { #What blasphemy is this?!
		name = militem.pinpoint.56.a
		add_ideas = MTS_thestral_secrets
	}
}

country_event = { #Pinpoint gets into a small tizzy as one of her experiments with BAT thestrals fails again because of some of the nutrition they have in Zebrica compared to the South-East or they don't have the right muscle mass or something similar, and she finally grabs one of the ones she was going to experiment on and tells them they're lucky they can be slaves instead, which makes them more terrified of her
	id = militem.pinpoint.57
	title = militem.pinpoint.57.t
	desc = militem.pinpoint.57.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.57"}
	
	is_triggered_only = yes
	
	option = { #Beg for the Empress's mercy as you toil!
		name = militem.pinpoint.57.a
		add_ideas = MTS_thestral_labor
	}
}

country_event = { #A starving thestral stallion feels like he has only one option left, even though he doesn't want to, and goes to the nearest Adoratio church that has been created in the BAT capital, and after fighting with himself, he begs there for food, and is denied because of BAT's past, and that it is their just punishment to starve
	id = militem.pinpoint.58
	title = militem.pinpoint.58.t
	desc = militem.pinpoint.58.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.58"}
	
	is_triggered_only = yes
	
	option = { #Damn you to Tartarus!
		name = militem.pinpoint.58.a
		add_stability = 0.05
		add_political_power = 75
		
	}
}

country_event = { #Pinpoint marches around her lab with a checklist, asking invasive questions to a creature she has on the operating table, who is usually too drugged out to really respond; she finds each response fascinating, though, and ends with remarks that while her heresy research was dying out with ponies, she is looking forward to what she can find in Abyssinians instead, and gets to work on the cat, while laughing at their pain
	id = militem.pinpoint.59 #Maybe the checklist could be humorous repsonses for being hit with a hammer in areas, partly dissected, etc., like a questionnaire for a survey
	title = militem.pinpoint.59.t
	desc = militem.pinpoint.59.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.59"}
	
	is_triggered_only = yes
	
	option = { #Now, how would you rate your pain out of ten?
		name = militem.pinpoint.59.a
		#Flag to unlock prisoner raids in ABY territory, and probably some more test subjects
		set_country_flag = MTS_raid_ABY
		custom_effect_tooltip = MTS_use_catnip_tt
	}
}

country_event = { #Pinpoint screams as she uses some magic to make a zebra on the table suffer in pain, as she complains that there was absolutely nothing learned from the zebra, because of their particular striping or something throwing off readings, and she bellyaches about how the zebra could do that to her, before finally killing the zebra out of sheer anger and frustration, before calling for another subject
	id = militem.pinpoint.60
	title = militem.pinpoint.60.t
	desc = militem.pinpoint.60.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.60"}
	
	is_triggered_only = yes
	
	option = { #What a waste.
		name = militem.pinpoint.60.a
		#Flag to unlock prisoner raids in zebra lands and some more test subjects
		set_country_flag = MTS_raid_zeebs
		custom_effect_tooltip = MTS_time_to_rhyme_tt
	}
}

country_event = { #An inquisitor assistant to Pinpoint winces as she and another watch Pinpoint brutally beat a heretic test subject, while keeping the subject on a scale, until the subject literally dies; Pinpoint is overly excited and tells them to measure the weight differences, and moves onto a different subject, which she has some advanced matrices hooked into, and she promises a painful death, so she can read what a soul goes through in death, and maybe get an idea of how it differs from a non-heretic, who is tied up next to the heretic, and therefore see how it was corrupted
	id = militem.pinpoint.61
	title = militem.pinpoint.61.t
	desc = militem.pinpoint.61.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.61"}
	
	is_triggered_only = yes
	
	option = { #What's a few souls lost to save millions?
		name = militem.pinpoint.61.a
		add_stability = -0.05
		set_temp_variable = { MTS_heretic_prisoners_added = 15000 }
		MTS_add_new_heretic_prisoners = yes
		#More test subjects, a research bonus or the like
	}
}

country_event = { #Follow a couple of bomber pilots as they banter about their last actual war they experienced, and how they do like the stability that has been brought by Pinpoint and that she has helped with the South-East a lot, although when they drop their payloads, which were kept secret, they see how they basically immolated an entire city with napalm and white phosphorous, and they question everything they did for Pinpoint
	id = militem.pinpoint.62
	title = militem.pinpoint.62.t
	desc = militem.pinpoint.62.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.62"}
	
	is_triggered_only = yes
	
	option = { #What mercy is this?!
		name = militem.pinpoint.62.a
		every_state = {
			limit = {
				OR = {
					is_core_of = HIP
					is_core_of = HPS
					is_core_of = DOH
					is_core_of = WIN
					is_core_of = HRL
				}
			}
			add_compliance = 5
			add_resistance = -10
		}
	}
}

country_event = { #An inquisitor writes back to Pinpoint in a report, partially in code, about how she has successfully been brought back into the Empire because she got through the border and claimed she was oppressed and nearly killed by Pinpoint for going against her insane beliefs, and she has gotten information on plans for the South-East, and that they can use them to keep the Empire off their backs for a while longer
	id = militem.pinpoint.63
	title = militem.pinpoint.63.t
	desc = militem.pinpoint.63.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.63"}
	
	is_triggered_only = yes
	
	option = { #May we meet again, Archmage.
		name = militem.pinpoint.63.a
		add_manpower = -500
		add_tech_bonus = {
			name = electronics_bonus
			uses = 2
			bonus = 1
			category = electronics
		}
	}
}

country_event = { #As Pinpoint is needlessly twisting off some part of a thestral to see how it breaks, she muses on how they have an interesting genetic structure compared to EEE thestrals, and that they must have diverged significantly at some point, since they seem more adjusted to Zebrica and are either different brain sizes, or some gland differences are the like, and she promises that he won't be the last she experiments on
	id = militem.pinpoint.64
	title = militem.pinpoint.64.t
	desc = militem.pinpoint.64.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.64"}
	
	is_triggered_only = yes
	
	option = { #Not the last at all, my sweet.
		name = militem.pinpoint.64.a
		add_ideas = MTS_thestral_research_subjects
		
	}
}

country_event = { #In a panic, a hippogriff prisoner is led into Pinpoint's lab, and she begs with Pinpoint, after Pinpoint appears, to let her go, because she's too much like a pony to give any useful information about how avians are heretical and different from ponies, and other useless excuses, and Pinpoint nonchalantly says she knows they're not like griffons, but she wants to learn what makes them tick, anyway, and she'll get useful results regardless, which makes the hippogriff faint
	id = militem.pinpoint.65
	title = militem.pinpoint.65.t
	desc = militem.pinpoint.65.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.65"}
	
	is_triggered_only = yes
	
	option = { #Good. I hate it when they whine all day.
		name = militem.pinpoint.65.a
		set_temp_variable = { MTS_heretic_prisoners_added = 2000 }
		MTS_add_new_heretic_prisoners = yes
		set_country_flag = MTS_raid_HIP
		custom_effect_tooltip = MTS_bad_feesh_tt
	}
}

country_event = { #Skystar is stuck in a cell, talking with a small rock she made friends with, and Pinpoint then bursts in to gloat at Skystar, who is overly resolved that she will stand for Harmony until the end, and it will always prevail; Pinpoint finds it cute, and states that Harmony will do nothing, especially once Skystar is dead following her execution a few days from then, which makes Skystar feel hopeless, since she'll be forgotten in the annals of history, as Pinpoint states
	id = militem.pinpoint.66
	title = militem.pinpoint.66.t
	desc = militem.pinpoint.66.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.66"}
	
	is_triggered_only = yes
	
	option = { #Sky-who?
		name = militem.pinpoint.66.a
		add_stability = 0.05
		add_political_power = 75
	}
}

country_event = { #A report written by Pinpoint herself, which is highly erratic and manic, as she is convinced that she has found the source of heresy, in some small area of the brain, that controls inhibitions and thoughts and the like, and she swears that she will study it as much as she can, and get enough subjects to fully prove that it is the source of all heresy; the note ends with her passing out midway through writing her thoughts, as she is exhausted from not sleeping for days
	id = militem.pinpoint.67
	title = militem.pinpoint.67.t
	desc = militem.pinpoint.67.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.67"}
	
	is_triggered_only = yes
	
	option = { #Peace shall be achieved!
		name = militem.pinpoint.67.a
		add_stability = -0.05
		set_temp_variable = { MTS_heretic_prisoners_added = 15000 }
		MTS_add_new_heretic_prisoners = yes
	}
}

country_event = { #Eagerly Pinpoint pulls back from her experiment, which is a brain surgery on a heretic, or at least who she claims is a heretic, and when the pony is woken, she tries to get them to think about things that are against Daybreaker or Solarism, which the pony cannot, although the pony can barely think at all, although Pinpoint considers this a success; it makes her laugh a bit too hard
	id = militem.pinpoint.68
	title = militem.pinpoint.68.t
	desc = militem.pinpoint.68.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.68"}
	
	is_triggered_only = yes
	
	option = { #The perfect pony!
		name = militem.pinpoint.68.a
		add_political_power = 200
		add_advisor_role = {
			character = MTS_Sanguine
			advisor = {
				slot = political_advisor
				idea_token = sanguine
				traits = { the_first_cure }
			}
		}
	}
}

country_event = { #Sitting down in a throne, Pinpoint cackles to herself about her success of destroying heresy, and she monologues a bit about how she has defeated the greatest enemy, and that she is clearly the best, and as she does so, the scope of the narration pulls back to reveal row after row of loyal pony, all lobotomized and incapable of any thought, and she declares herself the true protector of ponykind, for doing what the Empress could not
	id = militem.pinpoint.69
	title = militem.pinpoint.69.t
	desc = militem.pinpoint.69.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.69"}
	
	is_triggered_only = yes
	
	option = { #Sol Invictus Aeterna!
		name = militem.pinpoint.69.a
		MTS_Pinpoint = {
			add_trait = { ideology = solarism trait = eradicator_of_heresy }
		}
		custom_effect_tooltip = MTS_heresy_eradicated_tt
	}
}

country_event = { #Some ponies try to flee one of the quarters of Sanctum Solar, but are hemmed in by soldiers for Ordo Meridian, and one is brave enough to challenge the inquisitor leading them regarding why they are burning the city, and the inquisitor, as she arrests or executes him, states that it's for purging the rot of the Empire that infested it so
	id = militem.pinpoint.70
	title = militem.pinpoint.70.t
	desc = militem.pinpoint.70.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.70"}
	
	is_triggered_only = yes
	
	option = { #Burn in Tartarus, traitor.
		name = militem.pinpoint.70.a
		set_capital = { state = 3 }
		add_state_core = 3
		add_stability = 0.05
		every_state = {
			limit = {
				is_owned_by = ROOT
				is_core_of = SLE
				AND = {
					is_claimed_by = SLE
					NOT = { is_core_of = ROOT }
				}
			}
			add_resistance = -5
		}
	}
}

country_event = { #An inquisitor is going through some notepaper as a few ponies are dragged before her, and she gives them only a brief inspection, looking at color, physical appearance, etc., to determine if they will or are heretics, which gets pushback before she puts them all to death for heresy, since they aren't approved pony phenotypes
	id = militem.pinpoint.71
	title = militem.pinpoint.71.t
	desc = militem.pinpoint.71.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.71"}
	
	is_triggered_only = yes
	
	option = { #It's not like they're faithful or anything.
		name = militem.pinpoint.71.a
		every_state = {
			limit = {
				is_owned_by = ROOT
				is_core_of = SLE
				AND = {
					is_claimed_by = SLE
					NOT = { is_core_of = ROOT }
				}
			}
			add_compliance = 5
			add_resistance = -5
		}
	}
}

country_event = { #A female noble screams as she cowers in her room, hearing some of the other nobles in the castle having their rooms barged into and searched, or dragged out to be arrested, for crimes against the Empress, and she pleads, for once, to a small icon of Daybreaker to give her safety and to keep the inquisitors from getting to her, and she faints when the door is knocked in for her to be taken
	id = militem.pinpoint.72
	title = militem.pinpoint.72.t
	desc = militem.pinpoint.72.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.72"}
	
	is_triggered_only = yes
	
	option = { #You will no longer taint this castle with your heresy!
		name = militem.pinpoint.72.a
		every_state = {
			limit = {
				is_owned_by = ROOT
				is_core_of = SLE
				AND = {
					is_claimed_by = SLE
					NOT = { is_core_of = ROOT }
				}
			}
			add_compliance = 5
			add_resistance = -5
		}
		save_current_manpower = yes
		3 = { add_manpower = -10293 }
		restore_previous_manpower = yes
	}
}

country_event = { #Pinpoint barges into a prison cell wing to inspect some of the captured inquisitors from across the Empire, and she sees how they are all irate at her, and has arguments about how she is not the one at fault, and gives them one chance to repent and follow her as she finishes Daybreaker's mission
	id = militem.pinpoint.73
	title = militem.pinpoint.73.t
	desc = militem.pinpoint.73.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.73"}
	
	is_triggered_only = yes
	
	option = { #You will be more useful alive than dead, sad to say.
		name = militem.pinpoint.73.a
		add_ideas = MTS_corrected_inquisitors
	}
}

country_event = { #From a podium on the balcony of the castle, a priestess, who has been appointed as the replacement for Sunset, holds a sermon to the massed by force ponies about how they should be thankful to be given the chance of learning knowledge from the Empress, and that it must not make them fall to heresy, as the city is concentrated to a new, esoteric technocracy
	id = militem.pinpoint.74
	title = militem.pinpoint.74.t
	desc = militem.pinpoint.74.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.74"}
	
	is_triggered_only = yes
	
	option = { #May her light give us all wisdom.
		name = militem.pinpoint.74.a
		add_ideas = MTS_beacon_of_power
		every_state = {
			limit = {
				is_owned_by = ROOT
				is_core_of = SLE
				AND = {
					is_claimed_by = SLE
					NOT = { is_core_of = ROOT }
				}
			}
			add_compliance = 3
		}
	}
}

country_event = { #Pinpoint and another inquisitor march into a church in Sanctum Solar, with Pinpoint smarmily speaking with the head priestess there, going over things that she could arrest and kill the priestess for, unless she starts preaching what she wants exactly, and goes over other errors in modern Adoratio doctrine
	id = militem.pinpoint.75
	title = militem.pinpoint.75.t
	desc = militem.pinpoint.75.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.75"}
	
	is_triggered_only = yes
	
	option = { #I'd rather be alive, so I will.
		name = militem.pinpoint.75.a
		add_ideas = MTS_corrected_adoratio
	}
}

country_event = { #From the balcony in the castle, Pinpoint looks out on the ponies that have been massed there for her announcement, which is her promising that she will keep the throne empty, and guard the Empire to honor the Empress's desire to see Ponykind led and protected, and she gets more adamant that she will eradicate heresy at any cost, and protect them in the same way from it, which scares many there
	id = militem.pinpoint.76
	title = militem.pinpoint.76.t
	desc = militem.pinpoint.76.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.76"}
	
	is_triggered_only = yes
	
	option = { #They will love me, whether they want to or not.
		name = militem.pinpoint.76.a
		MTS_Pinpoint = {
			add_trait = { ideology = solarism trait = imperial_continuer }
		}
	}
}

country_event = { #Pinpoint hosts a speech from the throne room, as she has placed herself upon it as the successor to the Empress, and goes on a rant about how heresy has completely cemented itself in the Empire, and that she will do everything to find it and to research a way to cleanse the rot forever, no matter how much suffering and pain it may cause, which worries everypony there
	id = militem.pinpoint.77
	title = militem.pinpoint.77.t
	desc = militem.pinpoint.77.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.77"}
	
	is_triggered_only = yes
	
	option = { #They will fear the Empress's wrath, whether they want to or not.
		name = militem.pinpoint.77.a
		MTS_Pinpoint = {
			add_trait = { ideology = solarism trait = empress_of_science }
		}
	}
}

country_event = { #Celebration or at least a report of taking Sanctum Solar from whoever owns it, with a promise that it will strengthen the legitimacy of the Ordo and Pinpoint and also provide MTS with a better industry and manpower base, once the populace is brought in line
	id = militem.pinpoint.78
	title = militem.pinpoint.78.t
	desc = militem.pinpoint.78.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.78"}
	
	trigger = {
		tag = MTS
		owns_state = 3
		has_country_leader = { character = MTS_Pinpoint ruling_only = yes }
	}
	fire_only_once = yes
	
	option = { #I am the Empress now!
		name = militem.pinpoint.78.a
		add_political_power = 25
		add_stability = 0.025
		mark_focus_tree_layout_dirty = yes
	}
}

###FLAVOUR!###
###Scorched's Twu Wuv###
country_event = { #Scorched is leading from the front during the war against the South-East, and is almost killed by artillery fire that goes astray, but he is protected as Luminous pushes him out of the way at the last second, which wounds her
	id = militem.romanceowo.1
	title = militem.romanceowo.1.t
	desc = militem.romanceowo.1.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.1"}
	
	trigger = {
		tag = MTS
		OR = {
			has_war_with = BAL
			has_war_with = STB
			has_war_with = EEE
			has_war_with = NEI
			has_war_with = NID
			has_war_with = NRP
			has_war_with = SPF
			has_war_with = CLI
		}
	}
	mean_time_to_happen = { days = 120 }
	fire_only_once = yes
	
	option = { #Luminous!
		name = militem.romanceowo.1.a
		EQS_Luminous_Blade = {
			add_timed_unit_leader_trait = {
				trait = wounded
				days = 150
			}
		}
		hidden_effect = { country_event = { id = militem.romanceowo.2 days = 1 } }
	}
}

country_event = { #Scorched visits the field hospital shortly thereafter to see if Luminous is alive, and he spends a short period of time with her to thank her, as he starts to feel something more about her than just respect as his aide and bodyguard
	id = militem.romanceowo.2
	title = militem.romanceowo.2.t
	desc = militem.romanceowo.2.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.2"}
	
	is_triggered_only = yes
	
	option = { #Thank you.
		name = militem.romanceowo.2.a
	}
}

country_event = {
	id = militem.romanceowo.4
	title = militem.romanceowo.4.t
	desc = militem.romanceowo.4.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.4"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.4.a
	}
}

country_event = {
	id = militem.romanceowo.5
	title = militem.romanceowo.5.t
	desc = militem.romanceowo.5.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.5"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.5.a
	}
}

country_event = {
	id = militem.romanceowo.6
	title = militem.romanceowo.6.t
	desc = militem.romanceowo.6.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.6"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.6.a
	}
}

country_event = {
	id = militem.romanceowo.7
	title = militem.romanceowo.7.t
	desc = militem.romanceowo.7.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.7"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.7.a
	}
}

country_event = {
	id = militem.romanceowo.8
	title = militem.romanceowo.8.t
	desc = militem.romanceowo.8.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.8"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.8.a
	}
}

country_event = {
	id = militem.romanceowo.9
	title = militem.romanceowo.9.t
	desc = militem.romanceowo.9.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.9"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.9.a
	}
}

country_event = {
	id = militem.romanceowo.10
	title = militem.romanceowo.10.t
	desc = militem.romanceowo.10.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.10"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.10.a
	}
}

country_event = {
	id = militem.romanceowo.11
	title = militem.romanceowo.11.t
	desc = militem.romanceowo.11.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.11"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.11.a
	}
}

country_event = {
	id = militem.romanceowo.12
	title = militem.romanceowo.12.t
	desc = militem.romanceowo.12.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.12"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.12.a
	}
}

country_event = {
	id = militem.romanceowo.13
	title = militem.romanceowo.13.t
	desc = militem.romanceowo.13.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.13"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.13.a
	}
}

country_event = {
	id = militem.romanceowo.14
	title = militem.romanceowo.14.t
	desc = militem.romanceowo.14.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.14"}
	
	is_triggered_only = yes
	
	option = { #Let us spend the day together, my love.
		name = militem.romanceowo.14.a
		add_stability = 0.01
		add_political_power = 5
		promote_character = MTS_Scorched_Earth_and_Luminous_Blade
		custom_effect_tooltip = MTS_totally_swapping_traits_tt
		hidden_effect = {
			if = {
				limit = {
					EQS_Scorched_Earth = { has_trait = supreme_general }
				}
				MTS_Scorched_Earth_and_Luminous_Blade = {
					add_trait = { ideology = solarism trait = supreme_general }
				}
			}
		}
	}
}

country_event = {
	id = militem.romanceowo.15
	title = militem.romanceowo.15.t
	desc = militem.romanceowo.15.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.15"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.15.a
	}
}

country_event = {
	id = militem.romanceowo.16
	title = militem.romanceowo.16.t
	desc = militem.romanceowo.16.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.16"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.16.a
	}
}

country_event = {
	id = militem.romanceowo.17
	title = militem.romanceowo.17.t
	desc = militem.romanceowo.17.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.17"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.17.a
	}
}

country_event = {
	id = militem.romanceowo.18
	title = militem.romanceowo.18.t
	desc = militem.romanceowo.18.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.18"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.18.a
	}
}

country_event = {
	id = militem.romanceowo.19
	title = militem.romanceowo.19.t
	desc = militem.romanceowo.19.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.19"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.19.a
	}
}

country_event = {
	id = militem.romanceowo.20
	title = militem.romanceowo.20.t
	desc = militem.romanceowo.20.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.20"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.20.a
	}
}

country_event = {
	id = militem.romanceowo.21
	title = militem.romanceowo.21.t
	desc = militem.romanceowo.21.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.21"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.21.a
	}
}

country_event = {
	id = militem.romanceowo.22
	title = militem.romanceowo.22.t
	desc = militem.romanceowo.22.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.22"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.22.a
	}
}

country_event = {
	id = militem.romanceowo.23
	title = militem.romanceowo.23.t
	desc = militem.romanceowo.23.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.23"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.23.a
	}
}

country_event = {
	id = militem.romanceowo.24
	title = militem.romanceowo.24.t
	desc = militem.romanceowo.24.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.24"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.24.a
	}
}

country_event = {
	id = militem.romanceowo.25
	title = militem.romanceowo.25.t
	desc = militem.romanceowo.25.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.25"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.25.a
	}
}

country_event = {
	id = militem.romanceowo.26
	title = militem.romanceowo.26.t
	desc = militem.romanceowo.26.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.romanceowo.26"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.romanceowo.26.a
	}
}

###Pinpoint Research###
country_event = {
	id = militem.pinpoint.900
	title = militem.pinpoint.900.t
	desc = militem.pinpoint.900.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.900"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.pinpoint.900.a
		set_technology = { MTS_project_sunrise_tech = 1 }
	}
}

country_event = {
	id = militem.pinpoint.901
	title = militem.pinpoint.901.t
	desc = militem.pinpoint.901.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.901"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.pinpoint.901.a
		set_technology = { MTS_project_kinesis_tech = 1 }
	}
}

country_event = {
	id = militem.pinpoint.902
	title = militem.pinpoint.902.t
	desc = militem.pinpoint.902.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.902"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.pinpoint.902.a
		set_technology = { MTS_project_guardian_tech = 1 }
	}
}

country_event = {
	id = militem.pinpoint.903
	title = militem.pinpoint.903.t
	desc = militem.pinpoint.903.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.903"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.pinpoint.903.a
		set_technology = { MTS_project_aero_tech = 1 }
	}
}

country_event = {
	id = militem.pinpoint.904
	title = militem.pinpoint.904.t
	desc = militem.pinpoint.904.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.904"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.pinpoint.904.a
		set_technology = { MTS_project_mage_tech = 1 }
	}
}

country_event = {
	id = militem.pinpoint.905
	title = militem.pinpoint.905.t
	desc = militem.pinpoint.905.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.905"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.pinpoint.905.a
		add_stability = 0.1
		set_country_flag = MTS_heresy_cured
	}
}

###Pinpoint Raids###
country_event = {
	id = militem.pinpoint.1000
	title = militem.pinpoint.1000.t
	desc = militem.pinpoint.1000.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.1000"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.pinpoint.1000.a
		add_manpower = 800
		add_command_power = 10
		clr_country_flag = MTS_preparing_heretic_raid
		set_temp_variable = { MTS_heretic_prisoners_added = 1250 }
		MTS_add_new_heretic_prisoners = yes
	}
}
country_event = {
	id = militem.pinpoint.1001
	title = militem.pinpoint.1001.t
	desc = militem.pinpoint.1001.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.1001"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.pinpoint.1001.a
		add_political_power = -15
		add_stability = -0.01
		clr_country_flag = MTS_preparing_heretic_raid
	}
}
country_event = {
	id = militem.pinpoint.1002
	title = militem.pinpoint.1002.t
	desc = militem.pinpoint.1002.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.1002"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.pinpoint.1002.a
		add_manpower = 1500
		add_command_power = 15
		add_war_support = 0.02
		clr_country_flag = MTS_preparing_heretic_raid
		set_temp_variable = { MTS_heretic_prisoners_added = 3000 }
		MTS_add_new_heretic_prisoners = yes
	}
}
country_event = {
	id = militem.pinpoint.1003
	title = militem.pinpoint.1003.t
	desc = militem.pinpoint.1003.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.1003"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.pinpoint.1003.a
		add_political_power = -30
		add_stability = -0.02
		clr_country_flag = MTS_preparing_heretic_raid
	}
}
country_event = {
	id = militem.pinpoint.1004
	title = militem.pinpoint.1004.t
	desc = militem.pinpoint.1004.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.1004"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.pinpoint.1000.a
		add_manpower = 1300
		add_command_power = 10
	}
}
country_event = {
	id = militem.pinpoint.1005
	title = militem.pinpoint.1005.t
	desc = militem.pinpoint.1005.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.1005"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.pinpoint.1005.a
		add_political_power = 30
		add_stability = 0.02
	}
}
country_event = {
	id = militem.pinpoint.1006
	title = militem.pinpoint.1006.t
	desc = militem.pinpoint.1006.d
	immediate = {log = "[GetDateText]: [Root.GetName]: event militem.pinpoint.1006"}
	
	is_triggered_only = yes
	
	option = {
		name = militem.pinpoint.1006.a
		add_stability = -0.03
		add_political_power = -0.03
		add_manpower = -3000
	}
}
