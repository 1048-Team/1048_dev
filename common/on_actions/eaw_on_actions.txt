on_actions = {
	
	on_startup = {
		effect = {
			###Changeling Hegemony Countries###
			add_to_array = { global.changeling_hegemony = CHN.id }
			add_to_array = { global.changeling_hegemony = NCA.id }
			add_to_array = { global.changeling_hegemony = CCA.id }
			add_to_array = { global.changeling_hegemony = SCS.id }
			add_to_array = { global.changeling_hegemony = OLE.id }

			###National Redemption Front States##
			add_to_array = { global.nrp_controlled_land = 52.id }
			add_to_array = { global.nrp_controlled_land = 79.id }
			add_to_array = { global.nrp_controlled_land = 25.id }
			add_to_array = { global.nrp_controlled_land = 353.id }
			add_to_array = { global.nrp_controlled_land = 26.id }
			add_to_array = { global.nrp_controlled_land = 36.id }
			add_to_array = { global.nrp_controlled_land = 86.id }
			add_to_array = { global.nrp_controlled_land = 32.id }
			add_to_array = { global.nrp_controlled_land = 1213.id }
			add_to_array = { global.nrp_controlled_land = 33.id }
			add_to_array = { global.nrp_controlled_land = 351.id }
			
			###Shield of Steel Countries###
			add_to_array = { global.shield_of_steel = STG.id }
			add_to_array = { global.shield_of_steel = MWR.id }
			add_to_array = { global.shield_of_steel = AWR.id }
			add_to_array = { global.shield_of_steel = CWR.id }
			
			###Citizens' League Countries###
			add_to_array = { global.citizens_league = EQC.id }
			add_to_array = { global.citizens_league = SIC.id }
			add_to_array = { global.citizens_league = MIT.id }
			
			###Western Griffonian Empire Countries###
			add_to_array = { global.western_griffonian_empire = GRF.id }
			add_to_array = { global.western_griffonian_empire = SCH.id }
			add_to_array = { global.western_griffonian_empire = SMH.id }
			add_to_array = { global.western_griffonian_empire = YAH.id }
			add_to_array = { global.western_griffonian_empire = NVC.id }
			add_to_array = { global.western_griffonian_empire = JGR.id }
			add_to_array = { global.western_griffonian_empire = VRG.id }
			add_to_array = { global.western_griffonian_empire = MWR.id }
			
			###Rump States###
			add_to_array = { global.solar_empire_rumps = BLS.id }
			add_to_array = { global.solar_empire_rumps = CER.id }
			add_to_array = { global.solar_empire_rumps = NER.id }
			add_to_array = { global.solar_empire_rumps = WHY.id }
			add_to_array = { global.solar_empire_rumps = CLD.id }
			
			###Southeast Countries###
			add_to_array = { global.southeast_countries = BAL.id }
			add_to_array = { global.southeast_countries = EEE.id }
			add_to_array = { global.southeast_countries = NRP.id }
			add_to_array = { global.southeast_countries = NID.id }
			add_to_array = { global.southeast_countries = CLI.id }
			add_to_array = { global.southeast_countries = NEI.id }
			add_to_array = { global.southeast_countries = SPF.id }
			add_to_array = { global.southeast_countries = MTS.id }
			add_to_array = { global.southeast_countries = STB.id }
			add_to_array = { global.southeast_countries = PCB.id }
			
			###Southeast State Regions###
			###West states###
			add_to_array = { global.west_southeast = 34.id }
			add_to_array = { global.west_southeast = 15.id }
			add_to_array = { global.west_southeast = 50.id }
			add_to_array = { global.west_southeast = 81.id }
			add_to_array = { global.west_southeast = 32.id }
			add_to_array = { global.west_southeast = 86.id }
			add_to_array = { global.west_southeast = 26.id }
			add_to_array = { global.west_southeast = 33.id }
			add_to_array = { global.west_southeast = 351.id }
			add_to_array = { global.west_southeast = 221.id }
			add_to_array = { global.west_southeast = 687.id }
			add_to_array = { global.west_southeast = 353.id }
			add_to_array = { global.west_southeast = 52.id }
			add_to_array = { global.west_southeast = 25.id }
			add_to_array = { global.west_southeast = 79.id }
			add_to_array = { global.west_southeast = 4.id }
			add_to_array = { global.west_southeast = 686.id }
			
			###Central states###
			add_to_array = { global.central_southeast = 35.id }
			add_to_array = { global.central_southeast = 30.id }
			add_to_array = { global.central_southeast = 36.id }
			add_to_array = { global.central_southeast = 350.id }
			add_to_array = { global.central_southeast = 24.id }
			add_to_array = { global.central_southeast = 83.id }
			add_to_array = { global.central_southeast = 352.id }
			add_to_array = { global.central_southeast = 16.id }
			add_to_array = { global.central_southeast = 348.id }
			add_to_array = { global.central_southeast = 88.id }
			add_to_array = { global.central_southeast = 6.id }
			add_to_array = { global.central_southeast = 7.id }
			add_to_array = { global.central_southeast = 8.id }
			add_to_array = { global.central_southeast = 9.id }
			add_to_array = { global.central_southeast = 10.id }
			add_to_array = { global.central_southeast = 328.id }
			
			###Eastern states###
			add_to_array = { global.eastern_southeast = 17.id }
			add_to_array = { global.eastern_southeast = 37.id }
			add_to_array = { global.eastern_southeast = 31.id }
			add_to_array = { global.eastern_southeast = 90.id }
			add_to_array = { global.eastern_southeast = 82.id }
			add_to_array = { global.eastern_southeast = 84.id }
			add_to_array = { global.eastern_southeast = 27.id }
			add_to_array = { global.eastern_southeast = 28.id }
			add_to_array = { global.eastern_southeast = 13.id }
			add_to_array = { global.eastern_southeast = 688.id }
			
			###Crystal Empire states###
			every_state = {
				limit = {
					AND = {
						is_core_of = CRY
						NOT = { state = 1220 }
					}
				}
				add_to_array = { global.crystal_core_territory = THIS.id }
			}
			
			###CWR states###
			every_state = {
				limit = {
					is_core_of = CWR
				}
				add_to_array = { global.CWR_territory = THIS.id }
			}
			
			###YAK states###
			every_state = {
				limit = {
					AND = {
						OR = {
							is_claimed_by = YAH
							is_claimed_by = SMH
						}
						NOT = { state = 335 }
						NOT = { state = 336 }
						NOT = { state = 337 }
						NOT = { state = 281 }
						NOT = { state = 278 }
						NOT = { state = 277 }
						NOT = { state = 342 }
					}
				}
				add_to_array = { global.YAK_territory = THIS.id }
			}
			
			###PLB states###
			every_state = {
				limit = {
					OR = {
						is_core_of = JGR
						is_claimed_by = JGR
					}
				}
				add_to_array = { global.PLB_territory = THIS.id }
			}
			
			###Nova Griffonia states###
			every_state = {
				limit = {
					AND = {
						OR = {
							is_core_of = NVC
							is_core_of = GRF
							is_core_of = VRG
							is_core_of = MWR
						}
						NOT = { state = 253 }
						NOT = { state = 341 }
						NOT = { state = 340 }
						is_claimed_by = GRF
					}
				}
				add_to_array = { global.GRF_territory = THIS.id }
			}
			add_to_array = { global.GRF_territory = 287.id }
			add_to_array = { global.GRF_territory = 288.id }
			
			###Western Griffonian Empire states###
			every_state = {
				limit = {
					is_claimed_by = GRF
				}
				add_to_array = { global.WGE_territory = THIS.id }
			}
			
			###Solar Empire states###
			every_state = {
				limit = {
					is_core_of = EQS
				}
				add_to_array = { global.EQS_starting_territory = THIS.id }
			}
			every_state = {
				limit = {
					is_claimed_by = EQS
				}
				add_to_array = { global.EQS_original_territory = THIS.id }
			}
			
			###Ordo Salus states###
			every_state = {
				limit = {
					AND = {
						is_core_of = CHN
						is_claimed_by = EQS
					}
				}
				add_to_array = { global.ordo_salus_territory = THIS.id }
			}
			
			###Ordo Loyalty startup###
			add_to_array = { global.ordo_loyalty_array = 50 }
			add_to_array = { global.ordo_loyalty_array = 47 }
			add_to_array = { global.ordo_loyalty_array = 67 }
			add_to_array = { global.ordo_loyalty_array = 54 }
			add_to_array = { global.ordo_loyalty_array = 43 }
			add_to_array = { global.ordo_loyalty_array = 58 }
			add_to_array = { global.ordo_loyalty_array = 49 }
			add_to_array = { global.ordo_loyalty_array = 79 }
			add_to_array = { global.ordo_loyalty_array = 23 }
			add_to_array = { global.ordo_loyalty_array = 33 }
			add_to_array = { global.ordo_loyalty_array = 41 }
			add_to_array = { global.ordo_loyalty_array = 22 }
			add_to_array = { global.ordo_loyalty_array = 17 }
			add_to_array = { global.ordo_loyalty_array = 34 }
			add_to_array = { global.ordo_loyalty_array = 51 }
			add_to_array = { global.ordo_loyalty_array = 25 }
			add_to_array = { global.ordo_loyalty_array = 32 }
			add_to_array = { global.ordo_loyalty_array = 42 }
			add_to_array = { global.ordo_loyalty_array = 35 }
			add_to_array = { global.ordo_loyalty_array = 53 }
			add_to_array = { global.ordo_loyalty_array = 36 }
			add_to_array = { global.ordo_loyalty_array = 26 }
			add_to_array = { global.ordo_loyalty_array = 41 }
			add_to_array = { global.ordo_loyalty_array = 76 }
			
			EQS = {
				country_event = solarordo.25
			}
			
			###Solar Flare cultist burial sites###
			add_to_array = { global.BLS_cultist_site = 5.id }
			add_to_array = { global.BLS_cultist_site = 56.id }
			add_to_array = { global.BLS_cultist_site = 74.id }
			add_to_array = { global.BLS_cultist_site = 103.id }
			add_to_array = { global.BLS_cultist_site = 181.id }
			add_to_array = { global.BLS_cultist_site = 182.id }
			add_to_array = { global.BLS_cultist_site = 344.id }
			
			###Solar Flare dead cultist starting numbers###
			5 = { set_variable = { BLS_dead_cultists = 27000 } }
			56 = { set_variable = { BLS_dead_cultists = 10000 } }
			74 = { set_variable = { BLS_dead_cultists = 50000 } }
			103 = { set_variable = { BLS_dead_cultists = 12500 } }
			181 = { set_variable = { BLS_dead_cultists = 25000 } }
			182 = { set_variable = { BLS_dead_cultists = 20000 } }
			344 = { set_variable = { BLS_dead_cultists = 35000 } }
			
			###Operative Setup; Yoinked from EaW###
			#if = {
			#	limit = {
			#		has_dlc = "La Resistance"
			#	}
			#	set_global_flag = starting_operatives
			#	set_variable = { global.onstartup_operative = 0 }
			#	#CHN = {
			#	#	create_operative_leader = {
			#	#		name = "Spiracles"
			#	#		GFX = GFX_portrait_CHN_Spiracles
			#	#		bypass_recruitment = yes
			#	#		available_to_spy_master = yes
			#	#		female = yes
			#	#		nationalities = { 
			#	#		   CHN CCN MAN NCH
			#	#		}
			#	#		traits = { 
			#	#			operative_agentbio_spiracles
			#	#			operative_spiracles
			#	#			operative_seducer
			#	#			# changeling_race_trait
			#	#		}
			#	#	}
			#	#}
			#	#GRF = {
			#	#	create_operative_leader = {
			#	#		name = "Erich Werner"
			#	#		GFX = GFX_portrait_Erich_Werner
			#	#		bypass_recruitment = no
			#	#		available_to_spy_master = yes
			#	#		nationalities = { 
			#	#			EYR
			#	#			GRF
			#	#			GFF
			#	#			GRI
			#	#			FAT
			#	#			FAW
			#	#			TRD
			#	#			FEA
			#	#			PYT
			#	#			ROU
			#	#			BOI
			#	#			LAK
			#	#			YAL
			#	#			ANG
			#	#			STW
			#	#			HLQ
			#	#			KAT
			#	#			LNS
			#	#			HAU
			#	#			SRS
			#	#			LSM
			#	#			BAN
			#	#			JHZ
			#	#			JGF
			#	#			JOS
			#	#		}
			#	#		traits = { 
			#	#			operative_scientist
			#	#			operative_spyhunter
			#	#			griffon_race_trait
			#	#		}
			#	#	}
			#	#}
			#	#RCT = {
			#	#	create_operative_leader = {
			#	#		name = "Dead Drop"
			#	#		GFX = GFX_portrait_RCT_Dead_Drop
			#	#		bypass_recruitment = yes
			#	#		available_to_spy_master = yes
			#	#		female = yes
			#	#		nationalities = { 
			#	#			FIR
			#	#			WAT
			#	#			FBK
			#	#			NTR
			#	#			LCT
			#	#			RCT
			#	#			NIM
			#	#			WIT
			#	#			BAK
			#	#			DEP
			#	#			FRE
			#	#			BAR
			#	#			LSC
			#	#			JHP
			#	#			JRV
			#	#		}
			#	#		traits = { 
			#	#			operative_agentbio_deaddrop
			#	#			operative_seducer
			#	#			operative_linguist
			#	#			pony_race_trait
			#	#		}
			#	#	}
			#	#
			#	#	create_operative_leader = {
			#	#		name = "False Flag"
			#	#		GFX = GFX_portrait_RCT_False_Flag
			#	#		bypass_recruitment = yes
			#	#		available_to_spy_master = yes
			#	#		female = yes
			#	#		nationalities = { 
			#	#			FIR
			#	#			WAT
			#	#			FBK
			#	#			NTR
			#	#			LCT
			#	#			RCT
			#	#			NIM
			#	#			WIT
			#	#			BAK
			#	#			DEP
			#	#			FRE
			#	#			BAR
			#	#			LSC
			#	#			JHP
			#	#			JRV
			#	#		}
			#	#		traits = { 
			#	#			operative_agentbio_falseflag
			#	#			operative_demolition_expert
			#	#			operative_linguist
			#	#			pony_race_trait
			#	#		}
			#	#	}
			#	#}
			#	EQS = {
			#		create_operative_leader = {
			#			name = "Astrum Solus"
			#			GFX = GFX_portrait_astrum_solus
			#			bypass_recruitment = yes
			#			available_to_spy_master = yes
			#			nationalities = {
			#				EQS
			#				STG
			#				CRY
			#				SCS
			#				BAL
			#				SLW
			#				NER
			#				CER
			#				WHY
			#				BLS
			#				CLD
			#				AWR
			#				CWR
			#				MWR
			#				EEE
			#				MTS
			#				STB
			#				CLI
			#				NRP
			#				NID
			#				NEI
			#				SPF
			#				NCA
			#				CCA
			#			}
			#			traits = { 
			#				operative_agentbio_astrum
			#				operative_commando operative_linguist operative_safe_cracker operative_escape_artist
			#				pony_race_trait
			#			}
			#			female = yes
			#		}
			#	}
			#	clr_global_flag = starting_operatives
			#	clear_variable = global.onstartup_operative
			#}
			
			###Lots of EaW copied stuff###
			every_country = {
				# added in vanilla 1.9.2
				capital_scope = {
					set_variable = { historical_capital_for_country = PREV }
				}
				
				if = {
					limit = { is_pony_race = yes }
					add_ideas = pony_race
				}
				else_if = {
					limit = { is_changeling_race = yes }
					add_ideas = changeling_race
				}
				else_if = {
					limit = { is_deer_race = yes }
					add_ideas = deer_race
				}
				else_if = {
					limit = { is_giraffe_race = yes }
					add_ideas = giraffe_race
				}
				else_if = {
					limit = { is_griffon_race = yes }
					add_ideas = griffon_race
					country_event = {
						id = fantasyflavor.11
						days = 345
					}
					if = {
						limit = {
							check_variable = { random > 0.90 }
							is_ai = no
							NOT = {
								tag = MNC
								tag = AET
							}
						}
						country_event = {
							id = fantasyflavor.12
							days = 400
							random = 25000
						}
					}
				}
				else_if = {
					limit = { is_cat_race = yes }
					add_ideas = cat_race
				}
				else_if = {
					limit = { is_camel_race = yes }
					add_ideas = camel_race
				}
				else_if = {
					limit = { is_centaur_race = yes }
					add_ideas = centaur_race
				}
				else_if = {
					limit = { is_diamond_dog_race = yes }
					add_ideas = diamond_dog_race
				}
				else_if = {
					limit = { is_donkey_race = yes }
					add_ideas = donkey_race
				}
				else_if = {
					limit = { is_gargoyle_race = yes }
					add_ideas = gargoyle_race
				}
				else_if = {
					limit = { is_horse_race = yes }
					add_ideas = horse_race
				}
				else_if = {
					limit = { is_hippogriff_race = yes }
					add_ideas = hippogriff_race
				}
				else_if = {
					limit = { is_zebra_race = yes }
					add_ideas = zebra_race
				}
				else_if = {
					limit = { is_kirin_race = yes }
					add_ideas = kirin_race
					add_ideas = mare_society_hidden
				}
				else_if = {
					limit = { is_llama_race = yes }
					add_ideas = llama_race
				}
				else_if = {
					limit = { is_harpy_race = yes }
					add_ideas = harpy_race
				}
				else_if = {
					limit = { is_minotaur_race = yes }
					add_ideas = minotaur_race
				}
				else_if = {
					limit = { is_penguin_race = yes }
					add_ideas = penguin_race
				}
				else_if = {
					limit = { is_dragon_race = yes }
					add_ideas = dragon_race
				}
				else_if = {
					limit = { is_undead_race = yes }
					add_ideas = undead_race
				}
				else_if = {
					limit = { is_buffalo_race = yes }
					add_ideas = buffalo_race
				}
				else_if = {
					limit = { is_yak_race = yes }
					add_ideas = yak_race
				}
				else_if = {
					limit = { is_yeti_race = yes }
					add_ideas = yeti_race
				}
				else_if = {
					limit = { is_polar_race = yes }
					add_ideas = polar_race
				}
				else = {
					set_technology = { popup = no generic_race = 1 }
					add_ideas = generic_race_idea
				}

				if = {
					limit = {
						is_on_equestrian_continent = no
						OR = {
							has_idea = dummy_idea_science
							NOT = {
								has_idea_with_trait = science_idea
							}
						}
					}
					if = {
						limit = {
							num_of_civilian_factories > 2
							has_tech = melee_weapons1
							NOT = { owns_big_griffon_city = yes }
							NOT = { owns_major_griffon_city = yes }
							NOT = { owns_big_zebra_city = yes }
							NOT = { owns_major_zebra_city = yes }
						}
						#log = "[Root.GetName] better_science_base"
						add_ideas = better_science_base

					}
					else_if = {
						limit = {
							OR = {
								owns_big_griffon_city = yes
								owns_big_zebra_city = yes
							}
						}
						#log = "[Root.GetName] big_science_base"
						add_ideas = big_science_base
					}
					else_if = {
						limit = {
							OR = {
								owns_major_griffon_city = yes
								owns_major_zebra_city = yes
							}
						}
						#log = "[Root.GetName] proper_science_base"
						add_ideas = proper_science_base
					}
					else_if = {
						limit = {
							NOT = { owns_major_griffon_city = yes }
							NOT = { owns_big_griffon_city = yes }
							NOT = { owns_major_zebra_city = yes }
							NOT = { owns_big_zebra_city = yes }
							OR = {
								NOT = { has_tech = melee_weapons1 }
								NOT = { num_of_civilian_factories > 2 }
							}
							OR = {
								is_griffon_continent_country = yes
								is_zebrican_continent_country = yes
							}
						}
						#log = "[Root.GetName] poor_science_base"
						add_ideas = poor_science_base
					}
				}

				if = {
					limit = {
						OR = {
							#is_on_equestrian_continent = yes
							has_idea = dummy_idea_science
							NOT = {
								has_idea_with_trait = science_idea
							}
						}
					}
					add_ideas = proper_science_base
				}

				if = {
					limit = {
						OR = {
							has_idea = dummy_idea_society
							NOT = {
								has_idea_with_trait = society_idea
							}
						}
					}
					if = {
						limit = { 
							OR = {
								is_griffon_continent_country = yes
								is_zebrican_continent_country = yes
							}
						}
						add_ideas = outdated_industry
						else = {
							add_ideas = modern_society
						}
					}
				}

				if = {
					limit = {
						OR = {
							has_idea = dummy_idea_literacy
							NOT = { has_idea_with_trait = illiteracy_idea }
						}
					}
					add_ideas = no_lack_of_scientists
				}

				if = {
					limit = {
						OR = {
							has_idea = dummy_idea_poverty
							NOT = { has_idea_with_trait = poverty_idea }
						}
					}
					add_ideas = no_poverty
				}
				
				###Will be re-enabled later on
				#if = {
				#	limit = {
				#		is_ai = no
				#	}
				#	set_variable = { eaw_welcome_screen = 1 }
				#}

				if = {
					limit = {
						is_griffon_continent_country = yes
						OR = {
							has_tribal_society = yes
							has_agrarian_society = yes
							has_pre_industrial_society = yes
							has_illiteracy = yes
						}
					}
					country_event = { id = griffonian.166 days = 912 } #comet sighted
				}
				
				if = {
					limit = {
						NOT = {
							tag = GRI
							any_owned_state = {
								OR = {
									is_coastal = yes
									is_island_state = yes
								}
							}
						}
					}
					set_country_flag = started_out_as_landlocked
				}
				if = {
					limit = { 
						OR = {
							has_idea = agrarian_society
							has_idea = tribal_society
							has_idea = communal_society
							has_idea = detached_country
						}
					}
					add_fuel = 25000
				}
				every_owned_state = {
					if = {
						limit = {
							is_core_of = PREV
						}
						#if = {
						#	limit = {
						#		PREV = { tag = CHN }
						#	}
						#	add_to_array = { CCN.original_cores = THIS }
						#	add_to_array = { state_original_cores = CCN }
						#}
						#if = {
						#	limit = {
						#		PREV = { tag = FAT }
						#	}
						#	add_to_array = { FAW.original_cores = THIS }
						#	add_to_array = { state_original_cores = FAW }
						#}
						#if = {
						#	limit = {
						#		PREV = { tag = BRF }
						#	}
						#	add_to_array = { GRW.original_cores = THIS }
						#	add_to_array = { state_original_cores = GRW }
						#}
						#if = {
						#	limit = {
						#		PREV = { tag = GRW }
						#	}
						#	add_to_array = { BRF.original_cores = THIS }
						#	add_to_array = { state_original_cores = BRF }
						#}
						#if = {
						#	limit = {
						#		PREV = { tag = EQS }
						#	}
						#	add_to_array = { NLR.original_cores = THIS }
						#	add_to_array = { state_original_cores = NLR }
						#}
						#if = {
						#	limit = {
						#		PREV = { tag = LNS }
						#	}
						#	add_to_array = { LSC.original_cores = THIS }
						#	add_to_array = { state_original_cores = LSC }
						#	add_to_array = { LSM.original_cores = THIS }
						#	add_to_array = { state_original_cores = LSM }
						#}
					}
					for_each_scope_loop = {
						array = core_countries
						add_to_array = { original_cores = PREV }
						add_to_array = { PREV.state_original_cores = THIS }
					}
				}
				adjust_research_modifier = yes
				update_global_arrays = yes
				if = {
					limit = { NOT = { has_country_flag = weapons_fixed_at_start } }
					actually_fix_weapon_techs = yes
				}
			}

			547 = {
				add_province_modifier = {
					static_modifiers = { scheisswald_forest }
					province = {
						id = 12874
						id = 12787
						id = 8039
					}
				}
			}
			506 = {
				add_province_modifier = {
					static_modifiers = { scheisswald_forest }
					province = {
						id = 1658 
						id = 3860 
						id = 3929 
						id = 11862 
						id = 3947 
						id = 5022 
						id = 7836
					}
				}
			}
			554 = {
				add_province_modifier = {
					static_modifiers = { scheisswald_forest }
					province = {
						id = 1139
						id = 4058
						id = 4538
						id = 12078
						id = 12344
						id = 12344
						id = 1203
						id = 4093
						id = 12062
					}
				}
			}
			423 = {
				add_province_modifier = {
					static_modifiers = { scheisswald_forest }
					province = {
						id = 12667
						id = 10606
						id = 12356
						id = 4880
						id = 4174
						id = 1519
						id = 10421
						id = 4606
						id = 4794
						id = 9892
						id = 9883
						id = 10676
						id = 12651
						id = 10532 
						id = 1867 
					}
				}
			}
			411 = {
				add_province_modifier = {
					static_modifiers = { scheisswald_forest }
					province = {
						id = 3981
						id = 10919
						id = 12785
						id = 4760
						id = 7862
						id = 12620
						id = 7888
						id = 3750
						id = 4871 
					}
				}
			}
			422 = {
				add_province_modifier = {
					static_modifiers = { scheisswald_forest }
					province = {
						id = 1718
						id = 10862
						id = 2050
						id = 12731
						id = 12026
						id = 6828
						id = 12900
						id = 2025
						id = 12589
						id = 12174
						id = 8034
						id = 12692 
						id = 10686 
					}
				}
			}
			471 = {
				add_province_modifier = {
					static_modifiers = { scheisswald_forest }
					province = { id = 10831 }
				}
			}
			488 = {
				add_province_modifier = {
					static_modifiers = { scheisswald_forest }
					province = {
						id = 11996
						id = 12648
						id = 7770
						id = 5036 
					}
				}
			}
			586 = {
				add_province_modifier = {
					static_modifiers = { eygsic_forest }
					province = {
						all_provinces = yes
					}
				}
			}
			#barrad
			624 = {
				add_province_modifier = {
					static_modifiers = { barrad_climate }
					province = {
						all_provinces = yes
					}
				}
				set_state_flag = BAR_climate
			}
			625 = {
				add_province_modifier = {
					static_modifiers = { barrad_climate }
					province = {
						all_provinces = yes
					}
				}
				set_state_flag = BAR_climate
			}
			626 = {
				add_province_modifier = {
					static_modifiers = { barrad_climate }
					province = {
						all_provinces = yes
					}
				}
				set_state_flag = BAR_climate
			}
			648 = {
				add_province_modifier = {
					static_modifiers = { eygsic_forest }
					province = { 
						id = 8222 
						id = 12914
						id = 2178
					}
				}
			}
			491 = {
				add_province_modifier = {
					static_modifiers = { eygsic_forest }
					province = {
						id = 1161
						id = 1001
						id = 10008
						id = 4148
						id = 10783
						id = 12461
						id = 7094
						id = 12859
						id = 7094
						id = 1892
						id = 3834
						id = 2204
						id = 1302
						id = 12036
						id = 10040
						id = 4079
					}
				}
			}
			637 = {
				add_province_modifier = {
					static_modifiers = { eygsic_forest }
					province = { id = 13144 }
				}
			}
			544 = {
				add_province_modifier = {
					static_modifiers = { eygsic_forest }
					province = { 
						id = 1562 
						id = 1089
						id = 4091
					}
				}
			}
			1 = {
				#add_dynamic_modifier = { modifier = everfree_forest_resistance_to_occupation_modifier }
				add_province_modifier = { ## Everfree Forest modifiers ##
					static_modifiers = { old_dragon_gardens }
					province = {
						all_provinces = yes
					}
				}
			}
			5 = {
				#add_dynamic_modifier = { modifier = everfree_forest_resistance_to_occupation_modifier }
				add_province_modifier = {
					static_modifiers = { old_dragon_gardens }
					province = {
						all_provinces = yes
					}
				}
      		}
			WNG = {
				setup_WNG_parliament = yes
			}
			# this extra loop is intentional
			# adjust_research_modifier needs to be fired again after force_update_dynamic_modifier for the value to work correctly
			# first loop is above, in every_country
			for_each_scope_loop = {
				array = global.countries
				force_update_dynamic_modifier = yes
				adjust_research_modifier = yes
			}
			random_country = {
				set_continent_flags_on_every_possible_country = yes #Create own version later that will assign Equus continent and Equus pony continent country flags to both
			}
		}
	}
	
	on_unit_leader_created = {
		effect = {
			log = "[GetDateText]: ROOT: [Root.GetName] FROM: [From.GetName] on_unit_leader_created"
			if = {
				limit = {
					has_global_flag = starting_operatives
				}
				if = {
					limit = { check_variable = { global.onstartup_operative = 4 } }
					set_variable = {
						global.con_mane = THIS
					}
				}
				add_to_variable = { global.onstartup_operative = 1 }
			}
			FROM = {
				set_temp_variable = {
					creator = THIS
				}
			}
			if = {
				limit = { is_exiled_leader = yes }
				set_temp_variable = {
					creator = FROM.FROM
				}
			}
			if = {
				limit = {
					is_operative = no
				}
				log = "[GetDateText]: Character: [This.GetName] is_operative = no - on_unit_leader_created - EaW on Actions"
				if = {
					limit = {
						has_unit_leader_race_trait = no
					}
					set_unit_leader_flag = generated
					if = {
						limit = { var:creator = { 
							original_tag = LSC
							NOT = { has_government = fascism }
						} }
						random_list = {
							75 = {
								modifier = {
									add = -3
									has_completed_focus = LSC_include_new_species
									any_owned_state = {
										any_of_scopes = {
											array = state_original_cores
											OR = {
												original_tag = DMT
												original_tag = BRF
											}
										}
									}
								}
							}
							25 = {
								modifier = {
									add = -3
									has_completed_focus = LSC_include_new_species
									any_owned_state = {
										any_of_scopes = {
											array = state_original_cores
											OR = {
												original_tag = DMT
												original_tag = BRF
											}
										}
									}
								}
								set_unit_leader_to_herzlander = yes
							}
							6 = {
								modifier = {
									factor = 0
									NOT = {
										has_completed_focus = LSC_include_new_species
										any_owned_state = {
											any_of_scopes = {
												array = state_original_cores
												OR = {
													original_tag = DMT
													original_tag = BRF
												}
											}
										}
									}
								}
								set_unit_leader_to_diamond_dog = yes
							}
						}
					}
					else_if = {
						limit = { var:creator = { 
							original_tag = BRZ 
							tag = GRD
						} }
						random_list = {
							50 = {}
							50 = {
								set_unit_leader_to_herzlander = yes
							}
						}
					}
					else_if = {
						limit = { var:creator = { 
							tag = GRI
							NOT = { has_global_flag = GRI_grover_vi_dead }
							any_owned_state = {
								is_core_of = PREV
								is_in_array = {
									state_original_cores = BRZ
								}
							}
						} }
						random_list = {
							90 = {}
							10 = {
								set_unit_leader_to_diamond_dog = yes
							}
						}
					}
					else_if = {
						limit = { var:creator = { 
							original_tag = MAN
							has_completed_focus = MAN_third_eye_2
						} }
						random_list = {
							77 = {}
							33 = {
								set_unit_leader_to_generic_pony = yes
							}
						}
					}
					else_if = {
						limit = { var:creator = { 
							original_tag = HAU
							NOT ={ has_government = fascism }
						} }
						random_list = {
							85 = {}
							15 = {
								set_unit_leader_to_generic_pony = yes
							}
						}
					}
					else_if = {
						limit = { var:creator = { 
							original_tag = LSM
							OR = {
								has_government = neutrality
								has_government = democratic
							}
							has_completed_focus = LNS_service_gurantees_citizenship
						} }
						random_list = {
							80 = {}
							20 = {
								set_unit_leader_to_generic_pony = yes
							}
						}
					}
					else_if = {
						limit = { var:creator = { 
							original_tag = HLR
						} }
						random_list = {
							60 = {}
							40 = {
								set_unit_leader_to_generic_pony = yes
							}
						}
					}
					else_if = {
						limit = { var:creator = { 
							original_tag = HLQ
							OR = {
								has_government = neutrality
								has_government = democratic
							}
							has_completed_focus = HLQ_pony_knights
						} }
						random_list = {
							80 = {}
							20 = {
								set_unit_leader_to_generic_pony = yes
							}
						}
					}
					else_if = {
						limit = { var:creator = { 
							original_tag = JER
							has_government = neutrality
						} }
						random_list = {
							85 = {}
							15 = {
								set_unit_leader_to_JER_pony = yes
							}
						}
					}
					else_if = {
						limit = { var:creator = { 
							original_tag = CYA
							has_government = communism
						} }
						random_list = {
							85 = {}
							15 = {
								set_unit_leader_to_minotaur = yes
							}
						}
					}
					else_if = {
						limit = { var:creator = { 
							original_tag = WIN
						} }
						random_list = {
							25 = {}
							25 = {
								set_unit_leader_to_generic_pony = yes
							}
							25 = {
								set_unit_leader_to_herzlander = yes
								give_WNG_name = yes
							}
							25 = {
								set_unit_leader_to_hippogriff = yes
							}
						}
					}
					else_if = {
						limit = { var:creator = { 
							original_tag = KLG
						} }
						random_list = {
							30 = {}
							35 = {
								set_unit_leader_to_generic_pony = yes
							}
							35 = {
								set_unit_leader_to_cat = yes
							}
						}
					}
				}
				if = {
					# double check is intentional
					limit = {
						has_unit_leader_race_trait = no
					}
					if = {
						limit = {
							var:creator = { tag = NCR }
						}
						add_unit_leader_trait = human_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_changeling_portraits = yes
								}
							}
						}
						add_unit_leader_trait = changeling_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_yak_portraits = yes
								}
							}
						}
						add_unit_leader_trait = yak_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_diamond_dog_portraits = yes
								}
							}
						}
						add_unit_leader_trait = diamond_dog_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_deer_portraits = yes
								}
							}
						}
						add_unit_leader_trait = deer_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_undead_portraits = yes
								}
							}
						}
						add_unit_leader_trait = undead_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_minotaur_portraits = yes
								}
							}
						}
						add_unit_leader_trait = minotaur_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_penguin_portraits = yes
								}
							}
						}
						add_unit_leader_trait = penguin_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_bear_portraits = yes
								}
							}
						}
						add_unit_leader_trait = bear_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_buffalo_portraits = yes
								}
							}
						}
						add_unit_leader_trait = buffalo_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_camel_portraits = yes
								}
							}
						}
						add_unit_leader_trait = camel_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_cat_portraits = yes
								}
							}
						}
						add_unit_leader_trait = cat_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_centaur_portraits = yes
								}
							}
						}
						add_unit_leader_trait = centaur_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_donkey_portraits = yes
								}
							}
						}
						add_unit_leader_trait = donkey_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_dragon_portraits = yes
								}
							}
						}
						add_unit_leader_trait = dragon_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_thestral_portraits = yes
								}
							}
						}
						add_unit_leader_trait = thestral_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_griffon_generic_portraits = yes
									uses_griffon_WNG_portraits = yes
								}
							}
						}
						add_unit_leader_trait = griffon_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_gargoyle_portraits = yes
								}
							}
						}
						add_unit_leader_trait = gargoyle_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_giraffe_portraits = yes
								}
							}
						}
						add_unit_leader_trait = giraffe_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_pony_generic_portraits = yes
									uses_pony_EQS_portraits = yes
									uses_pony_CRY_portraits = yes
									uses_pony_STG_portraits = yes
									uses_pony_RIV_portraits = yes
								}
							}
						}
						add_unit_leader_trait = pony_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_zebra_portraits = yes
								}
							}
						}
						add_unit_leader_trait = zebra_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_horse_portraits = yes
								}
							}
						}
						add_unit_leader_trait = horse_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_hippogriff_portraits = yes
								}
							}
						}
						add_unit_leader_trait = hippogriff_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_kirin_portraits = yes
								}
							}
						}
						add_unit_leader_trait = kirin_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_llama_portraits = yes
								}
							}
						}
						add_unit_leader_trait = llama_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_harpy_portraits = yes
								}
							}
						}
						add_unit_leader_trait = harpy_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									uses_yeti_portraits = yes
								}
							}
						}
						add_unit_leader_trait = yeti_race_trait
					}
					else_if = {
						limit = {
							var:creator = {
								capital_scope = {
									is_on_continent = asia # griffonia
								}
							}
						}
						add_unit_leader_trait = griffon_race_trait
					}
					else_if = {
						limit = {
							var:creator = { 
								capital_scope = {
									is_on_continent = europe # equestria
								}
							}
						}
						add_unit_leader_trait = pony_race_trait
					}
					else_if = {
						limit = {
							var:creator = { 
								capital_scope = {
									is_on_continent = africa # zebrica
								}
							}
						}
						add_unit_leader_trait = zebra_race_trait
					}
				}
				if = {
					limit = {
						has_unit_leader_flag = generated
						has_trait = griffon_race_trait
					}
					if = {
						limit = {
							var:creator = {
								OR = {
									is_griffon_empire_country = yes
									original_tag = FAT
									original_tag = FAW
									original_tag = GRW
									tag = GRD
								}
							}
						}
						random_list = {
							20 = {

							}
							80 = {
								var:creator = { get_random_griffon_core_name = yes }
							}
						}
					}
					else_if = {
						limit = {
							var:creator = {
								original_tag = GRU
								NOT = { has_government = communism }
							}
						}
						random_list = {
							20 = {}
							10 = {
								modifier = {
									factor = 2
									var:creator = {
										has_completed_focus = GRU_the_company_takes_over
									}
								}
								give_SIC_name = yes
							}
							80 = {
								give_herzlander_name = yes
							}
						}
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									original_tag = GRF
									original_tag = GFF
								}
							}
						}
						random_list = {
							50 = {}
							15 = {
								give_FEA_name = yes
							}
							25 = {
								give_JER_name = yes
							}
							15 = {
								give_TRD_name = yes
							}
							5 = {
								give_WNG_name = yes
							}
						}
					}
					else_if = {
						limit = {
							var:creator = {
								OR = {
									original_tag = TRD
									original_tag = FEZ
								}
							}
						}
						random_list = {
							50 = {
								modifier = {
									factor = 2
									var:creator = { original_tag = FEZ }
								}
							}
							10 = {
								give_FEA_name = yes
							}
							15 = {
								give_JER_name = yes
							}
							15 = {
								give_herzlander_name = yes
							}
							10 = {
								modifier = {
									factor = 2.5
									var:creator = { original_tag = FEZ }
								}
								give_WNG_name = yes
							}
						}
					}
					else_if = {
						limit = {
							var:creator = {
								original_tag = EYR
							}
						}
						random_list = {
							67 = {
							}
							33 = {
								give_JER_name = yes
							}
						}
					}
					else_if = {
						limit = {
							var:creator = {
								original_tag = ERI
							}
						}
						random_list = {
							67 = {
							}
							33 = {
								give_herzlander_name = yes
							}
						}
					}
				}
				if = {
					limit = {
						is_army_leader = yes
						var:creator = {
							original_tag = CTH
							has_completed_focus = CTH_medical_science
						}
					}
					add_unit_leader_trait = healthy_trait
				}
				clr_unit_leader_flag = generated
			}
			else = {
				log = "on_unit_leader_created: ROOT: [Root.GetName] is operative"
				#operative_handle_secondary_cultures_races = yes
				log = "on_unit_leader_created: ROOT: [Root.GetName] call operative_add_starting_nationalities_and_race"
				operative_add_starting_nationalities_and_race = yes
				log = "on_unit_leader_created: ROOT: [Root.GetName] call operative_add_secondary_nationalities"
				operative_add_secondary_nationalities = yes
			}
			log = "[GetDateText]: ROOT: [Root.GetName] FROM: [From.GetName] on_unit_leader_created - End"
		}
	}

	# scope is operative
	# from scope is the country 
	on_operative_recruited = {
		effect = {
			log = "[GetDateText]: ROOT: [Root.GetName] FROM: [From.GetName] on_operative_recruited"
			operative_add_starting_nationalities_and_race = yes
			operative_add_secondary_nationalities = yes
		}
	}
	
	# scope is operative
	# from scope is the country 
	on_operative_created = {
		effect = {
			log = "[GetDateText]: ROOT: [Root.GetName] FROM: [From.GetName] on_operative_created"
			operative_handle_secondary_cultures_races = yes
			operative_add_starting_nationalities_and_race = yes
			operative_add_secondary_nationalities = yes
			if = {
				limit = {
					FROM = {
						original_tag = TBK
						has_completed_focus = TBK_vasile_breezies
					}
				}
				add_unit_leader_trait = operative_seducer
			}
		}
	}
}